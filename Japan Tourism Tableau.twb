<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <ParameterAction />
    <ParameterActionClearSelection />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
        <calculation class='tableau' formula='&quot;Prefecture&quot;' />
        <members>
          <member value='&quot;Prefecture&quot;' />
          <member value='&quot;Region&quot;' />
        </members>
      </column>
      <column caption='Location Parameter' datatype='string' name='[Location Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Tokyo&quot;'>
        <calculation class='tableau' formula='&quot;Tokyo&quot;' />
      </column>
      <column caption='Region Filter Parameter' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
        <calculation class='tableau' formula='&quot;Japan&quot;' />
      </column>
      <column caption='Location Name Parameter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
        <calculation class='tableau' formula='&quot;Japan&quot;' />
      </column>
      <column caption='Region Name Parameter' datatype='string' datatype-customized='true' name='[Region Name Parameter (copy)_3340685791351832577]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
        <calculation class='tableau' formula='&quot;Japan&quot;' />
      </column>
      <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Kanto&quot;'>
        <calculation class='tableau' formula='&quot;Kanto&quot;' />
      </column>
    </datasource>
    <datasource caption='japan_tourism_stats' inline='true' name='federated.1lefucz087gidl18izef303lvjn7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='japan_tourism_stats' name='textscan.057zbwi1c96ss211xsupa0cm4rai'>
            <connection class='textscan' directory='/Users/isaacjeon/Documents/CU Boulder/Extra Projects/Japan Tourism Segmentation' filename='japan_tourism_stats.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.057zbwi1c96ss211xsupa0cm4rai' name='japan_tourism_stats.csv' table='[japan_tourism_stats#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='string' name='geographic_level' ordinal='1' />
            <column datatype='string' name='category' ordinal='2' />
            <column datatype='string' name='label' ordinal='3' />
            <column datatype='real' name='percentage' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[japan_tourism_stats.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[japan_tourism_stats.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geographic_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geographic_level]</local-name>
            <parent-name>[japan_tourism_stats.csv]</parent-name>
            <remote-alias>geographic_level</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[japan_tourism_stats.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[label]</local-name>
            <parent-name>[japan_tourism_stats.csv]</parent-name>
            <remote-alias>label</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[japan_tourism_stats.csv]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='All Labels Selected' datatype='boolean' name='[All Locations Selected (copy)_2786320824600862728]' role='measure' type='nominal'>
        <calculation class='tableau' formula='{FIXED [category]: COUNTD([label])} =&#10;{EXCLUDE [label]: COUNTD([label])}' />
      </column>
      <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
      </column>
      <column caption='Top Label Proportion' datatype='real' default-format='p0.00%' name='[Calculation_1253478469585362944]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_1124985142687883265]) / TOTAL(COUNT([Calculation_1124985142687883265]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sex' datatype='string' name='[Calculation_1821354235342491648]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [category] = &quot;Sex/Age&quot;&#10;THEN SPLIT ([label], &quot;/&quot;, 1)&#10;ELSE NULL&#10;END' />
      </column>
      <column caption='Age' datatype='string' name='[Calculation_1821354235342630913]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [category] = &quot;Sex/Age&quot; THEN SPLIT([label], &quot;/&quot;, 2)&#10;ELSE NULL&#10;END' />
      </column>
      <column caption='Default Location' datatype='string' name='[Calculation_3192841059803959297]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;&#10;    AND ([Parameters].[Parameter 2] != &quot;Japan&quot;&#10;        OR [Parameters].[Parameter 1] = &quot;Japan&quot;)&#10;THEN [Parameters].[Location Parameter]&#10;ELSE [Parameters].[Region Parameter]&#10;END' />
      </column>
      <column caption='Map Location' datatype='string' name='[Calculation_3340685791352938498]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Region Name Parameter (copy)_3340685791351832577] = &quot;Japan&quot;&#10;THEN &quot;Japan&quot;&#10;ELSEIF [Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;&#10;    AND [Parameters].[Parameter 2] != &quot;Japan&quot;&#10;THEN [Parameters].[Parameter 2] + &quot;,&quot; + CHAR(10)&#10;    + [Parameters].[Region Name Parameter (copy)_3340685791351832577] + &quot; Region&quot;&#10;ELSE [Parameters].[Region Name Parameter (copy)_3340685791351832577] + &quot;,&quot; + CHAR(10) + &quot;Japan&quot;&#10;END' />
      </column>
      <column caption='Location Count Label' datatype='string' name='[Calculation_4449837938710560768]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;# of Selected &quot; + [Parameters].[Geographic Level Parameter] + &quot;s&quot;' />
      </column>
      <column caption='Start of Range' datatype='integer' name='[Calculation_694891379376308225]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(REGEXP_EXTRACT([label], &quot;(\d+)&quot;))' />
      </column>
      <column caption='Range Label' datatype='string' name='[Calculation_813744188310790145]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REPLACE([label], &quot; days&quot;, &quot;&quot;)' />
      </column>
      <column caption='Top Label Total Count' datatype='integer' name='[Calculation_874824258274406402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(COUNT([Calculation_1124985142687883265]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Location Count' datatype='integer' name='[Calculation_922041685632684038]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#10;    IF [geographic_level] = [Parameters].[Geographic Level Parameter]&#10;    THEN [location]&#10;    END&#10;)' />
      </column>
      <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[location]' new-bin='true'>
          <bin default-name='false' value='&quot;Chubu&quot;'>
            <value>&quot;Aichi&quot;</value>
            <value>&quot;Chubu&quot;</value>
            <value>&quot;Fukui&quot;</value>
            <value>&quot;Gifu&quot;</value>
            <value>&quot;Mie&quot;</value>
            <value>&quot;Shizuoka&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Chugoku&quot;'>
            <value>&quot;Chugoku&quot;</value>
            <value>&quot;Hiroshima&quot;</value>
            <value>&quot;Okayama&quot;</value>
            <value>&quot;Shimane&quot;</value>
            <value>&quot;Tottori&quot;</value>
            <value>&quot;Yamaguchi&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Hokkaido&quot;'>
            <value>&quot;Hokkaido&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
            <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
            <value>&quot;Ishikawa&quot;</value>
            <value>&quot;Nagano&quot;</value>
            <value>&quot;Niigata&quot;</value>
            <value>&quot;Toyama&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Kanto&quot;'>
            <value>&quot;Chiba&quot;</value>
            <value>&quot;Gunma&quot;</value>
            <value>&quot;Ibaraki&quot;</value>
            <value>&quot;Kanagawa&quot;</value>
            <value>&quot;Kanto&quot;</value>
            <value>&quot;Saitama&quot;</value>
            <value>&quot;Tochigi&quot;</value>
            <value>&quot;Tokyo&quot;</value>
            <value>&quot;Yamanashi&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Kinki&quot;'>
            <value>&quot;Hyogo&quot;</value>
            <value>&quot;Kinki&quot;</value>
            <value>&quot;Kyoto&quot;</value>
            <value>&quot;Nara&quot;</value>
            <value>&quot;Osaka&quot;</value>
            <value>&quot;Shiga&quot;</value>
            <value>&quot;Wakayama&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Kyushu&quot;'>
            <value>&quot;Fukuoka&quot;</value>
            <value>&quot;Kagoshima&quot;</value>
            <value>&quot;Kumamoto&quot;</value>
            <value>&quot;Kyushu&quot;</value>
            <value>&quot;Miyazaki&quot;</value>
            <value>&quot;Nagasaki&quot;</value>
            <value>&quot;Oita&quot;</value>
            <value>&quot;Saga&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Okinawa&quot;'>
            <value>&quot;Okinawa&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Shikoku&quot;'>
            <value>&quot;Ehime&quot;</value>
            <value>&quot;Kagawa&quot;</value>
            <value>&quot;Kochi&quot;</value>
            <value>&quot;Shikoku&quot;</value>
            <value>&quot;Tokushima&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Tohoku&quot;'>
            <value>&quot;Akita&quot;</value>
            <value>&quot;Aomori&quot;</value>
            <value>&quot;Fukushima&quot;</value>
            <value>&quot;Iwate&quot;</value>
            <value>&quot;Miyagi&quot;</value>
            <value>&quot;Tohoku&quot;</value>
            <value>&quot;Yamagata&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Top Label Percentage' datatype='real' default-format='p0.00%' name='[Top Label (copy)_1883560205217689603]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [percentage]&#10;END' />
      </column>
      <column caption='japan_tourism_stats.csv' datatype='table' name='[__tableau_internal_object_id__].[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
        </aliases>
      </column>
      <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Prefecture&quot;' value='Prefectures' />
          <alias key='&quot;Region&quot;' value='Regions' />
        </aliases>
      </column>
      <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='Min' name='[min:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1821354235342491648]' derivation='None' name='[none:Calculation_1821354235342491648:nk]' pivot='key' type='nominal' />
      <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <group caption='Action (Default Location,Label)' hidden='true' name='[Action (Default Location,Label)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_3192841059803959297]' />
          <groupfilter function='level-members' level='[label]' />
        </groupfilter>
      </group>
      <group caption='Action (Geographic Level,Label)' hidden='true' name='[Action (Geographic Level,Label)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[geographic_level]' />
          <groupfilter function='level-members' level='[label]' />
        </groupfilter>
      </group>
      <group caption='Action (Label)' hidden='true' name='[Action (Label)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[label]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Location (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,Location)' hidden='true' name='[Action (Region,Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Location (group)]' />
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (Top Label)' hidden='true' name='[Action (Top Label)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1124985142687883265]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Label)' hidden='true' name='[Tooltip (Label)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[label]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Label,Location)' hidden='true' name='[Tooltip (Label,Location)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[label]' />
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Location)' hidden='true' name='[Tooltip (Location)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Region)' hidden='true' name='[Tooltip (Region)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Location (group)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Region,Location)' hidden='true' name='[Tooltip (Region,Location)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Location (group)]' />
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category Hierarchy'>
          <field>[category]</field>
          <field>[label]</field>
        </drill-path>
        <drill-path name='Geography Hierarchy'>
          <field>[geographic_level]</field>
          <field>[Location (group)]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/42/mljs3ryd76gfqj1d92cyzkcc0000gn/T/tableau-temp/#TableauTemp_004tfpu18ikrgy13k0j1g0o3fd91.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/15/2025 10:06:19 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>japan_tourism_stats.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geographic_level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geographic_level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geographic_level</remote-alias>
              <ordinal>1</ordinal>
              <family>japan_tourism_stats.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>category</remote-alias>
              <ordinal>2</ordinal>
              <family>japan_tourism_stats.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>label</remote-name>
              <remote-type>129</remote-type>
              <local-name>[label]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>label</remote-alias>
              <ordinal>3</ordinal>
              <family>japan_tourism_stats.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>134</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percentage</remote-alias>
              <ordinal>4</ordinal>
              <family>japan_tourism_stats.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1903</approx-count>
              <contains-null>true</contains-null>
              <object-id>[japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niigata&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chubu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kumamoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kanto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Miyazaki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yamagata&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hokuriku-Shin&apos;etsu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gifu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shikoku&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyoto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyushu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shimane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yamanashi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tohoku&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gunma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kagoshima&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tokushima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Kinki&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ehime&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chugoku&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toyama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iwate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shiga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fukushima&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Akita&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Miyagi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wakayama&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niigata&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chubu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kumamoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kanto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Miyazaki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yamagata&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hokuriku-Shin&apos;etsu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gifu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shikoku&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyoto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyushu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shimane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yamanashi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tohoku&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gunma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kagoshima&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tokushima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Kinki&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ehime&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chugoku&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toyama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iwate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shiga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fukushima&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Akita&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Miyagi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wakayama&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1821354235342491648:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Location (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Tohoku&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kinki&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Chubu&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shikoku&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hokuriku-Shin&apos;etsu&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Chugoku&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kanto&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Kyushu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:label:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Drugstores&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Izuhara Port&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Male/20~29&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shinkansen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0~19&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0~20&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0~3 days&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;100 Yen Shops&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Airplane (within Japan)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Capsule hotel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Family member(s)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Female/0~19&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Group tour&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21~27 days&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;50~59&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Consumer electronics stores&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Female/50~59&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hakodate&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japanese-style inn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Long-distance buses&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spouse/partner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Toyama&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;14~20 days&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;40~49&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;I did not stay.&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Solo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Komatsu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Male/60~69&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other shopping centers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fashion boutiques&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kagoshima&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Male/30~39&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ships (within Japan)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Convenience stores&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Female/60~69&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haneda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Only by walking&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yonago&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;School dormitory/company-owned accommodation facility&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tourist souvenir shops&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accomodation facilities&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bicycle rental&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chubu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Female/20~29&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sakai Port&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10~19&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;70+&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;91+ days&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Narita&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stores at a port of call by cruise ship&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Department stores&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Female/70+&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Male/70+&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Miyazaki&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Outlet malls&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Youth hostel/guest house&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mt.Fuji Shizuoka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Railway station boutiques&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Chitose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Supermarkets&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;30~39&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7~13 days&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hotel (western style)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I did not go shopping.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kanmon (Shimonoseki) Port&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Male/40~49&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Package for individual travelers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suburban buses&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;28~90 days&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;6~9&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;60~69&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;My own pension/condominium&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Work colleague(s)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Discount stores&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Male/0~19&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Railway/monorail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20~29&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4~6 days&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Airport duty-free stores&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Car rental&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Female/30~39&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Friend(s)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Home of family/friends&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Independent travel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sendai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Naha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Service areas on expressways/Michi-no-eki (Road Stations)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kansai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Male/50~59&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taxies/limousine hires&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;20+&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Paid residential accommodation (Airbnb, Tujia, etc.)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chartered buses&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Commercial complexes in urban centers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Female/40~49&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hakata Port&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Takamatsu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Japan&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:location:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Aichi&quot;</bucket>
            <bucket>&quot;Akita&quot;</bucket>
            <bucket>&quot;Aomori&quot;</bucket>
            <bucket>&quot;Chiba&quot;</bucket>
            <bucket>&quot;Chubu&quot;</bucket>
            <bucket>&quot;Chugoku&quot;</bucket>
            <bucket>&quot;Ehime&quot;</bucket>
            <bucket>&quot;Fukui&quot;</bucket>
            <bucket>&quot;Fukuoka&quot;</bucket>
            <bucket>&quot;Fukushima&quot;</bucket>
            <bucket>&quot;Gifu&quot;</bucket>
            <bucket>&quot;Gunma&quot;</bucket>
            <bucket>&quot;Hiroshima&quot;</bucket>
            <bucket>&quot;Hokkaido&quot;</bucket>
            <bucket>&quot;Hokuriku-Shin&apos;etsu&quot;</bucket>
            <bucket>&quot;Hyogo&quot;</bucket>
            <bucket>&quot;Ibaraki&quot;</bucket>
            <bucket>&quot;Ishikawa&quot;</bucket>
            <bucket>&quot;Iwate&quot;</bucket>
            <bucket>&quot;Kagawa&quot;</bucket>
            <bucket>&quot;Kagoshima&quot;</bucket>
            <bucket>&quot;Kanagawa&quot;</bucket>
            <bucket>&quot;Kanto&quot;</bucket>
            <bucket>&quot;Kinki&quot;</bucket>
            <bucket>&quot;Kochi&quot;</bucket>
            <bucket>&quot;Kumamoto&quot;</bucket>
            <bucket>&quot;Kyoto&quot;</bucket>
            <bucket>&quot;Kyushu&quot;</bucket>
            <bucket>&quot;Mie&quot;</bucket>
            <bucket>&quot;Miyagi&quot;</bucket>
            <bucket>&quot;Miyazaki&quot;</bucket>
            <bucket>&quot;Nagano&quot;</bucket>
            <bucket>&quot;Nagasaki&quot;</bucket>
            <bucket>&quot;Nara&quot;</bucket>
            <bucket>&quot;Niigata&quot;</bucket>
            <bucket>&quot;Oita&quot;</bucket>
            <bucket>&quot;Okayama&quot;</bucket>
            <bucket>&quot;Okinawa&quot;</bucket>
            <bucket>&quot;Osaka&quot;</bucket>
            <bucket>&quot;Saga&quot;</bucket>
            <bucket>&quot;Saitama&quot;</bucket>
            <bucket>&quot;Shiga&quot;</bucket>
            <bucket>&quot;Shikoku&quot;</bucket>
            <bucket>&quot;Shimane&quot;</bucket>
            <bucket>&quot;Shizuoka&quot;</bucket>
            <bucket>&quot;Tochigi&quot;</bucket>
            <bucket>&quot;Tohoku&quot;</bucket>
            <bucket>&quot;Tokushima&quot;</bucket>
            <bucket>&quot;Tokyo&quot;</bucket>
            <bucket>&quot;Tottori&quot;</bucket>
            <bucket>&quot;Toyama&quot;</bucket>
            <bucket>&quot;Wakayama&quot;</bucket>
            <bucket>&quot;Yamagata&quot;</bucket>
            <bucket>&quot;Yamaguchi&quot;</bucket>
            <bucket>&quot;Yamanashi&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='location' />
        <field-sort-custom-order field='Calculation_922041685632684038' />
        <field-sort-custom-order field='Calculation_813744188324564994' />
        <field-sort-custom-order field='Calculation_2856619200043618304' />
        <field-sort-custom-order field='Calculation_2786320824594464768' />
        <field-sort-custom-order field='Multiple Value Default (copy)_2979694133642608642' />
        <field-sort-custom-order field='Test value (copy)_3129227715054137345' />
        <field-sort-custom-order field='Test value (copy)_2979694133645189123' />
        <field-sort-custom-order field='Test value (copy) (copy)_3050977671517380611' />
        <field-sort-custom-order field='Multiple Value Default (copy)_2917558532517724160' />
        <field-sort-custom-order field='Default Location (copy)_3129227715056009218' />
        <field-sort-custom-order field='Calculation_3129227715059056644' />
        <field-sort-custom-order field='Calculation_3050977671519129604' />
        <field-sort-custom-order field='Default Location (copy)_3050977671513714690' />
        <field-sort-custom-order field='Default Location (copy)_3050977671513104385' />
        <field-sort-custom-order field='Default Location (copy)_3050977671506067456' />
        <field-sort-custom-order field='Multiple Value Default Location (copy)_2979694133646692356' />
        <field-sort-custom-order field='Multiple Value Default Location (copy)_2979694133639684097' />
        <field-sort-custom-order field='Multiple Value Default (copy)_2856619200054296577' />
        <field-sort-custom-order field='All Locations Selected (copy)_2786320824600862728' />
        <field-sort-custom-order field='All Locations Selected (copy 3)_2786320824600576007' />
        <field-sort-custom-order field='All Locations Selected (copy 2)_2786320824599941126' />
        <field-sort-custom-order field='All Locations Selected (copy)_2786320824599908357' />
        <field-sort-custom-order field='geographic_level' />
        <field-sort-custom-order field='Calculation_3629479114904969217' />
        <field-sort-custom-order field='category' />
        <field-sort-custom-order field='label' />
        <field-sort-custom-order field='Calculation_813744188310790145' />
        <field-sort-custom-order field='Calculation_694891379376308225' />
        <field-sort-custom-order field='Calculation_1821354235342630913' />
        <field-sort-custom-order field='Calculation_1821354235342491648' />
        <field-sort-custom-order field='percentage' />
        <field-sort-custom-order field='Calculation_1124985142685224960' />
        <field-sort-custom-order field='Calculation_1124985142687883265' />
        <field-sort-custom-order field='Calculation_874824258274406402' />
        <field-sort-custom-order field='Top Label (copy)_874824258271535104' />
        <field-sort-custom-order field='Top Label (copy)_2026549493420593152' />
        <field-sort-custom-order field='Top Label (copy)_1883560205217689603' />
        <field-sort-custom-order field='Calculation_1883560205211242498' />
        <field-sort-custom-order field='Calculation_1883560205209202689' />
        <field-sort-custom-order field='Calculation_1253478469585362944' />
        <field-sort-custom-order field='Calculation_1124985142688210946' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
          <calculation class='tableau' formula='&quot;Prefecture&quot;' />
        </column>
        <column caption='Location Parameter' datatype='string' name='[Location Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Tokyo&quot;'>
          <calculation class='tableau' formula='&quot;Tokyo&quot;' />
        </column>
        <column caption='Region Filter Parameter' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
          <calculation class='tableau' formula='&quot;Japan&quot;' />
        </column>
        <column caption='Location Name Parameter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
          <calculation class='tableau' formula='&quot;Japan&quot;' />
        </column>
        <column caption='Region Name Parameter' datatype='string' datatype-customized='true' name='[Region Name Parameter (copy)_3340685791351832577]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
          <calculation class='tableau' formula='&quot;Japan&quot;' />
        </column>
        <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Kanto&quot;'>
          <calculation class='tableau' formula='&quot;Kanto&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='japan_tourism_stats.csv' id='japan_tourism_stats.csv_9D19F2A293A244D9A2D1429F899C15C6'>
            <properties context=''>
              <relation connection='textscan.057zbwi1c96ss211xsupa0cm4rai' name='japan_tourism_stats.csv' table='[japan_tourism_stats#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='string' name='geographic_level' ordinal='1' />
                  <column datatype='string' name='category' ordinal='2' />
                  <column datatype='string' name='label' ordinal='3' />
                  <column datatype='real' name='percentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Bar Plot to Map Highlight' name='[Action13_EA4768B164F646E88587EDB67E93C566]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard' type='sheet' worksheet='Percentage by Location' />
      <command command='tsc:brush'>
        <param name='exclude' value='Treemap,Stacked Bar,Region Filter,Map Title,Location Counts,Top Percentages,Percentage by Location,Age Line Plot' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Region Filter Highlight' name='[Action14_3F090701200B447BAE6D2FE1FCCBD31E]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard' type='sheet' worksheet='Region Filter' />
      <command command='tsc:brush'>
        <param name='exclude' value='Top Percentages,Treemap,Stacked Bar,Region Filter,Map Title,Location Counts,Age Line Plot' />
        <param name='field-captions' value='Region' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_C72C742DE36B42B58C31E99785412F4C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Percentage by Location' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_7C569B676AD54DB8ABCF795BF4DC9BAA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet'>
        <exclude-sheet name='Stacked Bar' />
        <exclude-sheet name='Region Filter' />
        <exclude-sheet name='Prefectural Map (2)' />
        <exclude-sheet name='Regional Map (2)' />
        <exclude-sheet name='Regional Map' />
        <exclude-sheet name='Prefectural Map' />
        <exclude-sheet name='Top Percentages' />
        <exclude-sheet name='Percentage by Location' />
        <exclude-sheet name='Map Title' />
        <exclude-sheet name='Location Counts' />
        <exclude-sheet name='Age Line Plot' />
      </source>
      <link caption='Filter 1 (generated)' delimiter=',' escape='\' expression='tsl:Dashboard?%5Bfederated.1lefucz087gidl18izef303lvjn7%5D.%5BCalculation_1124985142687883265%5D~s0=&lt;[federated.1lefucz087gidl18izef303lvjn7].[Calculation_1124985142687883265]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Top Percentages,Map Title,Treemap,Stacked Bar,Age Line Plot' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_A48644C73CC8408F9582687B39F20A43]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Region Filter' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Top Percentages,Age Line Plot' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_0CB3B4215177469F856ECAE051EEA0D5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Prefectural Map (2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_995D69A7D87348E198B12AD06085F8DA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Prefectural Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_9D79C542C5574D9CA67BCA0D8CC15A6F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Regional Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action9_CF44071598AA4E1CA2659F1F46DFECC9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Regional Map (2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
    </datasources>
    <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
      <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
      </column>
    </datasource-dependencies>
    <edit-parameter-action caption='Region Filter Action' name='[Action10_57BFD034E642415A8B63027CDF9AC70A]'>
      <activation type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Region Filter' />
      <agg-type type='min' />
      <clear-option type='assign-fixed-value' value='s:LROOT:Japan' />
      <params>
        <param name='source-field' value='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
        <param name='target-parameter' value='[Parameters].[Parameter 1]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='Region Action' name='[Action10_C93520CF83F64BC888F1CE0E0B6B34A2]'>
      <activation type='on-select' />
      <source dashboard='Dashboard' type='sheet'>
        <exclude-sheet name='Top Percentages' />
        <exclude-sheet name='Treemap' />
        <exclude-sheet name='Stacked Bar' />
        <exclude-sheet name='Prefectural Map (2)' />
        <exclude-sheet name='Prefectural Map' />
        <exclude-sheet name='Map Title' />
        <exclude-sheet name='Location Counts' />
        <exclude-sheet name='Age Line Plot' />
      </source>
      <agg-type type='min' />
      <clear-option type='assign-fixed-value' value='s:LROOT:Kanto' />
      <params>
        <param name='source-field' value='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
        <param name='target-parameter' value='[Parameters].[Region Parameter]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='Location Name Parameter' name='[Action11_339E4830AB2D46B8B0DAEA3F0638DC84]'>
      <activation type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Percentage by Location' />
      <agg-type type='attr' />
      <clear-option type='assign-fixed-value' value='s:LROOT:Japan' />
      <params>
        <param name='source-field' value='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' />
        <param name='target-parameter' value='[Parameters].[Parameter 2]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='Region Name Action' name='[Action12_B287DB3F44B043BF9556E769523E9E5D]'>
      <activation type='on-select' />
      <source dashboard='Dashboard' type='sheet'>
        <exclude-sheet name='Top Percentages' />
        <exclude-sheet name='Treemap' />
        <exclude-sheet name='Stacked Bar' />
        <exclude-sheet name='Prefectural Map (2)' />
        <exclude-sheet name='Regional Map (2)' />
        <exclude-sheet name='Regional Map' />
        <exclude-sheet name='Prefectural Map' />
        <exclude-sheet name='Map Title' />
        <exclude-sheet name='Location Counts' />
        <exclude-sheet name='Age Line Plot' />
      </source>
      <agg-type type='attr' />
      <clear-option type='assign-fixed-value' value='s:LROOT:Japan' />
      <params>
        <param name='source-field' value='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
        <param name='target-parameter' value='[Parameters].[Region Name Parameter (copy)_3340685791351832577]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='Location Action' name='[Action8_85186F9D66C0454FB6B6F5172EF21C7C]'>
      <activation type='on-select' />
      <source dashboard='Dashboard' type='sheet'>
        <exclude-sheet name='Top Percentages' />
        <exclude-sheet name='Treemap' />
        <exclude-sheet name='Stacked Bar' />
        <exclude-sheet name='Regional Map (2)' />
        <exclude-sheet name='Regional Map' />
        <exclude-sheet name='Region Filter' />
        <exclude-sheet name='Map Title' />
        <exclude-sheet name='Location Counts' />
        <exclude-sheet name='Age Line Plot' />
      </source>
      <agg-type type='min' />
      <clear-option type='assign-fixed-value' value='s:LROOT:Tokyo' />
      <params>
        <param name='source-field' value='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' />
        <param name='target-parameter' value='[Parameters].[Location Parameter]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Age Line Plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Age vs. Percentage by Sex (&lt;</run>
            <run fontalignment='1' fontsize='12'>[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]</run>
            <run fontalignment='1' fontsize='12'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
            <column caption='Location Parameter' datatype='string' name='[Location Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Tokyo&quot;'>
              <calculation class='tableau' formula='&quot;Tokyo&quot;' />
            </column>
            <column caption='Region Filter Parameter' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Location Name Parameter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Kanto&quot;'>
              <calculation class='tableau' formula='&quot;Kanto&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Sex' datatype='string' name='[Calculation_1821354235342491648]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [category] = &quot;Sex/Age&quot;&#10;THEN SPLIT ([label], &quot;/&quot;, 1)&#10;ELSE NULL&#10;END' />
            </column>
            <column caption='Age' datatype='string' name='[Calculation_1821354235342630913]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [category] = &quot;Sex/Age&quot; THEN SPLIT([label], &quot;/&quot;, 2)&#10;ELSE NULL&#10;END' />
            </column>
            <column caption='Default Location' datatype='string' name='[Calculation_3192841059803959297]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;&#10;    AND ([Parameters].[Parameter 2] != &quot;Japan&quot;&#10;        OR [Parameters].[Parameter 1] = &quot;Japan&quot;)&#10;THEN [Parameters].[Location Parameter]&#10;ELSE [Parameters].[Region Parameter]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1821354235342491648]' derivation='None' name='[none:Calculation_1821354235342491648:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1821354235342630913]' derivation='None' name='[none:Calculation_1821354235342630913:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3192841059803959297]' derivation='None' name='[none:Calculation_3192841059803959297:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_0CB3B4215177469F856ECAE051EEA0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action6_9D79C542C5574D9CA67BCA0D8CC15A6F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_995D69A7D87348E198B12AD06085F8DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342630913:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Sex/Age&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]' filter-group='7'>
            <groupfilter expression='IF [Parameters].[Parameter 1] != &quot;Japan&quot;&#10;    AND [Parameters].[Parameter 2] = &quot;Japan&quot;&#10;THEN [geographic_level] = &quot;Region&quot;&#10;ELSE [geographic_level] = [Parameters].[Geographic Level Parameter]&#10;END' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:geographic_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]'>
            <groupfilter function='level-members' level='[none:label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='3'>
            <groupfilter expression='[location] = [Calculation_3192841059803959297]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342630913:nk]' value='0' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#ffffff' />
            <format attr='border-width' value='1' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-width' field='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342491648:nk]' id='legend-color' value='1' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342491648:nk]' id='legend-color' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342491648:nk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Sex:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342491648:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Age:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342630913:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Percentage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]</rows>
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342630913:nk]</cols>
      </table>
      <simple-id uuid='{26D8B164-3251-46C8-BFC5-2BB4EF3C6267}' />
    </worksheet>
    <worksheet name='Bubbles'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'><![CDATA[Percentages by <[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]>]]></run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='12'><![CDATA[(<[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]>)]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
            <column caption='Location Parameter' datatype='string' name='[Location Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Tokyo&quot;'>
              <calculation class='tableau' formula='&quot;Tokyo&quot;' />
            </column>
            <column caption='Region Filter Parameter' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Location Name Parameter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Kanto&quot;'>
              <calculation class='tableau' formula='&quot;Kanto&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Default Location' datatype='string' name='[Calculation_3192841059803959297]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;&#10;    AND ([Parameters].[Parameter 2] != &quot;Japan&quot;&#10;        OR [Parameters].[Parameter 1] = &quot;Japan&quot;)&#10;THEN [Parameters].[Location Parameter]&#10;ELSE [Parameters].[Region Parameter]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3192841059803959297]' derivation='None' name='[none:Calculation_3192841059803959297:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_0CB3B4215177469F856ECAE051EEA0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action6_9D79C542C5574D9CA67BCA0D8CC15A6F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_995D69A7D87348E198B12AD06085F8DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Means of Transportation&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]' filter-group='7'>
            <groupfilter expression='IF [Parameters].[Parameter 1] != &quot;Japan&quot;&#10;    AND [Parameters].[Parameter 2] = &quot;Japan&quot;&#10;THEN [geographic_level] = &quot;Region&quot;&#10;ELSE [geographic_level] = [Parameters].[Geographic Level Parameter]&#10;END' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:geographic_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' direction='DESC' using='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='3'>
            <groupfilter expression='[location] = [Calculation_3192841059803959297]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='156' />
            <format attr='height' value='182' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' />
              <size column='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]' />
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Default Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Group:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Percentage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F6F2C168-26C0-4EE7-B39F-E63AEB8D217E}' />
    </worksheet>
    <worksheet name='Location Counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
            </column>
            <column caption='Location Count Label' datatype='string' name='[Calculation_4449837938710560768]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;# of Selected &quot; + [Parameters].[Geographic Level Parameter] + &quot;s&quot;' />
            </column>
            <column caption='Location Count' datatype='integer' name='[Calculation_922041685632684038]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#10;    IF [geographic_level] = [Parameters].[Geographic Level Parameter]&#10;    THEN [location]&#10;    END&#10;)' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_4449837938710560768]' derivation='None' name='[none:Calculation_4449837938710560768:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_922041685632684038]' derivation='User' name='[usr:Calculation_922041685632684038:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action3_A48644C73CC8408F9582687B39F20A43]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_995D69A7D87348E198B12AD06085F8DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]'>
            <groupfilter function='level-members' level='[Calculation_1124985142687883265]' user:ui-action-filter='[Action3_7C569B676AD54DB8ABCF795BF4DC9BAA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='56' />
            <format attr='width' field='[Parameters].[Geographic Level Parameter]' value='68' />
            <format attr='width' field='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_4449837938710560768:nk]' value='83' />
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='font-size' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[usr:Calculation_922041685632684038:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_4449837938710560768:nk]</cols>
      </table>
      <simple-id uuid='{CC1E8635-C21E-4FE0-A660-A4B5A00D0233}' />
    </worksheet>
    <worksheet name='Map Title'>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
            <column caption='Location Name Parameter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Region Name Parameter' datatype='string' datatype-customized='true' name='[Region Name Parameter (copy)_3340685791351832577]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Map Location' datatype='string' name='[Calculation_3340685791352938498]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Region Name Parameter (copy)_3340685791351832577] = &quot;Japan&quot;&#10;THEN &quot;Japan&quot;&#10;ELSEIF [Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;&#10;    AND [Parameters].[Parameter 2] != &quot;Japan&quot;&#10;THEN [Parameters].[Parameter 2] + &quot;,&quot; + CHAR(10)&#10;    + [Parameters].[Region Name Parameter (copy)_3340685791351832577] + &quot; Region&quot;&#10;ELSE [Parameters].[Region Name Parameter (copy)_3340685791351832577] + &quot;,&quot; + CHAR(10) + &quot;Japan&quot;&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3340685791352938498]' derivation='None' name='[none:Calculation_3340685791352938498:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_0CB3B4215177469F856ECAE051EEA0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action3_A48644C73CC8408F9582687B39F20A43]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C72C742DE36B42B58C31E99785412F4C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='268' />
            <format attr='height' value='55' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='9' />
            <format attr='font-size' data-class='total' scope='rows' value='9' />
            <format attr='wrap' value='auto' />
            <format attr='text-align' value='right' />
            <format attr='vertical-align' value='bottom' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' scope='rows' value='auto' />
            <format attr='text-align' data-class='subtotal' value='auto' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='auto' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='15' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3340685791352938498:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6466AEF1-0EB8-4AC4-92C8-B241685E5C04}' />
    </worksheet>
    <worksheet name='Percentage by Group'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage by &lt;</run>
            <run>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[percentage]' derivation='Avg' name='[avg:percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Tooltip (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action - Percentage by Group]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Tooltip (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action - Percentage by Group]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' context='true' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]'>
            <groupfilter expression='[geographic_level] = [Parameters].[Geographic Level Parameter]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:geographic_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' direction='ASC' />
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Tooltip (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Tooltip (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lefucz087gidl18izef303lvjn7].[avg:percentage:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[avg:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[avg:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' />
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[avg:percentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</rows>
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[avg:percentage:qk]</cols>
      </table>
      <simple-id uuid='{3F085634-A15D-4AC5-B91A-D1FB854A2319}' />
    </worksheet>
    <worksheet name='Percentage by Location'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'><![CDATA[Total Percentages of Selected Group(s) from <]]></run>
            <run fontalignment='1' fontsize='12'>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</run>
            <run fontalignment='1' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[category]' derivation='Attribute' name='[attr:category:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_7719BC68034144BC899FD1A975C12F27]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action3_A8D8D5462F7E4463BE69BB6E973427C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_995D69A7D87348E198B12AD06085F8DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]'>
            <groupfilter function='level-members' level='[Calculation_1124985142687883265]' user:ui-action-filter='[Action3_7C569B676AD54DB8ABCF795BF4DC9BAA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' direction='ASC' />
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' context='true' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]'>
            <groupfilter expression='[geographic_level] = [Parameters].[Geographic Level Parameter]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:geographic_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' scope='cols' value='' />
            <format attr='height' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='47' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='20' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.00%' />
            <format attr='text-format' data-class='subtotal' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.00%' />
            <format attr='vertical-align' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='68' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='0' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
            <format attr='vertical-align' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='auto' />
            <format attr='vertical-align' value='auto' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' value='Group'>
              <formatted-text>
                <run fontalignment='1'>Group</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' value='Category'>
              <formatted-text>
                <run fontalignment='1'>Category</run>
              </formatted-text>
            </format>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' value='10' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
              <tooltip column='[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Percentage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]>]]></run>
                <run bold='true' fontcolor='#757575'>Æ </run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1'><![CDATA[Percentage by <[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#757575'><![CDATA[<Sheet name="Percentage by Group" maxwidth="300" maxheight="1000" filter="<[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]>">]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</rows>
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]</cols>
      </table>
      <simple-id uuid='{41D7AB8B-1821-4204-B5DB-603618E6442F}' />
    </worksheet>
    <worksheet name='Prefectural Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentages by Prefecture</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
            <column caption='Region Filter Parameter' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='All Labels Selected' datatype='boolean' name='[All Locations Selected (copy)_2786320824600862728]' role='measure' type='nominal'>
              <calculation class='tableau' formula='{FIXED [category]: COUNTD([label])} =&#10;{EXCLUDE [label]: COUNTD([label])}' />
            </column>
            <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[category]' derivation='Attribute' name='[attr:category:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[All Locations Selected (copy)_2786320824600862728]' derivation='Min' name='[min:All Locations Selected (copy)_2786320824600862728:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_0CB3B4215177469F856ECAE051EEA0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action3_A8D8D5462F7E4463BE69BB6E973427C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C72C742DE36B42B58C31E99785412F4C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]'>
            <groupfilter function='level-members' level='[Calculation_1124985142687883265]' user:ui-action-filter='[Action3_7C569B676AD54DB8ABCF795BF4DC9BAA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[min:All Locations Selected (copy)_2786320824600862728:nk]'>
            <groupfilter function='member' level='[min:All Locations Selected (copy)_2786320824600862728:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' context='true' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]'>
            <groupfilter expression='[Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:geographic_level:nk]' member='&quot;Prefecture&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[min:All Locations Selected (copy)_2786320824600862728:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' min='0.0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
              <tooltip column='[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]' />
              <geometry column='[federated.1lefucz087gidl18izef303lvjn7].[Geometry (generated)]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' />
              <lod column='[Parameters].[Geographic Level Parameter]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1'><![CDATA[Percentage by <[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#757575'><![CDATA[<Sheet name="Percentage by Group" maxwidth="300" maxheight="1000" filter="<[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]>">]]></run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]</rows>
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{445B05BD-0604-4380-B8C7-1C8A5832BE68}' />
    </worksheet>
    <worksheet name='Prefectural Map (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentages by Prefecture</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='All Labels Selected' datatype='boolean' name='[All Locations Selected (copy)_2786320824600862728]' role='measure' type='nominal'>
              <calculation class='tableau' formula='{FIXED [category]: COUNTD([label])} =&#10;{EXCLUDE [label]: COUNTD([label])}' />
            </column>
            <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[category]' derivation='Attribute' name='[attr:category:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[All Locations Selected (copy)_2786320824600862728]' derivation='Min' name='[min:All Locations Selected (copy)_2786320824600862728:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action3_A8D8D5462F7E4463BE69BB6E973427C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C72C742DE36B42B58C31E99785412F4C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]'>
            <groupfilter function='level-members' level='[Calculation_1124985142687883265]' user:ui-action-filter='[Action3_7C569B676AD54DB8ABCF795BF4DC9BAA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[min:All Locations Selected (copy)_2786320824600862728:nk]'>
            <groupfilter function='member' level='[min:All Locations Selected (copy)_2786320824600862728:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' context='true' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]'>
            <groupfilter expression='[Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:geographic_level:nk]' member='&quot;Prefecture&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[min:All Locations Selected (copy)_2786320824600862728:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' field-type='quantitative' max='17586562.495030023' min='13117802.0670186' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' field-type='quantitative' max='5722159.55390458' min='2711735.823812386' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' min='0.0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
              <tooltip column='[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' />
              <lod column='[Parameters].[Geographic Level Parameter]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
              <geometry column='[federated.1lefucz087gidl18izef303lvjn7].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Percentage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]>]]></run>
                <run bold='true' fontcolor='#757575'>Æ </run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1'><![CDATA[Percentage by <[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#757575'><![CDATA[<Sheet name="Percentage by Group" maxwidth="300" maxheight="1000" filter="<[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]>">]]></run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]</rows>
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{88B424D8-1DA3-4BC0-95D0-A39403D55E96}' />
    </worksheet>
    <worksheet name='Region Filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>Æ </run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='11'>Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Filter Parameter' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2_3950F70C25D14BD794D5185008DC94A5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action6_9D79C542C5574D9CA67BCA0D8CC15A6F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C72C742DE36B42B58C31E99785412F4C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]'>
            <groupfilter function='level-members' level='[Calculation_1124985142687883265]' user:ui-action-filter='[Action3_7C569B676AD54DB8ABCF795BF4DC9BAA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Hokkaido&quot;</bucket>
              <bucket>&quot;Tohoku&quot;</bucket>
              <bucket>&quot;Kanto&quot;</bucket>
              <bucket>&quot;Hokuriku-Shin&apos;etsu&quot;</bucket>
              <bucket>&quot;Chubu&quot;</bucket>
              <bucket>&quot;Kinki&quot;</bucket>
              <bucket>&quot;Chugoku&quot;</bucket>
              <bucket>&quot;Shikoku&quot;</bucket>
              <bucket>&quot;Kyushu&quot;</bucket>
              <bucket>&quot;Okinawa&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='27' />
            <format attr='height' field='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' value='23' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' value='21' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' value='auto' />
            <format attr='text-align' field='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' value='auto' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
              <lod column='[Parameters].[Parameter 1]' />
              <tooltip column='[federated.1lefucz087gidl18izef303lvjn7].[attr:location:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Region:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Prefecture(s):</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#757575'><![CDATA[<Sheet name="Selected Locations" maxwidth="300" maxheight="300" filter="<[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]>">]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]</rows>
        <cols />
      </table>
      <simple-id uuid='{1449AEB6-3414-41DD-AE50-F376F27DC51E}' />
    </worksheet>
    <worksheet name='Regional Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentages by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='All Labels Selected' datatype='boolean' name='[All Locations Selected (copy)_2786320824600862728]' role='measure' type='nominal'>
              <calculation class='tableau' formula='{FIXED [category]: COUNTD([label])} =&#10;{EXCLUDE [label]: COUNTD([label])}' />
            </column>
            <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[category]' derivation='Attribute' name='[attr:category:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[All Locations Selected (copy)_2786320824600862728]' derivation='Min' name='[min:All Locations Selected (copy)_2786320824600862728:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_0CB3B4215177469F856ECAE051EEA0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action3_A8D8D5462F7E4463BE69BB6E973427C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C72C742DE36B42B58C31E99785412F4C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]'>
            <groupfilter function='level-members' level='[Calculation_1124985142687883265]' user:ui-action-filter='[Action3_7C569B676AD54DB8ABCF795BF4DC9BAA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[min:All Locations Selected (copy)_2786320824600862728:nk]'>
            <groupfilter function='member' level='[min:All Locations Selected (copy)_2786320824600862728:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' context='true' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]'>
            <groupfilter expression='[Parameters].[Geographic Level Parameter] = &quot;Region&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:geographic_level:nk]' member='&quot;Region&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[min:All Locations Selected (copy)_2786320824600862728:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' min='0.0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[location]' value='false' />
            <format attr='break-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[location]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lefucz087gidl18izef303lvjn7].[location]' value='false' />
            <format attr='omit-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
              <tooltip column='[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]' />
              <geometry column='[federated.1lefucz087gidl18izef303lvjn7].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]> Region]]></run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1'><![CDATA[Percentage by <[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#757575'><![CDATA[<Sheet name="Percentage by Group" maxwidth="300" maxheight="1000" filter="<[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]>">]]></run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]</rows>
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{692D4183-A1B5-433F-90DB-6684777225C9}' />
    </worksheet>
    <worksheet name='Regional Map (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentages by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='All Labels Selected' datatype='boolean' name='[All Locations Selected (copy)_2786320824600862728]' role='measure' type='nominal'>
              <calculation class='tableau' formula='{FIXED [category]: COUNTD([label])} =&#10;{EXCLUDE [label]: COUNTD([label])}' />
            </column>
            <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[category]' derivation='Attribute' name='[attr:category:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[All Locations Selected (copy)_2786320824600862728]' derivation='Min' name='[min:All Locations Selected (copy)_2786320824600862728:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_0CB3B4215177469F856ECAE051EEA0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action3_A8D8D5462F7E4463BE69BB6E973427C1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C72C742DE36B42B58C31E99785412F4C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]'>
            <groupfilter function='level-members' level='[Calculation_1124985142687883265]' user:ui-action-filter='[Action3_7C569B676AD54DB8ABCF795BF4DC9BAA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[min:All Locations Selected (copy)_2786320824600862728:nk]'>
            <groupfilter function='member' level='[min:All Locations Selected (copy)_2786320824600862728:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' context='true' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]'>
            <groupfilter expression='[Parameters].[Geographic Level Parameter] = &quot;Region&quot;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:geographic_level:nk]' member='&quot;Region&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[min:All Locations Selected (copy)_2786320824600862728:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Top Label)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' min='0.0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[location]' value='false' />
            <format attr='break-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[location]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lefucz087gidl18izef303lvjn7].[location]' value='false' />
            <format attr='omit-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
              <tooltip column='[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]' />
              <geometry column='[federated.1lefucz087gidl18izef303lvjn7].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]> Region]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Percentage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]>]]></run>
                <run bold='true' fontcolor='#757575'>Æ </run>
                <run>Æ&#10;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1'><![CDATA[Percentage by <[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#757575'><![CDATA[<Sheet name="Percentage by Group" maxwidth="300" maxheight="1000" filter="<[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]>">]]></run>
                <run fontalignment='1'>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[Latitude (generated)]</rows>
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{077F5B84-7B7A-40E6-BDF4-C7FC963C0322}' />
    </worksheet>
    <worksheet name='Selected Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
          </datasources>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Tooltip (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action - Selected Locations]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' context='true' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]'>
            <groupfilter function='member' level='[none:geographic_level:nk]' member='&quot;Prefecture&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:label:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:label:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Tooltip (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='77' />
            <format attr='font-weight' data-class='subtotal' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' value='false' />
            <format attr='display' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{18D1E6DA-9296-4D1D-9F35-DE6436E9B023}' />
    </worksheet>
    <worksheet name='Stacked Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Category Bins vs. Percentage (&lt;</run>
            <run fontalignment='1' fontsize='12'>[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]</run>
            <run fontalignment='1' fontsize='12'>&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
            <column caption='Location Parameter' datatype='string' name='[Location Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Tokyo&quot;'>
              <calculation class='tableau' formula='&quot;Tokyo&quot;' />
            </column>
            <column caption='Region Filter Parameter' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Location Name Parameter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Kanto&quot;'>
              <calculation class='tableau' formula='&quot;Kanto&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Default Location' datatype='string' name='[Calculation_3192841059803959297]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;&#10;    AND ([Parameters].[Parameter 2] != &quot;Japan&quot;&#10;        OR [Parameters].[Parameter 1] = &quot;Japan&quot;)&#10;THEN [Parameters].[Location Parameter]&#10;ELSE [Parameters].[Region Parameter]&#10;END' />
            </column>
            <column caption='Start of Range' datatype='integer' name='[Calculation_694891379376308225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(REGEXP_EXTRACT([label], &quot;(\d+)&quot;))' />
            </column>
            <column caption='Range Label' datatype='string' name='[Calculation_813744188310790145]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE([label], &quot; days&quot;, &quot;&quot;)' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3192841059803959297]' derivation='None' name='[none:Calculation_3192841059803959297:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_813744188310790145]' derivation='None' name='[none:Calculation_813744188310790145:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_694891379376308225]' derivation='Sum' name='[sum:Calculation_694891379376308225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_0CB3B4215177469F856ECAE051EEA0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action6_9D79C542C5574D9CA67BCA0D8CC15A6F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_995D69A7D87348E198B12AD06085F8DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Age&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Length of Stay&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Times Visited Japan&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]' filter-group='7'>
            <groupfilter expression='IF [Parameters].[Parameter 1] != &quot;Japan&quot;&#10;    AND [Parameters].[Parameter 2] = &quot;Japan&quot;&#10;THEN [geographic_level] = &quot;Region&quot;&#10;ELSE [geographic_level] = [Parameters].[Geographic Level Parameter]&#10;END' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:geographic_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]'>
            <groupfilter function='level-members' level='[none:label:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' direction='DESC' using='[federated.1lefucz087gidl18izef303lvjn7].[sum:Calculation_694891379376308225:qk]' />
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='3'>
            <groupfilter expression='[location] = [Calculation_3192841059803959297]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' scope='cols' value='' />
            <format attr='height' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='28' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' value='24' />
            <format attr='text-align' value='auto' />
            <format attr='wrap' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:Calculation_694891379376308225:qk]' value='auto' />
            <format attr='text-align' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:Calculation_694891379376308225:qk]' value='auto' />
            <format attr='text-align' data-class='subtotal' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:Calculation_694891379376308225:qk]' value='auto' />
            <format attr='text-align' data-class='total' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:Calculation_694891379376308225:qk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' value='128' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]' value='false' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
            <format attr='text-align' field='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' value='right' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' />
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_813744188310790145:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Default Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Group:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Percentage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk] / [federated.1lefucz087gidl18izef303lvjn7].[none:category:nk])</rows>
        <cols>[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]</cols>
      </table>
      <simple-id uuid='{01A86A86-47B3-4548-BDC4-736C454F5F40}' />
    </worksheet>
    <worksheet name='Top Percentages'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Top 3 Groups per Category</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='12'><![CDATA[(<[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]>)]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
            <column caption='Location Parameter' datatype='string' name='[Location Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Tokyo&quot;'>
              <calculation class='tableau' formula='&quot;Tokyo&quot;' />
            </column>
            <column caption='Region Filter Parameter' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Location Name Parameter' datatype='string' name='[Parameter 2]' param-domain-type='any' role='measure' type='nominal' value='&quot;Japan&quot;'>
              <calculation class='tableau' formula='&quot;Japan&quot;' />
            </column>
            <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Kanto&quot;'>
              <calculation class='tableau' formula='&quot;Kanto&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Default Location' datatype='string' name='[Calculation_3192841059803959297]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Geographic Level Parameter] = &quot;Prefecture&quot;&#10;    AND ([Parameters].[Parameter 2] != &quot;Japan&quot;&#10;        OR [Parameters].[Parameter 1] = &quot;Japan&quot;)&#10;THEN [Parameters].[Location Parameter]&#10;ELSE [Parameters].[Region Parameter]&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3192841059803959297]' derivation='None' name='[none:Calculation_3192841059803959297:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[rank:sum:percentage:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1lefucz087gidl18izef303lvjn7].[label]' ordering-type='Field' rank-options='Unique,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4_0CB3B4215177469F856ECAE051EEA0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action6_9D79C542C5574D9CA67BCA0D8CC15A6F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_995D69A7D87348E198B12AD06085F8DA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Accommodation Type&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Length of Stay&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Means of Transportation&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Places to Shop&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Port of Departure&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Port of Entry&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Sex/Age&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Times Visited Japan&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Travel Arrangement&quot;' />
              <groupfilter function='member' level='[none:category:nk]' member='&quot;Travel Companions&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Nationality&quot;</bucket>
              <bucket>&quot;Sex/Age&quot;</bucket>
              <bucket>&quot;Travel Companions&quot;</bucket>
              <bucket>&quot;Times Visited Japan&quot;</bucket>
              <bucket>&quot;Length of Stay&quot;</bucket>
              <bucket>&quot;Accommodation Type&quot;</bucket>
              <bucket>&quot;Travel Arrangement&quot;</bucket>
              <bucket>&quot;Means of Transportation&quot;</bucket>
              <bucket>&quot;Places to Shop&quot;</bucket>
              <bucket>&quot;Port of Entry&quot;</bucket>
              <bucket>&quot;Port of Departure&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]' filter-group='7'>
            <groupfilter expression='IF [Parameters].[Parameter 1] != &quot;Japan&quot;&#10;    AND [Parameters].[Parameter 2] = &quot;Japan&quot;&#10;THEN [geographic_level] = &quot;Region&quot;&#10;ELSE [geographic_level] = [Parameters].[Geographic Level Parameter]&#10;END' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:geographic_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' filter-group='3'>
            <groupfilter expression='[location] = [Calculation_3192841059803959297]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1lefucz087gidl18izef303lvjn7].[rank:sum:percentage:qk:7]' included-values='in-range'>
            <max>3</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Location)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[rank:sum:percentage:qk:7]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='45' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' value='p0.0%' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[rank:sum:percentage:qk:7]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' value='104' />
            <format attr='width' field='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' value='124' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' value='Location'>
              <formatted-text>
                <run fontalignment='1'>Location</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' />
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_3192841059803959297:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Group:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Percentage:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lefucz087gidl18izef303lvjn7].[none:category:nk] / [federated.1lefucz087gidl18izef303lvjn7].[none:label:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{C3977573-3D20-42FE-8FE3-E7D5ABBEE823}' />
    </worksheet>
    <worksheet name='Treemap'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'><![CDATA[Top <[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]>]]></run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='12'><![CDATA[by Number of <[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
              <calculation class='tableau' formula='&quot;Prefecture&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
            <column caption='Top Label' datatype='string' name='[Calculation_1124985142687883265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [label]&#10;END' />
            </column>
            <column caption='Top Label Proportion' datatype='real' default-format='p0.00%' name='[Calculation_1253478469585362944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_1124985142687883265]) / TOTAL(COUNT([Calculation_1124985142687883265]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Top Label Total Count' datatype='integer' name='[Calculation_874824258274406402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(COUNT([Calculation_1124985142687883265]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Region' datatype='string' name='[Location (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[location]' new-bin='true'>
                <bin default-name='false' value='&quot;Chubu&quot;'>
                  <value>&quot;Aichi&quot;</value>
                  <value>&quot;Chubu&quot;</value>
                  <value>&quot;Fukui&quot;</value>
                  <value>&quot;Gifu&quot;</value>
                  <value>&quot;Mie&quot;</value>
                  <value>&quot;Shizuoka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Chugoku&quot;'>
                  <value>&quot;Chugoku&quot;</value>
                  <value>&quot;Hiroshima&quot;</value>
                  <value>&quot;Okayama&quot;</value>
                  <value>&quot;Shimane&quot;</value>
                  <value>&quot;Tottori&quot;</value>
                  <value>&quot;Yamaguchi&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Hokkaido&quot;'>
                  <value>&quot;Hokkaido&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hokuriku-Shin&apos;etsu&quot;'>
                  <value>&quot;Hokuriku-Shin&apos;etsu&quot;</value>
                  <value>&quot;Ishikawa&quot;</value>
                  <value>&quot;Nagano&quot;</value>
                  <value>&quot;Niigata&quot;</value>
                  <value>&quot;Toyama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kanto&quot;'>
                  <value>&quot;Chiba&quot;</value>
                  <value>&quot;Gunma&quot;</value>
                  <value>&quot;Ibaraki&quot;</value>
                  <value>&quot;Kanagawa&quot;</value>
                  <value>&quot;Kanto&quot;</value>
                  <value>&quot;Saitama&quot;</value>
                  <value>&quot;Tochigi&quot;</value>
                  <value>&quot;Tokyo&quot;</value>
                  <value>&quot;Yamanashi&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kinki&quot;'>
                  <value>&quot;Hyogo&quot;</value>
                  <value>&quot;Kinki&quot;</value>
                  <value>&quot;Kyoto&quot;</value>
                  <value>&quot;Nara&quot;</value>
                  <value>&quot;Osaka&quot;</value>
                  <value>&quot;Shiga&quot;</value>
                  <value>&quot;Wakayama&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kyushu&quot;'>
                  <value>&quot;Fukuoka&quot;</value>
                  <value>&quot;Kagoshima&quot;</value>
                  <value>&quot;Kumamoto&quot;</value>
                  <value>&quot;Kyushu&quot;</value>
                  <value>&quot;Miyazaki&quot;</value>
                  <value>&quot;Nagasaki&quot;</value>
                  <value>&quot;Oita&quot;</value>
                  <value>&quot;Saga&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Okinawa&quot;'>
                  <value>&quot;Okinawa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Shikoku&quot;'>
                  <value>&quot;Ehime&quot;</value>
                  <value>&quot;Kagawa&quot;</value>
                  <value>&quot;Kochi&quot;</value>
                  <value>&quot;Shikoku&quot;</value>
                  <value>&quot;Tokushima&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tohoku&quot;'>
                  <value>&quot;Akita&quot;</value>
                  <value>&quot;Aomori&quot;</value>
                  <value>&quot;Fukushima&quot;</value>
                  <value>&quot;Iwate&quot;</value>
                  <value>&quot;Miyagi&quot;</value>
                  <value>&quot;Tohoku&quot;</value>
                  <value>&quot;Yamagata&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Top Label Percentage' datatype='real' default-format='p0.00%' name='[Top Label (copy)_1883560205217689603]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [percentage] =&#10;    { FIXED [location], [category] : MAX([percentage]) }&#10;THEN [percentage]&#10;END' />
            </column>
            <column-instance column='[category]' derivation='Attribute' name='[attr:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Top Label (copy)_1883560205217689603]' derivation='Avg' name='[avg:Top Label (copy)_1883560205217689603:qk]' pivot='key' type='quantitative' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1124985142687883265]' derivation='Count' name='[cnt:Calculation_1124985142687883265:qk]' pivot='key' type='quantitative' />
            <column-instance column='[label]' derivation='Count' name='[cnt:label:qk]' pivot='key' type='quantitative' />
            <column-instance column='[label]' derivation='CountD' name='[ctd:label:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='CountD' name='[ctd:location:qk]' pivot='key' type='quantitative' />
            <column caption='Geographic Level' datatype='string' name='[geographic_level]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Prefecture&quot;' value='Prefectures' />
                <alias key='&quot;Region&quot;' value='Regions' />
              </aliases>
            </column>
            <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1124985142687883265]' derivation='None' name='[none:Calculation_1124985142687883265:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geographic_level]' derivation='None' name='[none:geographic_level:nk]' pivot='key' type='nominal' />
            <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
            <column caption='Percentage' datatype='real' default-format='p0.00%' name='[percentage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1253478469585362944]' derivation='User' name='[usr:Calculation_1253478469585362944:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_874824258274406402]' derivation='User' name='[usr:Calculation_874824258274406402:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Location (group)]' user:ui-action-filter='[Action3_A48644C73CC8408F9582687B39F20A43]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C72C742DE36B42B58C31E99785412F4C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Location (group)]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' context='true' filter-group='8'>
            <groupfilter function='member' level='[none:category:nk]' member='&quot;Nationality&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]'>
            <groupfilter expression='[geographic_level] = [Parameters].[Geographic Level Parameter]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:geographic_level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region)]</column>
            <column>[federated.1lefucz087gidl18izef303lvjn7].[Action (Region,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='225' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[usr:Calculation_1253478469585362944:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1lefucz087gidl18izef303lvjn7].[avg:Top Label (copy)_1883560205217689603:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' value='auto' />
            <format attr='vertical-align' field='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' value='auto' />
            <format attr='text-align' field='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' value='auto' />
            <format attr='wrap' field='[federated.1lefucz087gidl18izef303lvjn7].[cnt:label:qk]' value='auto' />
            <format attr='vertical-align' field='[federated.1lefucz087gidl18izef303lvjn7].[cnt:label:qk]' value='auto' />
            <format attr='text-align' field='[federated.1lefucz087gidl18izef303lvjn7].[cnt:label:qk]' value='auto' />
            <format attr='wrap' field='[federated.1lefucz087gidl18izef303lvjn7].[ctd:label:qk]' value='auto' />
            <format attr='vertical-align' field='[federated.1lefucz087gidl18izef303lvjn7].[ctd:label:qk]' value='auto' />
            <format attr='text-align' field='[federated.1lefucz087gidl18izef303lvjn7].[ctd:label:qk]' value='auto' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1lefucz087gidl18izef303lvjn7].[cnt:Calculation_1124985142687883265:qk]' />
              <color column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' />
              <tooltip column='[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]' />
              <tooltip column='[federated.1lefucz087gidl18izef303lvjn7].[usr:Calculation_874824258274406402:qk]' />
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' />
              <text column='[federated.1lefucz087gidl18izef303lvjn7].[usr:Calculation_1253478469585362944:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[avg:Top Label (copy)_1883560205217689603:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[ctd:location:qk]' />
              <lod column='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1124985142687883265:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[attr:category:nk]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'><![CDATA[Proportion of <[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[usr:Calculation_1253478469585362944:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'><![CDATA[Number of <[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[cnt:Calculation_1124985142687883265:qk]> of <[federated.1lefucz087gidl18izef303lvjn7].[usr:Calculation_874824258274406402:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'><![CDATA[Avg. % of  <[federated.1lefucz087gidl18izef303lvjn7].[none:geographic_level:nk]>:]]></run>
                <run>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1lefucz087gidl18izef303lvjn7].[avg:Top Label (copy)_1883560205217689603:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.1lefucz087gidl18izef303lvjn7].[usr:Calculation_1253478469585362944:qk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B4E24C5A-BAD9-4392-BFB7-6018985003A8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard'>
      <style>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl-title'>
          <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[Parameters].[Geographic Level Parameter]' value='auto' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='japan_tourism_stats' name='federated.1lefucz087gidl18izef303lvjn7' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Geographic Level Selector' datatype='string' name='[Geographic Level Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Prefecture&quot;'>
          <calculation class='tableau' formula='&quot;Prefecture&quot;' />
          <members>
            <member value='&quot;Prefecture&quot;' />
            <member value='&quot;Region&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1lefucz087gidl18izef303lvjn7'>
        <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Length of Stay&quot;' value='Length of Stay (days)' />
          </aliases>
        </column>
        <column caption='Label' datatype='string' name='[label]' role='dimension' type='nominal' />
        <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
        <column-instance column='[label]' derivation='None' name='[none:label:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='107' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='135' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='128' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='43375' id='20' name='Percentage by Location' w='26583' x='36917' y='6625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37625' id='59' param='vert' type-v2='layout-flow' w='36500' x='63500' y='6625'>
                <zone h='125' id='66' name='Regional Map' show-title='false' w='36500' x='63500' y='6625'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='125' id='106' name='Regional Map (2)' show-title='false' w='36500' x='63500' y='6750'>
                  <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='125' id='60' name='Prefectural Map' show-title='false' w='36500' x='63500' y='6875'>
                  <layout-cache has-max-size-h='true' maxheight='1' minheight='1' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='37250' id='100' name='Prefectural Map (2)' show-title='false' w='36500' x='63500' y='7000'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='465' h='30125' id='26' is-fixed='true' mode='checklist' name='Percentage by Location' param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type-v2='filter' values='cascading' w='17083' x='82917' y='44250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='6625' id='39' type-v2='text' w='60500' x='0' y='0'>
                <formatted-text>
                  <run fontalignment='1' fontsize='18'>Japan Tourism Segmentation by Prefecture/Region (2024)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='93375' id='90' name='Top Percentages' w='23749' x='0' y='6625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34625' id='53' name='Region Filter' w='13168' x='23749' y='15375'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='26125' id='70' name='Treemap' w='19417' x='63500' y='48250'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24375' id='78' name='Age Line Plot' w='39751' x='23749' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='46' h='4000' id='17' is-fixed='true' mode='dropdown' name='Percentage by Location' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type-v2='filter' values='cascading' w='19417' x='63500' y='44250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='6625' id='67' type-v2='text' w='39500' x='60500' y='0'>
                <formatted-text>
                  <run fontalignment='2' fontsize='8'>Data Source: Created by editing the International Visitor Survey (Japan Tourism Agency)</run>
                  <run fontalignment='2'>Æ&#10;</run>
                  <run fontalignment='2' fontsize='8'>URL: </run>
                  <run auto-url='true' fontalignment='2' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://www.mlit.go.jp/kankocho/en/siryou/toukei/syouhityousa.html&amp;quot;'>https://www.mlit.go.jp/kankocho/en/siryou/toukei/syouhityousa.html</run>
                  <run fontalignment='2'>Æ&#10;</run>
                  <run fontalignment='2' fontsize='8'>Accessed on: 2025/07/01</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='7000' id='99' type-v2='text' w='76251' x='23749' y='93000'>
                <formatted-text>
                  <run fontsize='8'>* Percentages indicate proportion of surveyees within the selected group(s) for the respective prefecture/region.</run>
                  <run>Æ&#10;</run>
                  <run fontsize='8'>* Percentages totaling over 100% are possible for categories that allow for multiple answers from the same surveyee.</run>
                  <run>Æ&#10;</run>
                  <run fontsize='8'>* There may be large margins of error, especially for prefectures with low survey numbers.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' fixed-size='61' h='8750' id='14' is-fixed='true' mode='list' param='[Parameters].[Geographic Level Parameter]' type-v2='paramctrl' w='13168' x='23749' y='6625'>
                <formatted-text>
                  <run fontalignment='1' fontsize='10'>Geographic Level</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='18625' id='133' name='Stacked Bar' w='76251' x='23749' y='74375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='7000' id='123' name='Map Title' show-title='false' w='22500' x='77417' y='36750' />
        <zone h='5250' id='82' name='Age Line Plot' pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342491648:nk]' show-title='false' type-v2='color' w='5833' x='56917' y='51250' />
        <zone forceUpdate='true' h='2750' id='125' type-v2='text' w='26000' x='37250' y='47125'>
          <formatted-text>
            <run fontsize='8'>* Plots can be used to filter for specific prefectures/regions.</run>
          </formatted-text>
        </zone>
        <zone h='12250' id='131' name='Location Counts' show-title='false' w='7000' x='92500' y='6875' />
      </zones>
      <simple-id uuid='{62458647-A8C5-4F24-9355-BD3E759FB934}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Age Line Plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Location Counts' />
        <viewpoint name='Map Title' />
        <viewpoint name='Percentage by Location' />
        <viewpoint name='Prefectural Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Prefectural Map (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region Filter' />
        <viewpoint name='Regional Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Regional Map (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stacked Bar' />
        <viewpoint name='Top Percentages' />
        <viewpoint name='Treemap' />
      </viewpoints>
      <active id='26' />
      <device-preview visible='true'>
        <device is-portrait='false' name='Medium Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{46E3427F-D186-4C1E-92C8-DF7C104F343C}' />
    </window>
    <window class='worksheet' name='Prefectural Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' type='filter' values='cascading' />
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card mode='dropdown' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{7696304E-0E67-4355-83D6-87DC84D25A4F}' />
    </window>
    <window class='worksheet' name='Prefectural Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' type='filter' values='cascading' />
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card mode='dropdown' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{8E531C6D-896A-4A65-B349-78A260262FEA}' />
    </window>
    <window class='worksheet' name='Regional Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card mode='dropdown' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{0F0719CC-9D5B-4BD8-8949-3BC6723D76D5}' />
    </window>
    <window class='worksheet' name='Regional Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card mode='dropdown' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[sum:percentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{C64D6A6D-E548-470B-A82A-4DD288B13021}' />
    </window>
    <window class='worksheet' name='Map Title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B2347B21-0887-4088-BFBE-39D334F9273A}' />
    </window>
    <window class='worksheet' name='Percentage by Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card mode='checkdropdown' param='[federated.1lefucz087gidl18izef303lvjn7].[none:location:nk]' type='filter' values='cascading' />
            <card mode='dropdown' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{038AA6F6-DF44-4D3B-8AD0-EA5C1812B2F9}' />
    </window>
    <window class='worksheet' name='Percentage by Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{13FD0D06-CED3-4984-B2BB-1618E827C2A6}' />
    </window>
    <window class='worksheet' name='Treemap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card mode='radiolist' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6F600A2D-BD8E-454E-9CB6-D4ACD7289C2F}' />
    </window>
    <window class='worksheet' name='Top Percentages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' type='filter' values='cascading' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Location Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Region Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F4AAA690-9E0B-4228-810A-F8D09004123A}' />
    </window>
    <window class='worksheet' name='Age Line Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[none:Calculation_1821354235342491648:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Location Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Region Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EEE88475-8C4D-48CB-9E28-27CD4CE946B9}' />
    </window>
    <window class='worksheet' name='Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Location Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Region Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{39A6FD65-E427-45F6-8B45-6F94E698C702}' />
    </window>
    <window class='worksheet' name='Stacked Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Geographic Level Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Location Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Region Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='5' param='[federated.1lefucz087gidl18izef303lvjn7].[none:label:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{82FF39CB-31FC-48DE-8AD2-4462D4B961D4}' />
    </window>
    <window class='worksheet' name='Region Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1lefucz087gidl18izef303lvjn7].[Location (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6265DD34-BDE8-44DD-8F66-5C1D37F35A16}' />
    </window>
    <window class='worksheet' name='Selected Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1lefucz087gidl18izef303lvjn7].[none:category:nk]' show-all='false' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9F22806E-A5A8-4B37-B8B1-EDBA820981B5}' />
    </window>
    <window class='worksheet' name='Location Counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1541BAED-3A84-427E-9578-1FDA4AD2E0FD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard' width='384'>
      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
      iAjxuHkm19UIwWg0imkrlUrWrFmDp6cnf/nLX8S0CwsLqaurY8mSJeh0OgwGA0ajkY6ODnHG
      JJfL0el0V3zu68mAdwAajUYsgMOHD1NeXs7y5ctxdHSkuLiYjIyMS96rVCqxs7Pr8319wc7O
      Tpy6m9HpdJec5l7MpXp76Gx8XnzxRVGn/tlnn/HMM89cstPrLfb29kydOhUHBwcyMzN56KGH
      kEqleHt7i9csWLAAX19fmpqaelQZ9RWZTMaQIUPEjsTb2xsPD49e3Xtxh/zDDz8QGBjIQw89
      hI2Njah+6Q2/9H1divb2djGNuLg4ccTd0NDQzcrDzHPPPceQIUN6PHdxvehL+dnZ2eHg4GDx
      Ps2Nvkwms2hUutJXC+7BgwdbdPgymaxbvubGMS8vj6ioqG4WPg8//DCOjo58+umnFBcXix3A
      5dJycnJCrVbj7u5+Wfns7Oy6NZh9fdf29vao1WqLYwUFBezZs4c///nP3d6Tp6cnVVVV4oJx
      W1sb9vb2SCQS0VorJiaGuXPnWtxXUlKCIAh88sknQGd90uv1VFdXi9oJtVrdbR3pRmNA1wDM
      Czhmq5jGxkYiIiJwdHREEARxNNQTeXl5GAwG3N3d+3RfX3F0dEQqlYrWNEajkdTUVFG9ZGNj
      I1YgnU5nsbBzJZqbm2lvb2fIkCHceeedTJw4kfPnz/dLTvMI32g0Ap1lW1lZiYuLC05OTtjb
      2+Pi4kJ0dDTR0dF4eHggCAL+/v5UVVWRmZmJVqslOzubxsbGPuc/YsQIWlpaxPSDg4NFWS6H
      XC7vll9DQwNjxozBxsaGjo4OizKRy+U0Nzd30+WaudL76g9ZWVk4ODiIswp3d3cCAgL47rvv
      mDhx4i8yazTTl/IbPnw4tbW1BAcHEx0dTVRUlLitPzY2ln379omNvXl9qqdy7lp3BUG45Iyj
      q4w1NTVEREQQHR0t6sWhU/0zadKkHu+Ty+X813/9Fzk5OaL+/nJpxcTE8PPPP9PU1ERjYyOZ
      mZk9phsUFERubq74jG1tbRQVFfXJys7X11dcEzGTkJDA448/3uPgbcyYMSQlJYn1b//+/cTG
      xgKdewns7e27Nf4A9913H3/+85/Fv/nz5zN16lSx8YfOdbSLVZE3GgMyA9i0aZP4ct3d3cWK
      M378eL744gtx8cTDw8OiRywoKOCjjz7CaDSiUql47rnnkEgkV7zv4g/0ch9sT+ceffRRvv76
      a/z8/Lhw4QKjR49m1KhRQKd+eM2aNfj5+dHQ0IDJZLJI43J5q1QqvvnmG1xdXbG1taWlpYXf
      /e53fZbZfL6oqEhc6G1ra8PLy4unnnoK6FRFff3113h4eGAymRAEgWeeeQZbW1tWrFjBjh07
      2L9/P2FhYRbT297KsWDBAj777DOysrJwdnampaVF1KFfLp2wsDB27NjBxx9/jCAIvPTSS9x5
      5518+umnBAQEUF9fb/EuHRwcCAsL4+2338bZ2ZmHHnoIf39/i+n95d5Xb5+pvLycjz/+GIPB
      gEaj6bYnYNasWXzwwQeX3Dh0sbrsSlyp/Lri7u7OrFmzeOutt/Dz86O1tRVfX19GjRrF/Pnz
      +eabb3jrrbdEC59nn322x3KOiIjgX//6F8XFxdTV1eHg4EBoaOgly2XcuHHk5eWxevVqvL29
      qa+vZ8aMGfj4+KBUKrttUOtaBuZOwDwCvueee3pMKzQ0lGnTpqHRaPj666+xt7e3mCV0TXPw
      4MEsWLCAd955h4CAACoqKnjggQfE+tvTe774mKurKw4ODlRXV4uN7/nz5/n2228trg0MDOSp
      p55i7Nix5Obm8vbbb+Po6EhHRwe///3vgU6VVHl5OStXrrTI48knnyQoKKjHd2lGEASys7PF
      vQg3KgOyE1iv11NTU4ODgwOenp4WBa3T6WhsbLSYDkPnS0lISGDp0qUYjcZu09NL3TdQmGV2
      cXERp39mzOZzXl5eV7QGuRiTySSOaIcMGdLn+3tKr7W1FUdHx27lYM7LycnJQu8pCIJYlnq9
      npUrV/Lmm2/2y66+tbUViUSCi4tLrxtAs1xyuVw08Wtvb0epVDJ06NAey6S1tRXobAR64nLv
      60oIgoAgCKhUKgwGA66urt2eRaFQsHPnTrHDHij6Un56vZ62tjYGDx7cza1vW1ubmI6ZnspZ
      o9HQ3NyMh4dHr1UnarUarVaLq6srUqmUQ4cOIQgCs2bN6uPTdk8LLOsjdI6yDQbDJdcFVCoV
      DQ0NeHp6WpiI9pbk5GRqa2tZsmRJr+8xb3jz8fEZkBlgUVER+/btEzuTG5Xr5grC3AH8kt2Z
      VrpjMpl44403iIqKwsnJidzcXEJCQm6KbenXA5PJRFpaGgcPHmTp0qWX1P/fTrz33ns8//zz
      A7bjfO/evSgUCoYNG4ZSqeTUqVO89NJLl1xP+aWYLQOXL19uMdu4VhiNRt59912WLVt21TaJ
      DhTXrQNQqVRUVFRYTOWtDAxKpZLS0lK0Wi0+Pj6iiaSV7hiNRlJSUggODv7Fi/W3Au3t7cTH
      x1/Str0/mNfxuqql+jOy7wvl5eUcP358QF1M9JYTJ07Q1NTEnDlzrnnefcXqDM6KFStWblOs
      8QCsWLFi5TbF2gFYsWLFym2KtQOwYsWKldsUawdgxYoVK7cp1g7AihUrVm5TrB2AFStWrNym
      WIPCW/lFJCcnk5ycfL3FuCmIi4sjLi7ueothxYqItQOw8otITk5m9erV11uMm4LVq1dbOwAr
      NxRWFZAVK1as3IbU1tZaOwAr156WlhZOnTpFc3PzVcsjPz+fpqYm8XdBQUGPwTk6OjrEYN59
      oba21iL8ohUrNyPWDsDKNSUnJ4dXX32V/Px8Me6vyWRCo9GI12i1WgwGg/hbr9dbBD8RBAGT
      yYTJZLJo1AVBEH+npaVRW1srptvY2Cj649dqtWJ6VVVVFvGHzV5De6LrOYVCwalTp/pfEFas
      3ABY1wCsXFM2bdrEqlWr0Ov1GI1G2tvbee2113B2dmbOnDlIpVK2bduGVqvltddeY8+ePZw9
      e5aamho++ugj/va3vyGRSFi2bBk7d+5ErVYzc+ZMbG1tSUxMxGAw8MADDwCdQcSbmpr4/e9/
      z4EDBxg7dixvv/02HR0d3HHHHRYxmwEMBgOvvPIKrq6uhIaGkpWVxRtvvMGGDRuIiYlh48aN
      4rkr+YO3YmUgMUfF6+ri2zwA+iVRxwZ8BtDY2Eh6err4l5WV1af7BUEgNzeXhISEHuP0tre3
      c+DAAVJTU2/4eJt6vZ7Dhw9z9OjRG17Wa4VarcbV1ZWcnBxWrVrFiRMnsLe3Jzg4mP379xMf
      H8+7777L008/TXJyMjk5Obz77ruEh4cDnf71X3vtNcaNG0dgYCBDhw4lLy8PQRC4//77effd
      d0WrpGeffZZly5aJsZJVKhXt7e2sXr26W+MPUFpailKpZPjw4SQnJzNlyhTS0tLIy8vD2dnZ
      4txA8Eu/FTOFhYVUV1eLv2tqakhPT+fEiRO0t7cPiKw3AuXl5fzjH/+gsLBQPFZVVcW+fft6
      DDJv5sCBAwMuS09plpWVsXfv3svK0h8EQeC9997rFhpVEATef/99tFptv9Me8A7AZDJhMBiI
      j4+nubnZYirfG8rKyigpKWH48OFs2bKFnJwc8Vx9fT1vvPGGGGz50KFDAy3+gGEymVi9erUY
      MPrcuXM9XrdmzZprLNn1ZcqUKXzxxReMGTMGR0dHPDw8kMlkzJkzhyVLluDp6UlRURGnT5/G
      y8sLQRDYu3cvZ8+eBcDDw4OhQ4eSmZmJ0Whk9uzZojqntbWVjIwM/Pz8esxbLpfT1NREbW2t
      GLAcOtckSkpKsLe3RyqVMmPGDJ599llmzpzJli1b8PX1FYP7mM8NBL39VrZt22Yh78WUl5db
      rHckJydTVVVFa2srq1evpq6ubkDk7atcA82GDRv47W9/K4abLC8vZ926dXh6epKZmXnJ0LEn
      T57sVfqlpaViUPsrcXGau3btIiEhAQ8PD7Kysiw65F9Kamoq48aNw9nZ2eK4jY0Nixcv5uef
      f+532gOuAvL09MTT05PCwkImTpzIkCFD0Gq1rFmzBoPBQFhYGAsXLiQ+Pp6zZ8+iUqmYNm2a
      aB4XEhIiBuXIycmx+Ch++ukn/vCHP1jE2ezo6GDfvn1UV1cTHBxMWFgY//nPfxAEgfvuu4/I
      yEi2bdvGAw88QFVVFefPnycwMJB169Yhk8mws7NjxYoVFBUVkZCQgEQi4de//jUBAQEAbNy4
      kZqaGlQqFQsXLiQmJoadO3dSVlaGvb09v/3tbzl27BjOzs7s2LGDF154AQ8PD44fP87kyZMt
      fIKnp6dz9OhR9Ho9Dz74IOfPnyc1NRWDwcDMmTMZNGgQP/74IyaTiWXLlhEQEMDu3bspKChA
      KpUyb948QkJCupXl9u3b8fPz49ChQ/j6+rJ48WLs7OzYsmUL99xzzw0VmHrx4sUkJiayZcsW
      Fi1aRGRkJNOmTWP79u3MmDGD5cuX8+9//xs3Nzdmz55NbGwseXl5ODo6Ymdnx9133w1AbGws
      mZmZKBQKpk+fTnt7O8ePHyc0NJQnn3yS06dP4+npib29PSaTCQcHBxwcHPjDH/7ATz/9RFxc
      HN7e3ri5uTFs2DAOHTrE3XffzdKlS9m+fTtjx44Vw5tOmTIFT09Pi3NBQUEWoTb7Q2++lQkT
      JrB3716KiooYOXIkd999N1988QU2Njb4+fldMszkmDFjCA4Oxt7envz8fEaMGGFRt+zs7Cgq
      KuLUqVPceeeduLm5sXnzZiQSCcuXLyclJaVbHc/OzkapVOLu7s6CBQuuKFdFRQUbNmwQg8Uv
      WbKk27eTmppKWloagiDw3HPPiXF7CwsL2bZtGxKJhEcffZTz589TUFDAV199xZw5cwgPD6em
      pobQ0FDGjBnDmDFjgM5Z1bfffovRaGTBggViYHrojDuemJiIRCLhmWeewdXVle+//56mpiZG
      jhzJyZMnaWho4MyZM7zwwgskJCRYyKrT6fjqq68wGAwWsxDo/LbfeustoDPUJnQ23F3bhfT0
      dAoLC7G1teX555+nuLgYFxcXgoOD2bFjB/feey+7d+/u1i6mpKTwxz/+EYD169dTX1+Pg4MD
      zz//POHh4WzcuLH/lVC4Sqxdu1ZoaGgQBEEQNm7cKOTl5QmCIAgffvih0NDQIHzyySdCW1ub
      YDKZhNdee00wmUzivYmJicKTTz4p/P3vf7dI84033hAEQRDy8/OFDz/8UNi8ebOg0WiEe++9
      V8jJyREEQRDeeustQaVSCQaDQVi5cqUgCILw/vvvC4IgCGfOnBG2bdsmlJWVCT/88IMgCIKw
      e/du4ciRI8L7778v1NbWCiaTSdBoNGKe77zzjqDX6wW9Xi+sXLlSaGpqEj755BPx3uPHjws/
      //yz8Morrwjt7e3ifT/++KNw5swZC/m1Wq1gNBqFxsZG4Z133hEEQRDee+898fzf//53QavV
      Cmq1WnjvvfeEqqoq4eOPPxYEQRBSU1OFo0eP9liWK1euFL788kvBaDQKhw4dEhISEgSj0Sis
      WrWqby+tH1ztPL7++mth5cqVwtq1ay973ZEjR4SMjIyrKssv5VJldaVvZf369UJVVZUgCIJY
      F9VqtbB69WrBYDAICQkJ4j2CIAgbNmwQEhMThYyMDOGVV14Ramtru9WtsrIyYcmSJcK5c+cE
      QRCElStXClqtVjAYDEJdXV2PdTw7O1sQBEGsu1eSa/Xq1YJSqRQEobOe9/TtrFq1SlAqlYJe
      rxc6OjrEZ1i5cqWY3ptvvimm0RWj0SisW7dO+NOf/iTs3r1bMJlMwqeffio0NjYKBoNBbC/M
      973++uuC0WgUamtrhS+++EI4evSosHPnTkEQBEGn0wlFRUXi755k/f7774X8/PxusqhUKuGD
      Dz4QBEEQNm3aJLzxxhuCQqGwaBeamprEdqiwsFBYv369kJSUJJw8eVJ81waDocd28fXXXxfz
      euWVVwSDwSCo1Wrx2JtvvikYjcYe69blqKmpEa7JIvD58+d56KGHAAgNDRXN7uzt7ZFIJLi5
      uWEymcSYtfPmzWPu3Ln8/PPP7N69m3vuuQfoXABRKpVEREQQERHBu+++C8Ds2bOJjo4GOqdF
      5mhDl4s6ZI6vGxgYSElJCb/5zW/YsGEDbW1tPP7442IoNxsbGzE+q5OTExcuXODcuXOsXbsW
      rVYrxqd97rnnLKZo7u7u1NbWMnLkSPHYrl27qKqqwsPDo5s+DzpNC7/77jsAXFxcqKmpITIy
      8opl6eTkxDPPPINEIuHOO+9k5cqVeHl5MXHixMu8lZuDp59+ulfX3XHHHVdZkmvDpb4VMzU1
      NXz99deEhIRQU1MjWjZdjHmU+Oc//1msi13rFsCiRYvEKGhyuVz8JhobG3us46Nfs2EAACAA
      SURBVOZ4zRfHK76UXHK53GKW1NO38/jjj7NmzRp0Oh3PP/887u7uQOe3a2trK/71hFQq5amn
      nsJoNPLNN9+Qnp7OhQsXRJVI1zjZ0Kky+uqrr8QyUCgUTJs2DaBb/OSeZK2trbWYUZiRy+W0
      tbUBnTPchIQE8be5XTh9+jQjRowAICwsjPj4+EuGq7y4Xewao3jhwoW89957ODs78+KLLyKV
      SrGxscFoNPYr/vg1MQMdPXo0Bw4cwGg0kpmZKYYoNNtgt7a2io1/UVERlZWVSCQSPDw8UKvV
      Yjr33HMPH3/8MUql0sKGvOuD29jYUFlZSUtLi2gCqFKpMBqNFoszHR0dGAwGdu3aRUxMDPX1
      9bz44os8/PDDHDlyRLzOrKctKysDwN/fHxcXF5588kkeeeQRUR11ceFPmzaNbdu2UVdXJ+qd
      CwsLefHFFxk7dqx4nVqtFi1i/Pz8mDdvHk8++SSTJ08mNDSUPXv2kJubS0pKyiXLUiqVipXE
      xsaG0aNH8+233/YrqHd/MZlM7N27l7Vr1/Lll1/y9ddfD6ge9Hahp/fr6OgoNqqnTp3i3nvv
      5YEHHrhs0Hez+sDcoF5ct8Cyzur1empra2lqasLd3b3HOn4xV5JLEASSk5NJSkpCqVT2+O20
      t7fz0ksvMWXKFAuzWq1WS3NzM1VVVZds2AoLC0VVjHmwFxgYyOTJk3n66ae71f+AgAAefPBB
      Hn30UWJiYoiOjiYxMRGj0UhVVZXF8/Qkq5eXFydPnkSr1Vqsq0gkElxdXUlOTkav19PS0iKe
      M8s+bNgwTpw4gcFg4ODBg4SHh2Nra0tzczPt7e1UVFSI91zcLhqNRgRBwGAwMGjQIF599VV0
      Op3YyWi1WmQy2SXrwuWwWX0V9/H7+Pggk8kICQkhOzubffv2sWDBAgICAsjIyCA7O5uSkhKe
      fvppUU8tCAKJiYkcOHAAe3t7HnjgAbEQvby8cHNz46effqKoqIj77rsPNzc3pFKpuPAXHR3N
      li1bOHnyJE8++SROTk5otVq2b9+Op6cnYWFh2NrasmXLFkpKSpgxYwajR4+mrq6On376iYqK
      ChYvXiyOhg4ePEh+fj41NTU89dRTODk54enpyU8//URVVRWxsbE4ODjg6elpMeKQyWTExMTw
      888/U1hYyOjRoxk2bBgbNmwAEH97eHiwceNG3N3dmTVrFrt27SI9PZ0RI0YQEBBAVFQUpaWl
      ODo64u7uzowZM7qVJSD+CzB06FBKSkquSQeQnJzM1KlT+fzzz5k4cSJz585l3LhxREZGsnv3
      bpRKpShbdXU1GRkZtLe3M3ToUIuRTVdOnTrFqVOnCA0N7fG8eQ9Af0Y815Pk5ORLuoK43Lcy
      bNgwEhISOH/+PHPnzmX37t3k5+czbtw4QkNDkUqlDBkyRBxtSyQSvLy8LNZ+oqOjLeqWub56
      enoCEBMTw9atWykoKGDChAn4+vpeto73Rq7JkydTWVmJu7s7FRUVzJo1q9u3U11dzZYtW9Bo
      NCxcuFAcCEZERLBhwwbOnj3LU089JX6PXeNb29nZcfjwYZKSkggKCiIuLo7IyEiSk5NJSUnB
      x8cHf39/JBIJAQEBREREsHnzZrKzs4mIiGDkyJGo1Wq2b9/OoEGDiIiIoLS0lIMHD3LHHXfg
      5eVlIeuYMWPYu3cv6enpREVFiZZpABMnTuTkyZMkJibi5ubGlClTkMlkYpmZ/79x40ZkMhn3
      338/3t7e7Nmzh/z8fCIjIwkPD+f48ePd2sXGxkZ0Oh0+Pj6kpqaSmJhIREQEUVFRNDY2cubM
      GaZMmdLn+qhUKq/eGsCV+OSTTwSdTndd8i4rKxM2b97cq2vNervrgVKpFN555x1h3bp1wp//
      /GeLNYZLUV5eLqxevVooLS29BhJ26rW//fZboaGhQTh06JCwcOFCYerUqcJf/vIXQalUiucE
      QRC2b98uKBQK4ejRo0JSUpLQ1tYm1NXVCXq9XlAoFEJNTY2gVCqFTz/9VKiurhb0er2Qn58v
      rsnU1dUJNTU1Qnp6upCQkCC0tLQIbW1tgiAIQltbm6DVagWNRiPU1NR0u/dG4FqsydxIbNy4
      UVi7dq3w+uuvC8nJyddbnJuCntpFrVYrrFq1qkc9/0cffSTU1tb2K6+amhrhqs4ALkdkZCQO
      Dg6XHAVeTVxcXAgJCenVtCk6OvqyU+2riZ2dHVOnTmXEiBH86le/EkdBV7pnypQpDB069BpI
      2DmqdXJyIiQkhOeee46WlhaMRiOlpaXiesru3buJjo7mzJkzBAcHo1ar0Wg0bNy4EY1Gg16v
      p7S0lLy8PFxdXcnLy8Pf35+kpCR8fHxITExELpeTlpYGdKr0GhsbxWvMll62trasXbuWgIAA
      Dh48KN7bVeV2PbncDOBWJDIykrCwMOLi4ggODr7e4twU9NQu2traEhgYiFQqtdAy6PV6XF1d
      +70pUalUXj9XEE5OTtel8YfOAu2taeTFtrfXGqlUyqBBg3pdVo6OjtdcZg8PD7Kzs9Hr9RbH
      MzMzGTRoUOdU8385dOgQBoOBu+66i5EjR/Lwww9z9uxZ9Hq9aIc/bNgwIiMjqa6upqysDDs7
      O/Lz81m0aBGTJ09m2LBhjBw5Eh8fn26yPPDAA6JqwXyvleuHs7Nzv/XTtyOXahcDAwPFRXgz
      Mpmsx0XpvnBzKVF/AV0boavBpfzH3A60trZa6GbNDBs2DL1eb2HFMX/+fCZOnIhEIhEb53Hj
      xlFXV4etra1ooQKde0IMBgODBw9m0qRJfPPNN+zatYshQ4Zw+PBhiouLaW5uZvv27eIimrmx
      6XqvFStWekYiCF28bN2iVFRUEB8fz6xZsyxW6H18fERzz64cPHiwzwuoH3zwAU888QQeHh6/
      WN6bidWrV+Pl5cVzzz3HP//5T3744QegcyH6X//6l6j26WoO2xMGgwFBELqNFrVarWgW1/Ua
      nU6HjY0NEokErVbb46asrvfeCKxevfqmjZ1gMBj4/vvvcXV15cEHH/zF6RUXF+Pp6SmamJaX
      l4smqZejsLCQ8PDwfhsAFBYW4urqytChQykuLmbUqFH9SudW4LZxB71+/Xoef/xxjEYjBoOB
      jRs3YjAYMJlMPV7f263jXXniiScsvEreTjz44IOsXbuWF198ke3bt7Nu3Tq2bt1KW1sbzc3N
      V2z8oVMt15OqoKs+tOs19vb22NraYmNjc8kduddrjelWJCMjA39//wFp/KHTrcMXX3wh/t60
      aVOP17W3t7N+/Xrxt9n0sb+Y3WaYTCZRK7BmzRpug3Fwj9zy3kBVKhW2trY4OTmJ+rIjR46I
      G4cqKyu7uY4wk5iYSFhYGCkpKTz55JNAZ2eydOlS1q5di0qlwsvLi9/85jd4eHjQ1taG0WgU
      TdluF4YOHcojjzzCt99+i1arxc7OjuTkZEaPHs2vf/3r6y2elV9IU1MTW7duRS6Xo9FosLW1
      JTg4mJ9++om//vWvrFu3zuJbiI+P59y5c+JCfUtLCyqVitdee01UB8rlcry8vDh9+rSFOeWm
      TZuorq5Gr9fz/PPPs2nTJtLS0mhubuaxxx6juroaqVRKc3MzX375JYIgMG3aNO68806+/fZb
      WltbaW5u5oEHHiAmJoaPPvoIqVSKk5OThQ8nmUxGZWUlgwYNEt2xjBw5kvr6+hvalcpAc8vP
      ACorKy+7Sv6f//yHP/zhD7z66qsWTpUyMjJE/0ItLS1UV1dTUVGBVqvlyJEjhISE8Mc//hGp
      VCpuMPPx8aGhoeGqP9ONiEKhQK/XEx4eTkxMjGj7bfWCevPj7u7O/PnzefDBB7n//vspKysj
      ISGBv/71r6SlpXX7FsrKynjsscf461//yvnz5/njH//I8OHDqa+vt0h3yZIl3fzY3H///axY
      sYJp06aRkpLCww8/zMSJE/nd736Hq6srpaWlQOdA7IknnuCVV14hKSkJo9FIZWUlL7zwAn/9
      619Fj60rVqzg+eefFze6daW0tJSwsDBiYmJYsWIFd999t2hZZjKZyMvLu6Ubf7gNZgAdHR2X
      tQTpyXVEUVER+fn5fP755wA8/PDDbNu2DTs7OxYsWMDBgweZPn06AOHh4Zw/f57w8HBkMlmP
      Lh5udXJzc6msrGTFihXisalTp4qjtBUrViCRSDh48CA1NTVoNBp+9atf9WjFYyYtLa1fm1us
      XBt+97vfYWdnx/nz57t9C4DovM+snrOzs+umZpHL5cTGxormvQD//Oc/cXFxQafTXdKrK3Tu
      oDebOvv6+tLW1ibmaTKZEASBtrY2PvzwQ4KDgykvL+/VYORWc6VyJW75GYCfn5/FNuuL6cl1
      xKhRo3j99dd555136OjowN/fn8bGRurr6/Hx8SEiIoIDBw4gCAIpKSmEhYUBnf5QrpX9/Y3E
      4cOHuf/++7sdd3NzY9q0aeIH3t7ezsKFC1myZAmpqalkZ2fz008/kZqail6vZ/369WzYsIGS
      khIxja1bt/Lvf/8bhULB0aNH2bRpkzj1t3L9MC/CXupb6C1mz8DQudCsVqt59tlnxd3jDg4O
      1NXVibu/zXh6epKTk4NWq6W8vFz0ItqV4uJiJkyYwJIlSyysyy7G0dFRjBlxvVypXC+u20aw
      a4WjoyMJCQnMmDFDXBCUSCSi2WJPriOgc0PGsGHDqK6uxtvbG5VKha+vLyNGjMDb25va2lp2
      7tzJpEmTiIqKoqOjg8OHD98WlaYrycnJ+Pv7ExUV1eN5b29vEhMTGT9+PGfOnCEtLY309HTu
      v/9+4uPjGTduHKmpqWg0GsaPH4+/vz8XLlxAoVDg5uaGUqnk/vvvZ9euXajVahYvXiy69L7Z
      7Mtv9o1gbm5uYkPq7++PVCrt8Vvoeh7+z33D0KFDxc2M5m9QKpXi6emJl5cXQUFBqFQq4uPj
      GTZsGMHBwfj4+KDRaIiPjxc3SZndOuzfv58jR46wbNky0Zqoq0sUc93KyMggNjaWkJAQHBwc
      LNxmmPPZtGkTSqWSkJCQa+pK5XqiVCpvDzPQtLQ06urquO+++/p1f2ZmJtu3b2fVqlWXVCf9
      +9//Zvz48WKwituF1atXExUVdVnrkLVr17J8+XJ27NjBjBkz2LBhAw888ABbtmxhwYIFaDQa
      WlpasLW1FUd6CoWCu+66i/T0dObNm8ePP/6InZ0djzzyCDt27GDu3Lk3nX72ZjYDvV1QKBR8
      9913PPbYY7f87uW6urpbXwUEnVGoemNjfClCQ0Mv2/hD50zidmv8zVzssrgr58+fF93ehoWF
      4ejoyPLlyzl9+jT33nsvGRkZ1NbWMnnyZNRqNWVlZdja2hIZGYmnpydOTk78/PPP/OpXvxIt
      tMzrLVasDDSenp68/PLLt3zjD50zgFt+EdhMTExMv+/tSb94MbGxsf1O/2Zn+PDhFBQUdNuW
      bjKZ2Lp1K8uXLwewMPebOXOmeC8ghmk0mUxER0eLqoKu03Cza+O+6pmtWOktl4shcqthNBpv
      nw7AytXjnnvuYdOmTRQXFxMXF4eLiwtnzpwhKSmJRYsW9cqJnbe39yXDG1qxYmXgkclk1g7A
      yi9HIpGwZMkSqqqq2LdvH0qlkhEjRvDiiy9eMpqTFStWri9yudzaAVgZOC4XpNyKFSs3FoIg
      3B6LwFasWLFipTviDODs2bO31AKIWq2+pZ6nt3Td2TxQqNVq5HI5gwYN6nYuLi7OatrYS27U
      PQDXyn+VwWAAeg4qP9DodLperT3dTHldjfIT9wE0NDTcUq6Mb7Xn6S3t7e2X3fXY3zQFQeix
      A7By86NXV2NoPnjV8zHv5L0WsZwNBiO2ttfGKeO1ystkMmHrEo2968BYHNbW1lrXAPpL1/1z
      RqNR7JXNx28EN8RqtRqFQsGoUaNIT08X3d/OmDFDtKM3Go0cP36cyZMnk5WVhZubGyEhIZSV
      lRESEnI9xbfSSwwGwy8aFZo6LqCp+mEAJbox0F/5kpsuL6lUCgPUAcBt4AvoaqDRaNi1axf7
      9++noaGBw4cPi+caGhqoq6u7jtJ1otfr2b59O8eOHQM6/RvFxsZSWFgodk6CILB3716OHj1K
      W1sbFy5cIDMzk/Ly8stu7rIy8Jj9JZlMJjIyMqivr+91PTpy5IjF74KCggGXz8qtiXUG0A/S
      09OZNWuWGHu3qqqKpKQk3NzcRL8nx48fp729HaPRyMyZM0lJSUGv1zN9+vRLBjAZSGQyGUuX
      LuXHH38EYPDgwZw7d47w8HBxtFhfX49Op8Pf3x9bW1saGxsRBIFTp05hMpkoKyu74o7I5ORk
      0fWulcsTFxd3yXUA8+xMEASL8KWFhYU0NjYSEhJCYWEhBoOBqVOnUlpaSnNzMyEhIRiNRg4e
      PIhareZXv/oV0LnN/8SJE3R0dDB48GDa29tZsGABKSkp6HQ6xo8fz5AhQ676M1u5sbF2AP2g
      o6PDohH39fXlrrvu4sCBAwwZMgSj0YhSqWTWrFkcPHgQW1tbPD09qayspLS0lOjo6Gsus9lb
      Y9cALVu3bsXNzY3s7Gyio6OZN28eeXl5tLa2MmHCBI4fP96rDsC6CNw7Vq9efckOoL29nUOH
      Dol6cpVKhclkori4mClTptDc3ExoaCh+fn4cPnxY7Lj9/f0pLS1l5syZHD16FL1ez4ULF3B0
      dCQ8PJzW1lb8/f0pKirCYDDg4+NDTU0NeXl5N+yitJVrh7UD6AceHh6cPXuW4OBgjEajhZdR
      M+b/S6VSSktLkUqlREdH09zcfE1kVKlU7N27l5ycHPz9/RkxYgTu7u7Y29tjMpnYv38/v/3t
      b4HOziEiIgKVSkVrayvjx4/n4MGDt+Ui+vXCxcWFmTNnYjQaLWZUgwcPZujQoahUKjQajRgL
      OS4ujubmZnGAIZFIuq07mY+Zjzc3N1NbW8ukSZMsfPBbuX2xdgD9YOzYsWRlZXHo0CEmTJgg
      jpKDg4NxdXVFEATRrC4oKAhvb2+OHDmCUqm8Zk6mnJycWLRoEYsWLRKPLVy4EOjslO6++27x
      +JIlS4BOPyiLFi1CIpGwbNkyq8O1a4h5wV0ikVjUI3PjHRQURHp6OtXV1UybNo3Tp0/T0NBA
      ZGQkWq0W6HRtbGNjQ1BQEK6urkgkEhwcHJDL5QwfPhw3NzcMBgM5OTmXjZJn5fbB2gH0A4lE
      woQJE8TfgwcPBrDwOGr2T24+NmfOnGsmX3/pOoK8nOdTKwOPeWAglUotGmdzPZJIJBYR0npy
      bmhef+qpcTefu+uuuwZOaCs3NYIg3LodgCAIt2XUqNv1ua30H1uXaNwnJl71fKwbwX4Z5vIb
      KCQSya3bAahUqgEvsJsBW1vbAf/AdDrdDTEjWLdunRiic/78+b16zgMHDmBnZ8edd955DSS0
      YuXm4ZbuAOzt7UXVzO2ESqW63iJcNd58801ef/11tm7dyqFDh/joo48wmUxUV1fj6+sr7jBt
      bW3FyckJiUSCn5+fuJah0+lobGzEx8cHiUSCwWDAaDTS3t5+Wy94m9qqMZzedfXz+V8LJ+M1
      2AlsNBrQ2Vyb5u1KedlPeeGayNFX+tUBdN3perldr2ZVRF+2fZt9zvT1voHAvODW0zP1dnev
      wWDAxsZGTMec5vXaFaxSqaioqGDUqFG0tLSQnp6Ov78/ERERSCQSOjo6SE5OxsXFhcmTJ3Pi
      xAlcXV1v2J3Acrmcxx57jPHjx/PSSy+h1+uZN28eQUFB1NTUEB8fz/LlyyktLUWj0fDCCy/Q
      3NyMs7MzUqmURYsWMXz4cAYPHsz3339PSEgIUVFRFBUVsW7dutvWLFJoq6Ij/fPrLcaAY7xB
      8rpROwDox07gdevW8c033yAIAv/6178AS73zzp076ejooLW1lS1btnQ7f/Hvrv9/6623xPsq
      Kio4fvz4L3u6PpCZmQlASUkJLS0tFuc0Gg2VlZXU1NRYjLAv1rWfOHECnU4HdG4WO3LkCMeO
      HUMQBM6ePdtjvl2PD6TuXq/Xk5iYSFZWFgBnzpxh4sSJ4uYggD179hAREYFGo+HEiRM0NDSQ
      nZ1NeXk5jY2NAybLQNHQ0MA999zDI488wssvv8yxY8dwdnbm17/+Ne3t7Rw/fpyCggIOHDjA
      4sWLxfsEQWD9+vW88sorbN++ncrKSi5cuICnpyfx8fH8/ve/p6ys7Do+WWd9AUhKSsJovJZN
      l5XbmT7PAJqammhsbKSlpYX6+npUKhWffvopGo2GpUuXsn79egoKCvjNb36D0WhEoVDw9ddf
      I5fL+eMf/8h7772H0WgkKCiIcePGsXPnTkwmE6+++irQaX1iNBrZtm0bBQUFtLW1UVpaynPP
      PceXX37Jc889d1VG1Gq1GuhUE5hMJlJTUzEYDMhkMsaMGYPBYCA7Oxu5XE5MTAwVFRUolUrC
      wsJwcHDg5MmTVFdXi9YZDQ0NzJ49GwcHByorK0lNTUWn0+Hi4oJCoUAmk+Hr6ysed3Nzo6Sk
      BCcnJ0aPHk1qaioODg7ccccd/XpemUzGQw89JHbCEydOFBs5s0okKiqKTZs2YTKZeOKJJygu
      LkYQBPLy8jAajb3aCXwtcXd3Z9WqVTz77LOMGDGCiooK0YXFb3/7W9zc3FCr1ej1evF9muk6
      u+tqXgnXxjnZlVAqlZw4cYLAwEBUKhVZWVno9Xpmz57NgQMHsLGxwc3NDT8/PwoLCxEEgVmz
      ZpGdnU1LSwtyuZzAwEDxXHR0NFqtFq1Wi9FoZNCgQchkMvLz8607ga0AnX7A+lXzly5dyoYN
      G4BOXfuoUaMwGAwoFApiYmL4wx/+IDZ0mzdvZsWKFURGRpKRkYFarWblypUUFRXh7e3NsGHD
      KC4upqmpCUBMJy4ujjlz5jB79mzOnz9Pdnb2NVWnGI1Gpk+fjl6vx2g00tLSQnBwMGPHjsXN
      zQ2FQkFAQAC5ublkZ2cTFxfHyJEjRfnuvPNOjh07xtGjRwkICCAoKIiIiAjc3NxwcHDg7Nmz
      Fsezs7Px9/dHoVCgUqnQ6/WMHDlywJ4nJyeHU6dO8eijj4oN3qlTp3j66ae5++67USgUzJ07
      F19fXwDGjx9PTk7OgOU/ENjY2DBp0iTWrFnDwoULCQoKwtbWli1btvDtt9/i7OzMww8/zF13
      3cWOHTss7n300Ud5//33WbhwIcHBwXh5eV2np+iZuro6cnNzCQ4OxsnJicGDB9PS0sKFCxew
      tbXlrrvuoqWlBVdXV5ycnDh37hxarZYLFy4QFxeHSqWyOOfo6EhRURHV1dVUV1dTVFSEq6sr
      Pj4+2Nvbk5eXd70f2cp1xsbGpn+LwCEhIezcuROVSsXx48dpaWlh3LhxCIKATCZDoVAwdOhQ
      oHOHY1VVFbW1teJGFYlEglQq5YcffmDatGmcOXOmm/pDJpNRXV2NRqPh3nvvZdWqVXz++dXT
      U2o0GoxGIw0NDYSGhoqdTdfRoY2NDTqdDolEgo2NDS4uLkRHR1NUVITRaKSjo0N8Dr1eT1xc
      HPv37wc6OzaTyURaWhozZswQVSzm4zY2NsjlcsaOHYuzszMzZszg0KFD4iyir6jVapKSkigo
      KBBnGoGBgWzfvp0FCxZw9OhRvL292bt3L+3t7cyZMwe5XI5SqWTMmDGkpKTccAujZidn06ZN
      Izc3F4D9+/fT2tqKi4sLUqkUb29vXn/9df72t78RGhrKpEmTxPszMjJobm4WG3+zemzFihXX
      +Em64+XlRUxMDElJSQwePJhhw4Zha2uLyWSy2Gl++PBhpk6dilKpRBAENBoNKpUKtVptcU4q
      lYozHalUisFgoL293boT2IqIUqnsewcwffp07OzseOKJJ8jNzSU6OpqcnBzc3NwYOXIko0eP
      ZteuXTzyyCNMnz6d6OhofvjhBzw8PIiJiaGtrQ2AuXPn4u/vz549exgzZgxOTk7MnTsXe3t7
      pk+fTlhYGJmZmeTm5hITE0NgYCB+fn4DXghmoqKiOHr0KEOHDsXe3l7cwBUYGIidnR2+vr64
      u7uTlpaGra0tkZGRlJSUMGzYMMaPH8+xY8c6gyz/r2libW0tp0+fJiwsDIlEgoeHB4WFhYSH
      h3P8+HE8PT0BxONTp04lJycHuVyOp6cn2dnZeHl59du+2NHRkYULF4q7f7tuIoL/2xBkdi1g
      a2uLIAgsWLAAiUTC4sWLb5qdwF2tvZydnTl27BivvPKKReMPnYOKG23kbyY4OBhPT0+Cg4Nx
      dnYmLy8PR0dHgoKCLOqiXC4nLS0Ne3t7ZDIZkyZNIj8/H6lUSlRUlHjO1taWESNGiNZQ7e3t
      DB482LoT2IqIm5vbzREQ5uuvv2bq1KmMHj261/fU1NTctmagA+1tVK1WY2dn12NAmNWrV1ud
      wfWSq1FW5jWkkJAQhg8f3q80OhTp6LY+M6ByWfk/XP47f0DSGeiNdDqd7ubYB/DMM32vnNYd
      sVZuB6ZNm/aL07DxnzBgjdTlsO4EvvG4KTqA/mA0GkUnWbcTDg4OAx4T2Gg0WjtTK1ZuQW7Z
      DkAul9+WZm7t7e3XWwQrNxnWncADm5ds9H1IB1+99cqB5JbtAAaai1VKF5ukmkymG8KevCtt
      bW0oFAqioqJobGzk2LFjBAQEEBMTI9rFnzt3Drlcjre3NxkZGeJifklJyYCaoVq5dvQ1RrB1
      J/DA5mXjP8HaAdxqtLS0kJOTg0KhIDg4mDvuuMPi/OnTp/u0SH210ev17NmzB5VKRVRUFCUl
      JUybNo2tW7cyatQo7O3tUSgUpKSkMGLECBwdHWlsbKS8vBxbW1txX0ZvqK6uvopPcuPh4uLS
      53vkcvmAypCWlsbZs2fx9/cnMjJStCqDzhjBM2fOHND8rNx6GI1GawfQW9zc3IiLiyMpKYk7
      77yTCxcuUFBQgNFoZPbs2RgMBnJzcxk1ahSpqanExMSgUCgICgoiKysLnU7HnDlzSEpKQiaT
      MWjQICZOnHjV5JXJZCxevFiMCTxp0iSKi4uRSqWieWdgYCBz586lrKwM/ghwWQAAIABJREFU
      mUxGfX09ANnZ2RiNRoYMGUJoaOgV8zJvHrNy7ZgyZQoqlUps6A8fPoxGoyE2Nla8JiMjAwcH
      B9EXlF6vF/0kxcbGint1rNyeqNXq/u0EtgKDBg3C0dGRiooKdDodDQ0NuLq6UlJSgk6n4/Tp
      09TX1+Po6IiLiwvt7e3U1dVhZ2fH7Nmzr7mu/sSJE2RnZ/P444/3qKpydHRkwYIF+Pn5IZVK
      mTx5MtnZ2ddUxpsRs2qwp79rRX19Pc7OzsydO5ecnBxMJhP79u3Dz88PX19fTpw4QW5uLlKp
      1OI6K7c3JpPJ2gH0lyNHjhAREUFAQID4sQcEBHDq1CmGDx9Oa2srcrmckydP4ufnx4gRIyx8
      0FxtlxYqlYqtW7eSn5/P0aNHSUpKQhAENm/ejE6nY+/evZSUlLB3717S09MpKytDLpejUqkY
      P348Bw4c6Jc10blz50Rnej11ILt37xbLKyUlBaVS2WM6ZnkBGhsbb9idqxqViqSdW7v95Z/M
      vGYyyGQy0ecPdNYtNzc3Ghsb8fT0pKmpCUEQkMvlFtdZsWJVAfWRESNGABAbG0tmZqboZCsk
      JASJRMLo0aMZMWIEUqmUoUOHIpFIyMrKwtnZmcGDB4v3m/+9WlwcE/jiNQtzTOCuKh5BELjv
      vvuQSCQ8+uij/bLXPnr0KLGxsbi6urJx40ZiYmLIz89HIpEQERFBRkYG8+fP5+zZs+Tm5jJ6
      9Gjq6+vx8vIiPz8fDw8PgoODxZjKFRUV5ObmcuHCBWJjY8nKyiI8PNxC5327YnbU5+rqilwu
      JyUlhSlTptDQ0EBQUBCFhYXo9XqGDBmCj49Pt+usWLF2AH3EvC3fy8uLWbNmicfNuzDHjBkD
      YGFB0/U68wKiOUbrjUTXWckvcQOxfft20tLS0Gg0pKWlkZaWhslkEl1pb9q0SYx1m5+fz6lT
      p7j33ntpaWnhu+++4/333+fAgQOEhoby6aefMnbsWAA++OADJk2axJtvvslH/5+9Nw+L8rz3
      /1+zM8AAwyK7iohsAioiIgq4Ek1MbTRqmq1N0tMl59ueptvvanNam3Pac5q26WmaXm3TbKdp
      azabxWgiLogoiIrgxibKIpvsMPv++4MzTxjBiDIg6Lyuywu855m57+fhmefePu/P+4UXhE7i
      bmV4plbnfQef3WNJSUn09fVhNBpH3J8ePMCwDsBut99RU8M77XzGilardft5GwyGm0ovkZ2d
      TUJCAnV1dVy8eJF7770Xm81GZWUlPT097N+/nz/84Q/U1dXxxz/+kf/6r//i0qVLQipjZyrn
      +vp61qxZQ3x8PIcOHcJoNLJ27VpOnz6NTqcbNTWFB1ecwQufh0cJPH3qcjfCX0Kj0QhCjTuB
      wcHBu1IJLBaL3d4B3Mx9IZFImDFjBhERESgUCpYvX86f/vQnHA4HTz/9NA0NDTzwwAO8+OKL
      qFQq/vu//5uXX36Z2NhYjEajy0MiKSmJn/70p0RGRhIVFcXcuXN5/vnn0ev1txSK6cGDB1em
      RTK4W8GTDM59jDcZnNOB7POM5R0OB0ajES8vL5elKLPZjFgsFkaNOp0Ob2/v22azeS16rZbS
      wwdGlIdFRJG8aLFL2VRNnNfb0kXVp6cnvJ6xWqu6pS67HdEkCTOH15Vybwb+4YETUo+7Z1Cd
      nZ2ePYBrceZfH+7re23YpMlkQi6Xj7iRu7u78fb2FqaDEokEh8MhKDOvPd7hcAy58ojFiMVi
      7Ha74A3gji/JwMAAzc3NpKSk0NHRQVlZGenp6URFRQFDSzvFxcVC2OeFCxcICAhg3rx51NfX
      j0kDMBY+78HvRCQSjSqWuva97u7cxou3ry+r79t02+q3WCzIZDIsFgsSieS6avThAzyr1Sp4
      dwBYjBZ6Gq5OWpvvZCwG8+1uwk3hCQO9hpKSEsrLywG4cuUKH3zwwYhjysrKhN+Hx3vX1NTQ
      3NzMkSNH2LNnD1qtlmPHjlFSUkJFRcWIzzl+/DjHjh0TTFkKCgo4cOAAnZ2d4z4Pi8VCYWGh
      EO+9f/9+1q5dS0FBgbBE1NDQQEBAABkZGVgsFvr7+zl37hyXL19mYGBg3G3wMPEUFRVhs9nY
      vXsol8/19AfDHcA0Go0nZ5QHwBMFNAKbzYZGo8HhcHD58mXUajUWi4Vjx45hNptZtmyZcGxx
      cTEWi4WFCxfi5+eHSCRi7ty5xMfHc/z4cQwGAyaTidWrV3Pw4EFsNhttbW1ERkZiNpvJyMhA
      LBazd+9eGhsbWbRoEUFBQRQVFY1bpSmTydi0aZPgCWyxWOju7sZgMAijRZ1OR3V1NR0dHaxc
      uZLu7m5gKDLHZrMREBAw4eGqHsaH0WikoKCAvLw8+vr6OHr0KDBk3HT+/HnBWvTKlSscPHgQ
      GIpQs9vtBAZOzFKFh+mDZwYwCkFBQfT09CAWiwX7R2fYYlNTEzA0pdZqtURERHDmzBkuXrxI
      XFwcYrGYwsJCVCoVgYGBwnqdWCzm6tWrdHZ28umnn9LR0YHJZGLv3r2kp6cTGxvL6dOnOXbs
      2IRsXm/evJnW1lZkMpkQPrl48WIef/xxoqOjqa+vZ/369URERCAWi1myZInHN3YaYDKZ0Gq1
      KBQKzp8/z4YNG8jPz+fChQsYjUZWrVpFVFQU0dHRrF69WggSuBsj5DyMxDMDGIXExETefvtt
      8vLyqK+vp7GxEYlEwrx58wTlqlwuRyKREBgYiFqtpra2lvj4eEpLS5kzZw4RERGIRCJ0Oh0m
      kwmz2Ux4eLhL3pyPP/6YFStWoFQqkUgkrFy5kq6uLiEnz3hwegJXV1dTWlqKWCyms7OTyMhI
      JBIJBw8eRK1Wc/nyZXp6etiyZQsKhQK9Xs+iRYsoLCycsvaJHj7D39+fFStW8PHHH5OUlCTk
      pwoNDaW6unpoo28Swi49TE88d8Y1xMbGIpVKWbRoEZGRkTgcDkJDQzlx4gRWq5WoqCgCAgLw
      8/Nj5syZXLp0iejoaCF6JSgoiI6ODjo6OkhMTGTBggWUlZWxZMmSERu7YWFhVFdXA7Bo0SJO
      njyJUql0i1jnWk9gu92O0WhEqVQiEokET+D58+cjkUiEDesNGzYgEonYtm3bLT04nBuMwIhN
      yb6+PgICAkbd4O7v78ff33/KRPeMlQGdkXcLq0aUx0YGsnLh7AmvPz09HYVCwZo1a1AoFLS2
      tiISiZgzZ44ws4uJiRHuqQULFqBUKj0GPx4ATwcwAmeEjDO1c3R0NDAylQJAQkICANXV1SQn
      JwMQHx/vcoy/v/91s2UuXuwaJjhaHe5CLBaPmttneJSNO5TAL7/8MqdOnWL27Nls27aNefPm
      CZFUL7zwAs8995yQE2l4lNVvf/vbKRkieSN0Bgu7S+pGlOekzZqUDsC5NOkMeY6NjRVe8/Ly
      Yv78+aMePxyZl4ygmInPDHo3hIHKlDeOeJtK3LEdgMPhmDRhm/OhfycJ6W6Vb37zm/zsZz/j
      mWeeQSwW87Of/Qyr1coTTzyB3W7nV7/6Ff39/Tz77LM8//zzwmswNAvYuXMnsbGxxMXFcfHi
      ReLj44X0Gx4mBv/wQJY/lT/h9XiUwFOPO7YDsNlsggDpbmIqeQKXlZWxdOlS0tLSeOuttxCL
      xXzve9/j2Wef5fjx4y6v2Ww2/v3f/50f/ehHFBUVodfr6e7unpI5kzx4uFO4YzsApVJ5V4a5
      TaX47sDAQI4dOyb4M/f29iISiRCLxQQGBlJSUiK81tfXx7Jlyzh+/DhisZimpiaampqERHAe
      Jo6m3gb+fvqNCa9nMpeA3GXROiswhscynnRDi6YmbukAbDYbVqt1VHXscBwOB6WlpSxbtgyz
      2YxUKp0SPrrOEa4z5PNmMJlMSKXSEe+zWq1CzL/dbheUwJ933sOnyHa7HavVikwmu+UvTF9f
      H42NjSxcuJD29nZKS0uJi4tj/vz5iEQibDYbBQUFqNVqMjMzKSkpQa1Wk5iYSE1NDYmJibdU
      74YNG1AoFKSmptLe3k5raytbt24VRGkbN24kLS2Njo4O4bWzZ8+SkZFBYWEhycnJQnhsWFjY
      LbXhbsCpAh7vEoTeoqP66sQng/Mw9Rh3BzAwMMAvfvELvL29WbFiBatWrXJJpzCcxsZG2tra
      0Ov1PPHEE3z/+98nPT0dwMUs5Xrvnyh2795NUFAQISEhJCQkuLTlRpw/f57Y2FgCAgJc3ldV
      VYVcLmffvn1CVIbFYqG9vR2bzUZ+fr5LHVVVVbS1tdHf309+fj5HjhxBqVQSEBBwS6Ngi8XC
      oUOH0Gg0LFy4kL179/LQQw/xj3/8g/j4eORyOUVFRcycOZOLFy9SVVXFwMAAV65cQSqVXteo
      ZSxkZGQIv99zzz3C75mZmS4/h7/mtMd0ps7+yle+csv1Tyb+vgq+fn/6iPLw4IlPVldUVER2
      djb79+8Xor2G47wfT506RXp6unC/3cz97eHOZtwdQEtLC97e3vzbv/0bPj4+nDhxgv379xMc
      HMyKFSuoqalhYGCAjRs3cvDgQTZv3kxpaSlf+MIXKCwsZOHChfz2t7/FbDYze/ZsFi9ezM6d
      O/H29hY2EicaHx8fVqxYAQwJvS5evIhSqSQ2Nlbw81Wr1fT39/PFL36R48ePo9VqiYmJET6j
      vLycwcFBwsLCSExMpLu7m5ycHOLj42lra6O5uZmBgQHy8/MpLi7GYDDQ1dVFWFgYNpuNefPm
      kZiYSHFxMb29vahUKnJycvjkk09u6Qsrk8nYvHmz4AkcERHBq6++ikQiESJ8Ojo6WLVqFSqV
      itraWiEFxdmzZ7HZbKhUKiHSycPo+HjJWb/UPTmTbhadTkdBQQHr1q3j4MGD5ObmUllZSXR0
      NCUlJcjlclJSUqioqECv15OSksKRI0fw8vIiOjpaiHTzcPcy7qdrUlISS5cu5Sc/+QlHjhzh
      7bffJiUlhbKyMubOncvJkycxmUwEBQUxMDBAQEAAhw8fJjg4mOrqahoaGvDy8uJb3/oWjY2N
      fPDBB8yZM4eWlhba2trccY43pKuri0OHDlFXV0dlZSURERE0NTWh1+tJTk4mNjaW1NRUQkJC
      sFgsBAYG4u3tTU1NjfAZtbW1hIaGUlNTI2TklEgklJeXU1dXR2ZmprBM5O3tjU6no6WlhQMH
      DgiOWc7lmJkzZ2IymTh06JBb8gLB0MP+m9/8Jmq1Wsi3L5FIMJvNaDQagoKC+MIXvkBkZCRS
      qZRly5Z5lMBTHL1eLyxBzp8/n9OnT9Pd3U1XVxdZWVls2LCBuro6YmNjWbFiBUajkblz55Kf
      nz9p3y0PU5txzwAaGhpQq9Vs2bKF8vJywXZu69atggPU5cuXOXfuHImJiVitVgYGBpBIJERF
      RXH16lVqa2s5cGAopW5AQABSqZRNmzZNWubHkJAQYemhvr4ePz8/YUkCXDetHA4H1dXVrF69
      mmPHjgnlcrmcoKAgFi1axNmzZ0lLS6O1tZWBgQGys7MFgxqdTkd7ezsLFy4kOztbeP+RI0eY
      O3eusGeQnZ09rkgmnU7Hvn37qK6u5ujRo/j4+PDBBx/Q19eHTCZj3759ZGdn8+qrr2Kz2Xjq
      qaew2WwYDAYWL17MgQMHPOvvU5yQkBAyMjLYt28f9913H0ePHiU6OpoZM2ZQVVWFTqfD398f
      i8XClStX8Pf35/Tp06jV6rveTc3DEOPuAEJCQigvL8dqtfLkk09itVrZs2cP/v7+dHZ28q//
      +q/09vaya9cuvv/976PX63nqqadITU0lISEBrVbLY489RktLC0qlkocffpiPP/6Ynp4et4cz
      Xo/h4q2cnBwqKyvx8fFhzpw5iEQifH198fHxEVTCkZGR1NTUkJCQgLe3N0qlkmXLllFfX09Y
      WBgGgwGlUolUKkWhUHD69GmioqJYsWIFJ0+eJDk5ecTS1owZM7h69SpXr14lOTmZ+vp6dDod
      ubm5t7Ree60nMAwlDlMoFIhEIsET+Mknn3RRAm/cuBGRSMTDDz/sSSEwxUlPT8ff35+lS5di
      s9nw9fVlwYIFyOVyYWa3ePFibDYb1dXVQodx9epVcnNzb3fzPdxmBgcHx98BqFQqHnzwQZey
      Rx55xOX/kZGRnD59WjDySE1NBYbWpS0WC6+88gomk4nt27fj7e3N1q1bx9usm2J4rLmvr+91
      FbnOfPXDNzmdREREEBERweDgIGazGZFIRFhY2IhR9PXs+a5da3dujrsTLy+vEWXuVgLfbTjs
      Vhy67hHlIqkXImXAhNbtVPUGBwfT3t5ObGys8Pd0KtphKKosJSUFGLqHr83x5C3zITHUVTE8
      EUzXMNA7lcDAwMnTATz++OOjlstkMr7xjW+4vb7b5Qns4+PDvHnzblu2RWd6BXd/5lipqqoi
      NDQUjUaD0Wj83E3k5uZmoqOjp3VEimOgFd0b944olybci3L9LyetHeHh4bf83lmBMfx7/n+6
      sTWjc6cqgacrVqv1zhWCGQwGIb/93cRw+0R3YTabx+TqBUPRUGlpafzv//4vzz77LKdPn6al
      pYWcnBy6urro6elBo9GQkJDAc889x2OPPUZWVhYHDhwgMDBw1KR5Hjx4mBju2A5ALpfflcbh
      zo3328nvfvc7NmzYgFqt5syZM5jNZl5//XWkUilRUVGUlJQwa9YsFAoFQUFBvPPOO/j5+VFY
      WEhAQMCIhHoeJhZzUxODf/v7hNcz3ZaA1I89ivwOz0N1x3YAt4ozoZtYLBYSyl0bMWEwGEaY
      l8OQybKvry8SiURQBzscDmEEfe3xdrtdUHOKxWIhlfJo/sG3Qm9vL83NzSxYsEAIK/X29iYn
      JweRSERXVxfHjx/H19eXnJwcysrKUKvVJCQkUFtbe8sagM2bN1NYWMiGDRvYt28fixcvFiJS
      li1bJkSk+Pv7k5SUxJ49e1i/fj0ymYyOjg5PB8Dos67RfH0HBgaEslvFodNjqqoe12fcidj/
      L1z6Tub252GYYhw7doxTp04BQ6Kw0TyBT548Kfw+fH28rq6O5uZmTp06xd69e9Hr9RQXF3Pi
      xAnBZ/jazzl9+jQFBQUMDg5y4MABDh06REdHx7jPw2ljeeHCBQA++eQTFi5c6KIqFolErFy5
      EpFIxOnTp9FqtVRVVVFfX4/BYLilelUqFXFxceTk5HD48GEMBgOtra0EBATg7++PRCLBz89P
      cFl76aWX2LBhA7/5zW84cuTIhGx+T0eOHDkyomw0X1+PVsPDreKWKKA7Dbvdjk6nw+Fw0NjY
      SGBgoPAwNZlMLp7ARUVFWK1WFixYIBidxMfHYzAYKC0txWazYbFYXDyBm5qamD17NkajkcWL
      F6PVaikpKaGpqYmFCxcSEhLC4cOHx7WpB0Ob6xs3bhQ8gRsbGwUv4E2bNgnmNbt27aK5uZkn
      n3yS3bt3IxKJuHDhAlarFW9v75sejW/atAmAuLghdezatWsRi8Uu0/Evf/nLAHzve98b2oiS
      StmxYwdisXj6xaeLpYj8o0cUi7zHn4jQZDKxe/duAgICyMvLG9XXF4aW/Y4fP878+fOpqqqi
      p6eHFStW0N3djdFoxGq14u/vj1qtprq6Gp1OR2JiInPmzBl3Gz1MX9RqtWcGMBrBwcF0dXW5
      eAI73aqam5uBoem4TqcjLCyM8+fPC5aQdrudkydPotVqXTZknZ7AGo2GTz/9lO7ubjQaDWVl
      ZSgUCubOnUtlZSVHjx7FZDK5/ZxCQ0PZsmULXl5eDAwMCOX3338/6enpNDY2snHjRsLDw5FK
      pSxdulRwKxsPn5fwTyQSCcnuhnsVTyfE/pH4PvHJiH9euT8c/2eLxcjlcry8vBCLxaP6+up0
      Onbt2iUs64nFYmG5raWlBZ1Oh16vp6WlhZCQEMRiMQEBATQ2No7/5D1Ma0wmk6cDGI2EhAT2
      7dvH3LlzgaHRs0wmY86cOcKSj0KhQCqVCgnkuru7hZTHS5cuJTY2ls7OTnQ6HQaDQfAETktL
      Y8OGDcycOROj0Uhubi5GoxGpVEpOTg6zZs0a9+gfhtIEfPTRR9TW1gpZQN9++206Ojrw8fHh
      4MGDnDhxgj179tDQ0CAY2JtMJhYtWsThw4fvyk30qYTZbGbBggXY7XauXr066jE+Pj4sW7aM
      kydPUllZSUJCgrB34By8yOVyYb/AbDaPe8/Aw51BT0+PZwnoWuLi4pBKpSxZsoTw8HAcDgcz
      ZswQ9gXCw8MJDAxEpVIRExNDY2MjkZGRgteuyWTi9OnTKJVKZs2ahVKp5PTp02RmZo7Y2O3t
      7aWhoUFYZqmsrESpVApCufFwrScwQEpKirA5vXr1amGDeviG9T333INIJGL79u3TckR+p5Ce
      no63tzetra2Eh4cTHh4uCBGH+/oGBgYKHtUqlYq6ujry8vKQy+UsWbJEmGGZzWYCAgKIjo7G
      19fXLb7THqY3arXa0wFci9O/1/lQjoyMBCArK2vEsc517pqaGiGzYlRUlIsKczQ1sJNrszGO
      Voc7uVYYIxKJXMqGd1CeNBC3F6fKd968eUJZQECAy2vwmTrdqe5NS0sbcTwgpFUZbU9H5OON
      IunWvB9uhukWBiqepFQ0twu5XP5ZB+DcsLxTcJrUTAbOpaLJqu/z0Ol0bm+HyWS6K93V7hbk
      s2YR+pN/n/B6PErgqYfwl9DpdHeUAtNsNmM0Gm93MyYdZ+I6d6K/iXhoi8UiRPMYjcYR+Yeu
      XLlCVFTU595rWq0WmUxGZ2fnDY+1Wq1oNBoCAgLo7e3Fy8tLOP+enh4CAwNd3m8ymbBarW67
      Rrb+fvre+OuIckVCPKp7Jt5o3YOH8SB0AH5+fnfU5pBYLL6jzmesaDQaYVnAXThFR2Nh165d
      pKSkkJyczC9+8Quee+45IS+SRCLhlVdeYceOHZ/7GefPnycyMvKGx5pMJn784x8TFhbGrFmz
      EIvFzJkzh9TUVCQSCYWFhWzevBkYmhGKxWI+/fRTgoODyc7OxmKxIJVKKSsrQ6lUkpaWJuRS
      Guvygd1oRH/8+MgXJJJp0wHYu2owFf96wutx3kPmSVoCso1jCUiR+0MkM+58M6S7aqHX4XAI
      01CJRHLDL7nD4RAeHCaTyW0PVrvdPubPq66uJiEhQRjF1tXVMWfOnBtOo+12O2VlZbS0tJCb
      m0ttba2QqfTee+9FLpej1WopKCggIiKCzMxMiouLUavVQjx5cnLyTZ+bM/e8UqlEr9dz5coV
      fv/73wPw7W9/GxgyzykpKcFqtbJ161befvtttmzZwvPPP4/ZbCY3N1dYcuro6GDnzp34+voK
      xz700EP4+fmh1+vR6XR84QtfIDY2lvfff5+dO3fypz/9iR07dtDQ0EBLSwvPP/88MpmM9evX
      4+XlRVZWFn/84x8ZHBwkNjaWkydPYjabefzxx9m5cydqtZrt27fz7rvv8r3vfY/f/OY3fPe7
      352SM2SbzcbAwABqtZqenh5h0ONUmWs0mhsOhBwmDbaWk597zHRkPOkYHSaN29oxlbmrwkAd
      Dgc7d+6krKxszE5bzrz8N6u4/LwRs1arFRS6n3d8e3v7iKW5kJAQjo824rwGZwezdu1a9u3b
      R3p6Ojk5ObS3twvRPR9//DGrV6+mtbWV2tpadDodVVVV1NbWjkuLUFlZSXFxMRaLhcOHD/P4
      44/zyCOPcOTIEXp7e3nhhRf40pe+hEajwW63o9FosNlsdHV18Ytf/AK9Xo/FYsFms/HjH/+Y
      xx9/3OXYnp4efvnLX9LZ2cm3v/1tdu3axSuvvALA9u3bWbVqFZ2dnQwMDGCz2UhNTeXpp5+m
      ubmZ/Px8xGIxR44cEawTV65cyebNm4Xoq4CAANRqtaCXGK6bmEro9Xr++c9/Ch3d8HvUZDLR
      09PjUQp7+FzuqhkADEX5OPP9V1ZW0tvbi1qtxtvbm8bGRgYHBwkKCkKv13Pvvfe6rH8fO3aM
      ZcuWCRkvZTIZ7777rjCSt9lsZGVl0dTUhEajITQ0FKlUOuJzc3JyOH/+PJ2dnaSlpWE2m7l0
      6ZIgCKutrcXb25uBgQFWrlxJfX09ly9fJiQkhIULF6LRaG7oE6xUKklMTGTXrl0sWLBAsLBM
      Tk4WOgCFQkF9fT1isZiOjg46OjoQi8WcP38ei8WCQqG4pVnAvffeS0pKClVVVURFRQmq6KSk
      JNRqNXFxcRw8eBCpVMrx48e5dOkSADExMS6zIolEwtatW/noo49cjlWr1TzzzDN0dnZSUlJC
      RkYGx44dIygoCJFINOK6jFYWFBTErFmzCA0NRSaTUVFRQUxMDGvWrOHSpUuUlpai0+koKSmh
      r6/vpq/BZFBRUUF+fj5+fn4AHD9+nEOHDqHT6Vi5ciWdnZ3YbDYKCwvp6elh06ZNHD161KME
      9iBwV80AAC5evCh47fr5+aFQKLh06RIajYasrCwCAwNZuXKlEDbX398vvNfLy4vW1la6urqE
      JZigoCBWrVpFYGAgS5cupbOzk7q6OmbMmEFdXR2Dg4Ojfu78+fO55557qKqq4syZM4SGhtLc
      3IzBYEAkEpGRkSEkotPpdMjlciG8dCzr0zabjddee40VK1aQkpKCw+GgpKTEJZXFxo0bkUql
      OBwOwsPD2bx5MxEREchkMpYvX35LSuDc3FzBYOfRRx8lNzeXefPmkZSURHZ2Ng899BAPP/ww
      YWFhbN++HbvdzlNPPYW/v79gLLRixQqio6PZvn07+fn5pKWlsXXrVuFYHx8fZDIZYWFhREdH
      Y7VaeeaZZ1i6dCkxMTEsW7aM2bNn86UvfYkZM2awZs0aQkNDWb16tdDOn/zkJwwODjJr1iyy
      srKIj4/HZrOhVCqJiYlh1apVfPWrX8VoNPK1r33tpq/DZGCxWFwSxgUHB7Nq1Sp8fX1xOBxC
      6o+VK1eSlJQkdPAeJbAHJ3fdDCAuLk7w/y0pKWH16tX09vYKrztHiqONrhcsWMDf//53Fi5c
      6PL6te/x8vIiJCQEX19furq6Rj3GbDZz9epVvL29sVqtqNVqwYcfGjkGAAAgAElEQVR45syZ
      Lp8/c+ZMZs6cyeHDh9m0adOYNmQ7OzuFEfLs2bOZNWsW0dHRyGQy7HY7+/fvZ+7cudTX1zMw
      MEBcXJygWM7IyBD2Bm6W4e5q8+cPuUzl5OQIZYmJQ/HmzqRv9913n/CaM/todPRQbh3nyNaZ
      wG74sTA0Q1i6dKnwf19fX+Cz+Hd/f38AZv9fSt/hkT8zZsxg/fr1wv/XrVs3ov1JSUkjtBrX
      IgkIIPi7z4wsD5r4sNmUlBT279/P4sWLr7snZLfb6e7u5uLFiyxZsgSz2Ux0dDStra0T3j4P
      U5+7qgMQiUTCAwiGRDbV1dXMnz8fX19fvLy8BKGM82dCQgJeXl7Mnj0bsViMSqVyeSgkJCQg
      k8mIjY1FpVIhlUoJDg7m8uXLREREMHv27BGf6+XlhUQiobW1lczMTMxmM2fOnMHX15dZs2YJ
      D/9Zs2Zx6dIl/Pz8uHjxorBcJJFIbrghGR4ezk9/+lOXMqcgTSwWk5+fj8PhICIiQkht7e3t
      zYYNGxCJRDzyyCMeJfAYEHt54Z2x+LbUHRQUxPLly2ltbSU2NlZQ9y5cuFBI5Ge32wVDHrVa
      zeDgoEcJ7EHArR3AoUOHhJwlixYtuulMkkePHmX27NkuSlp3IhKJBGUvjFTiwmfKX+fo1/lz
      xowZXL58mcTERJcHo/P10NBQ4DNl5rXq32s/NzMzU3hNKpWOqgKOj4/n2LFjxMbGCkrPiooK
      l1HveBCJRC5r7h4l8PRDrVYLymDn39I5A3LOoIYrgkdVAitUSKJG+ly7m+mkBBYp7o48WG79
      lsfFxVFWVkZ6ejpBQUFUV1czODhIQkICpaWlhISEEBUVhcPhQK1W09TUhK+vLydPniQnJ4fm
      5mbUarVbOgBnGJw7cS5NTKZiOjMz00XZ61xWuV4bnCY27sTdHsMephbikAS8H3x9wuvxKIGn
      Hm79S0RHRxMcHMzs2bNRqVR85Stf4YEHHiAsLAy5XM5f/vIXvvWtb1FQUMCiRYsYGBigsLCQ
      Rx55hBdffFFIqeAObtXQZLojEoluqyewBw8epg8T2hUvXLiQL3/5y3z44Yd0dnaiUCgIDg4W
      Nie/+c1v8uabb3L27FliY2PdWrdcLhc2Be8mpoIn8N2ExWajXTM4otxHLifI270pOSYKjxJ4
      CHFIPF55/98EtWjqYbfb3d8B+Pj4CJ62zrhsu91OZ2ensC6XnJzMpUuXUKlUrFy5ku7ubkJD
      Q4XwvqmE3W4Xpq7O1LowFGbpNOC4ETqdDh8fHxoaGoiIiBCmphqNhoGBgQnZ87Db7Zw4cYK2
      tjays7Px8/Pj0KFDKJVKwQaypqaGhoYGbDYbCxYsoLGxkYCAAJKTk6murr5hBMxo2Gw2du3a
      RUNDAw8//DD79+/nK1/5yqjHvvzyy/zLv/zLeE/1tjJgNPKH40dHlC8Ij+ShtEWjvOPWsFgs
      Qm4rsVh83VxGVqsVrVYrrPsbjUYUCoXLursztYfzu+ZRAt+dOBwO93cAX/rSl4TfndL/L37x
      i9x3333CA9QZ/y0SifjGN74h5GSZilL7xsZG6uvr8ff3Jy0tTUhu1tHRQUBAAD4+PjcUZZ06
      dYrs7GwuXbokhCTCUNhiSUkJkZGRbj93k8mESqVi9erVfPLJJygUCpYvX+7y4JgzZw7R0dHs
      2bMHk8mEwWDg6tWryGSyW97n+PDDD7HZbHzta1/DarVSUVEBwPLly9FoNCQlJXHhwgXmz5/P
      +fPnef3118nOzsbhcAhObDNmzPBkH72GgYEBGhoaOH/+PBkZGcyfP3/U+06v13Pp0iUhzLa9
      vd0lsgwQhISea+xhUkI9RCKRyxqyRCJxiaSZaqP+4VitVpKSkoiKikKv13Po0CHkcjmhoaEE
      BARQXl6OXq8nODgYiUTClStX0Gq1rF27lqqqKgwGA4ODgzQ0NBAXF4fVauXAgQN4eXmxfPly
      IiMj6ejocIsL2HCUSiVz587l/fffJzU1lYKCAmEms3nzZuFv4pzhREZGUlJSgkQiobq6GovF
      gkwmu+lZwLlz5/jOd76Dn58fJpMJm83G4sWLeffdd1EoFMyePZvCwkJhv2fVqlX87ne/Y/Hi
      xaSmpnLmzBkWLVrkeThdQ3BwMMHBwQwMDAidZ1tbGwaDgfvuu4+9e/fi7e1NcnIy586do6Oj
      g9mzZ9Pf309MTAwHDhxAKpViNBpJTk7Gbrd7rrGHu08JfCtUVFRQXFyM0WjEYDCQnZ0t5N2/
      dOkSgYGBXLp0CZ1OR0ZGBomJiQwMDKDRaFixYgX+/v5Coi5ndJLTezc4ONhFiOYubDYbf/3r
      X8nJySEpKUnwBPbx8XHJbXP48GFyc3Px8vJi06ZNwob9smXLqKuru+l6IyMjqaqqEtoQFhbG
      3LlzhfVfu90u/O7v78/MmTOFwYAzE6eHG9PR0cG6deuIiYnhwoULxMTEsHr1ary9vUlJSWH9
      +vV0d3djMpmEmYLTKczpJ+zh7sZut99cBzAwMMDf/vY3du/e7fYv6q5du6bsl3/hwoWsWLEC
      mUxGRESEy3Tay8uLGTNmCInEhuedMRqN6PV6jEYjvr6+aDRDGQaXL19OV1cXnZ2daDSaCdms
      7u7upre3l9LSUk6dOkVCQgJvvfUWnZ2dgieww+FgcHBQ0CiIxWKsVqvgCexU0t4M27dv5+DB
      g/z4xz/mypUrREdHIxaLiYqKIiUlhV/96ld0dXUJXrXPPfcc99xzDwkJCbz++utUV1cL6TI8
      XB+xWEx7ezvNzc3MnDmThoYG2tvbR/XAEIlE9PX1UVFRMWUT23m4PYgc//fU7e7uvmHa2B/+
      8Ic8+OCDgrL1wIEDBAUFkZGRwalTp+js7CQ6OprGxkays7Npb2+nu7sbtVpNamoqJSUl9Pf3
      s2rVKiH/jsPhICsri6KiInJycigqKkIkEpGTk0NFRQVdXV3MmTOHmTNnUlRUhFqtJiMj44Zr
      5u3t7bf0ALuWgYEBpFIpPj4+WCwWIalbT08PKpWKgYEBmpqaCAsLQ6lUCmmKZTIZ3d3ddHR0
      MGPGDMLCwigrKyM7O1vI0JiWlsahQ4dYuXKl21S3zg3n0XD6/15v43q4UMdqtQqKY71ej1wu
      F4RFw9mxY8eInP3DO/Lhf6dry6/3/6m4F3Q9+g0Gdp49PaI8LiiENXPnuZSNdq1ulr6+PtRq
      NTabjQsXLhAeHk5ISAi9vb10dHQQGxuL2WzG19eXgYEBQXPT09ODzWajoqKC3NxcHA6HIBwz
      Nx3H9M+nxtWuOwFJVMYt6SEmS3Pgbh1Fa2vr2PcA7HY7drud9PR0RCIRf//731GpVBw8eBB/
      f39eeeUVtm/fzh/+8AfWrVvHnj17qK2t5f777+e1117jP/7jP9BoNLS1tfHRRx9x9uxZ1q5d
      y1tvvUVWVhb79+/HbrfT0NAgRAu9+eabPPHEE7zyyivk5uZy+fJlIS/MZDG8E5HJZAQFBQEI
      P0NCQggJCRn1Pc4cPk78/Pyw2WyCDF+j0RAWFjZpKRduFMvvLiXw9R7go2XpHMv7pjIBSiXf
      yMyetPqcql+JRCLMOgECAwOFNX3nw2i4Ari9vZ2+vj6ys7NHuLR5lMBDiENuLnPBncCYv+Ui
      kQiDwSAYpLS2tvLVr34VuVxOe3s7M2bMICsri5KSEtLS0iguLkYsFrNkyRKOHTvGlStXOHr0
      KHPmzEGr1SIWi8nNzWX//v1CHa2trSxdulQY3YSFhZGVlcXHH39MdnY2nZ2dfPjhh2RlZd3w
      JhoevjlVSElJAT7ryZVKJQkJCW5t52ipjz14cCrIR8OjBL47kUgkN9cBbN68mWeffZbAwEDW
      r1/Pr3/9a+x2Oz/60Y8oLy9HJBLh7++PTCbDx8cHu93Or3/9aywWC6GhoWg0Gjo7O4mJiRFG
      J84RTUBAACtXruQPf/gDDoeDb33rW7S1tQmvVVdX09vb6xKL/3ncrRuKCoXitlpCevDgYfpw
      U3sA4CqAGm4APho7duzg2WefFdaSxxLv/3mjhButYQ9nrOdzp6HRaFCp3JvIyrlXM9Y9AA+j
      M1Wv1eWuev5++o0Jr2cqLwE9mvEkswNjbqmu6boH0N7efvM6gJuJ33/mmWdcUhePJd7/805u
      quWjcTgcGAwGvLy8Rtxszuie27UcY7fbOXbsGG1tbeTk5BAUFCRstDtvVqcnsLe3N2vWrBE8
      gdPS0jh37pzLGrOHqYvVasVutyOXy28pb5PeoqP66vkJat30QG++O1OoTOhi3GgjxjuJQ4cO
      4eXlhc1mY8WKFUIki0gk4uTJk6xcuRLghkrhicBkMhEYGEhaWhoffvgh8fHx1NXVsXTpUqED
      +PTTT8nNzaWqqoqTJ09iMpmoq6sTBGK3gsFgQCaT4XA4MJvN9PT0EB0d7XL+VVVVJCYmIhKJ
      hEiV4RuW04keXTcvFb8wojwlPI0H0rZNShvq6+spKSnhiSeeoLi42MX5zIOH6zEhqSDuJgYH
      B0lNTSU4OBir1UpBQQEikYjFiz8zCDl8+LAg/Pq8jTh3o1QqiY2N5d133yU9PZ2kpCTBncxJ
      eno6L7/8Mna7naeffpoPPvgAiUTChQsXBDtB58b1WHnvvfdYtGgRn376KWvWrKGlpYXo6Ghs
      NhtmsxkvLy/efvttduzYgc1mo7Ozc1p3ABabmdrOqhHlwT6Tu/w4d+5cLly4IPz/8OHDgvdv
      e3s7Go2G+Ph4mpqaPJ7AHoChpTiPEngc5OfnU1dXx6effio4duXn53P27FlgKIGXw+Fg7dq1
      tLW1TepGqtMTePXq1ddN51BaWsp3vvMdtmzZQk1NDVu3biU8PByFQkFOTg61tbW3VHdhYSEi
      kYjU1FROnjxJc3MzX//613n22WfZvXs3MJRj6Te/+Q1tbW20tLTc8nl6GCI2NpaGhgbBD2K4
      96/BYGDZsmXMmjXL4wnswQVPBzAO2traSEtLw2Qy4efnR3t7O11dXUIUjlQqRavVotVqJ116
      39XVRW9vL8XFxZSVlVFSUsKFCxfYs2cPAwMD7Nu3j/j4eHbt2kVxcTExMTGIRCJsNhsZGRkc
      OHBAiNC6WXp6eoRr4IwgyszM5Omnn6arqwur1cqPf/xjvv71rwv6Eg/jZ/HixZw7dw6NRoPB
      YBDyS0kkEvz8/EaUe/DgWQIaB2KxmPPnz5OZmUlYWBiDg4NcuXKFzMxMuru7EYlELFy4kLNn
      z5KdnT2p+wBhYWE8++yzLmXLli0Tfs/PzweG1MhisRixWIzD4eCee+5BJBLx6KOP3rKl3pYt
      W/jggw84f370jUWpVMq3v/1tXn/9dc9GsxtISEgQfv/Od74DQF5eHjKZzGWZx9/ff9RyD3cv
      ng5gHMyZM8flizR8qcXpCRwVFTVhHsfuYHjU1fAO6lbVyevXr8fb25vvfOc79PX18bWvfY0Z
      M2Zw//334+fnx8aNGzGbzURGRhISEoJarR6Xd6uH0bleWOJo5cE+M9ictn2imyTM9Cbj7221
      Wm8qXDLEd8YEtmZq4iIEG244cSdwp53PWOnv73f7eTuXuMbCcO3F8KRuTlP74WkI7oRRaKBP
      MM+tf35EuWoamYqH+E5OB+BRAk8ttFrtZx2AyWS6o+wE9Xr9XalelUqlbtdLeFIHXx+5RM7c
      kHk3PtCDhymGQqH4rAPw9fUVEpzdCZjNZrdkA51u6HQ6txvs3Ko7mIfpga3lJPo7MBuo+Trl
      t5r1807Es/jqZhwOx5RJQudwODh48CCDg4MUFxezZ88edu3ahdk89NVoa2vj/fff55NPPsFi
      sVBUVMSZM2dwOBxCymoPU4uWlhZKS0vp6em53U3xcAfg6QDcSF9fH7t373YR5NxO6urqqKys
      ZHBwkCVLlrBq1Sr6+/uFNVgfHx/Wr1+Pj48PFRUVWCwWLl26RE1NjSej6BTk4sWLNDU1kZKS
      gl6vx2Aw4HA4MJlMWK1W9Ho9bW1tDA4OYrFY6O/vp7W1lcHBQTo6OoChe9SZZNGDB08H4EZ8
      fHxYsWLFlIhrN5vNnDp1iqVLlwJD630NDQ0kJycLURh+fn589NFHlJaWkpiYSFtbG0ajkZqa
      Gqqqqq4bxjlWnKKkW2G67Ds4bAbMfaUj/lm1F91eV0NDA9nZ2dTU1GAwGKisrMRoNFJXV0df
      X5+g8Th06BAtLS2UlJRQUVHBmTNnOHr0KDabjaamJjo6Ojh9eqSJjYe7D08H4Ebkcvmkmbvc
      iJqaGkwmE2VlZZw4cQKHw8GpU6dc0lQAPPDAA+Tl5VFXV8eWLVsIDQ0VDOvr6+tvul6TycSf
      //xnduzYQWNjI3/84x9vqf0vvfTSLb1vsrFbetFefG7EP+PV991elzOj7oIFC2hubh7xenBw
      MImJicLeV1JSEtHR0YIntNFopLW1FaPRSH9/v9vb52H64dEBuBGz2YxWq8VgMNz2MLTU1FRS
      U1OpqKggPDxc8GGQSqXY7XYKCwvx9fWlpaUFrVbLunXrBA+FRYsWceDAgVvSL+zatYvo6Gi+
      /OUvYzQaOXv2LP/zP/9Dbm4uGo2GxYsXc+rUKTIyMjh9+jSVlZXExcWRmZnJm2++SWBgINu3
      b6e3t5euri6qq6sxGAysW7eO/fv3s3bt2rt2eSo9PZ0PP/yQGTNmYLfb8fPzo7i4mM7OTkF3
      8nk4I/0mwoPaw/TE0wG4kcHBQbq7u/Hx8WFgYECIfb+dOO0nAUJDQ4EhIc7q1auFh71EIhGU
      wKtXr0YkErF9+/ZbEuzU1dXx3e9+V+j8fH192bRpE//4xz9QKBTMnz+fEydOkJiYyHvvvcdP
      f/pTfvWrX3Hp0iXy8vI4efKkYF7+29/+lmeeeYb/+Z//Yd26dRQXF7N27Vr3XJhpSGBgIJs3
      b8ZsNgvXNyYmBqVSiUgkErLPOn8OZ8WKFQB84QtfQCaTecR3HoAxdgCvvfaa8Ht6ejoajYbl
      y5ffdGX79u0TRpqFhYWYzWaysrJcMkG+/fbbbN26lcuXLzNnzpxRR3sWi4Vdu3axffvEi1du
      huDg4GllQiMSiVxCRt2hBJ47dy6lpaXk5ORgNpsJCAggNDRU0GQYjUZMJpOwN2AymbDZbJhM
      Jvz9/fHz88NkMmGxWDCbzUgkEux2OyaTSYheupsRiUQuM8vhYruxMNqsVOQXiXzpN8fdthsx
      mUpgm82KRDL6403sFzHh9U8XxtQBrF27ll/+8pf84Ac/EEYPTU1NXL58GZ1OJ5id5+XlUVRU
      hF6vJz8/n1OnTtHe3s7q1atRqVRcuHCB+Ph4tFotDQ0NpKSkoFAoOH/+PLW1teTk5BAWFkZz
      czM///nPefjhh1m+fDl79+4lOjqa9PR0qqqqqKmp4eLFz99ks9vtd2X8+kR4At/M523ZsoXX
      XnuNsrIyHn74YRITE5FIJCQkJBAWFsaf//xnlEolKpWKjRs38vHHH+NwONi2bRuvvvoqvr6+
      3H///bS0tJCdnc3BgwfJysri17/+NSEhIW49Lw9DiP0ikGVNfAfgUQJPPcb0l4iOjkapVBId
      HU1dXR0VFRX4+PhgMBg4f/48q1at4oMPPiAoKIiKigr8/f0pLi7mf//3f/n617+O0WhEpVKR
      m5vL0aNH0Wq1rFmzhg8++IB58+bx4osv8uSTT2I0Gtm/fz/f/e538fHxITo6mp07dxIREcGu
      XbsICQnhtdde47HHHqOqamQO9mu5G9eKb7cnsJeXF9/85mcPE2e6h82bNwOQnZ0tvHbmzBl6
      e3tZv3494eHhLsnrtm7dCgx1KAAbN24c30lMECKxEnngihHlUp/429AaDx5ujnF1xcnJyfT2
      9rJw4UKKioro7Oyko6ODgIAA/P39eeyxx9i9ezdf/OIXCQkJIS0tjffeew8Yyl/u5Ktf/SoF
      BQWkp6cDQybwKpWKuLg43n//fQYHB5kzZw6tra0kJCSQkJDARx999LltUygUd7wj2WhoNJrb
      3YQx48xcOZ0RywPxnfuj292McXG+oZOfvFZ0u5sxYcyPmcHPv7rqdjdjSjLmxTjnhqZcLsff
      3x+VSoWXlxdqtRqJREJISAhLlixBJpPR09ODyWSitLQUkUjkkh8/LCxMWNsPDAxELBZz+PBh
      7HY7Pj4+whp6cHAwL730Evfdd5+Q2z4uLo76+npefPHFKbvWbjKZ0Ov1t7sZwJBq9OjRo8BQ
      4qddu3bx6aefCqP5lpYW3nnnHT766CPMZjMHDhygvLwch8NBRUXF7Wy6h1Gw2WxuUWgPDg4y
      MDDghhZ5mO6IHP/3NOju7nbLQ9Up/nFu3tntdpc1v9E2gpzpE6RSqbBs43A4sNlsSCQS4YEl
      Foux2+04HI4bblK663xuhoaGBi5fvozBYCA1NZWZM2dOav0wNANQqVRYLBYOHTpEZ2cnjz76
      KO+88w5r1qzB29sbhUIh+PF6eXlRWlqKQqEQHgxJSUk4HA7BDlKj0eBwOEadUe3YsYMdO3ZM
      8llOT8Z7raqrqzl58iTbtm1DoVDQ19eH0WgkPDwcvV7P4OAg3t7eaDQaAgIC8PHxoa2tDW9v
      bwICAtDr9ZjNZkQiERKJRAgHPVPf7pkBjIPJ2m9w9x5Ka2ur+4VgzpsLhh7Y1zbWaT5y7Xtk
      MpnLmr1IJBI6hOHvEYvFU0ZsdS2zZs1i1apVhIaG3vYNaJlMRn5+vhDl09jYyL59+3jnnXeE
      TtjPz4/33nuPI0eOMH/+fFpaWjAYDFRVVXH27FkqKytv5yl4uIYrV66wfv16zp8/T29vL8eP
      H6etrY0zZ85w8OBBent7ee+999BoNBQVFVFRUcHVq1cpKSmhv7+ft956i8rKSrq6uujs7Lzd
      p+NhCuAJBnYzBQUFeHl5Tblc9+Hh4Wzbto3AwECX6f+2bdtYt24d1dXVfOlLXyI8PBxvb2/y
      8vJuSQnsYWKw2Ww0Nzdz4cIF6uvraW1tZdGiRaSnp9Pd3Y2vry9JSUnMnj2bhIQElEqlsD+3
      YMEC2traiI6OJi8vb1KicDxMfUQi0cQIwQ4cOCAIiu4mKioqCAoKIjIy0kWsczvQ6XTs27eP
      hoYGjh49SmpqKm+++SY2mw2VSsW+fftQqVQ0Nzej1Wq59957hZlBRkYGn3zyCbNmzbrpeq1W
      KzU1NXh7ezNz5kwqKirIyMgAoLm5GT8/P2pra1myZMmI+8Nms1FRUTEiXcVURt+n5dhr+0eU
      hyVGkbIhw2311NXVsXbtWmbNmsXBgweJiIigqKgIlUrF7NmzaWlpGfGeqKgoDhw4wMDAAPfc
      cw9Xr151W3s8TH8mrAMoKCggNzeXgoICrFYrGzZs4Ny5c3R0dBAUFMSiRYtcXquoqKC7u5ug
      oKBRHwzThYiICK5evUpzczPR0dG3tQPw8fHhgQcecClzJoITi8Xk5+fjcDhYsmSJiyewM9XC
      rXoCv/HGG4jFYkwmEw8++CB79+4lIiKC4OBg+vr6kMvl7N27lyVLltDf34+fnx+tra2o1Wpk
      Mhn79u1jwYIFGI1G7HY7KpVK2NeYiveF3W5H3zsy8sqsda8rW2JiovD76tWrAbj//vux2Wwo
      FAri4uIAWLVqaK3bqQaePXs2UqkUiUTiUubBA0xgKgir1YpSqeTkyZP4+/uzf/9+tm3bxhtv
      vMHs2bNdXvvwww959NFH+etf/8qSJUsmqkkTTnh4OOHh4be7Gdfl2qm/c59l+P+d3Oo+i1wu
      p6OjgwceeACVSkV1dTXvvvsuUqmUoKAgYU+isLCQq1ev4nA46OnpoaGhgZ/85CcA/OlPfyIn
      J4f33nuPn/3sZ/zmN7/xbDSPglQqveFyzlgGITMCfNi+er67mnVdJlUJbLUi+b9rMyPAZ8Lr
      m664vQNwOBxYLBaampooLS0lICAAg8GAWCwmJSWFiIgIamtrXV7z9fVl4cKF/POf/3RbO5zp
      Be42nJFX7uRmrDUfeeQRqqur+f3vf8//+3//j+TkZL72ta/xwgsvEBgYKDzw33zzTV5++WV2
      7NjBf/7nf/Lmm2/S3NzMyZMnSUtLIyUlhXfeeUc4Jw8Txwy1Dw9NQgfgUQJPLdy+BFRVVcXO
      nTvJzMxEJpMxMDCAzWYjNTUVu93Or371KyQSCRERES6vOTUG7kyeZjKZppUoyl04HA63m8Kb
      zeYx+wz/7W9/E3L2XO8LGBwczIMPPsirr75KQkICf/nLX6iurmbjxo1kZGSgVqs5duwYBoOB
      N954g+7ubrediwcPHoYQi8Xu1QE4R//OkE6r1YpEIkEkEvGzn/2MZ599dqjSa16bCNrb2+9a
      T2AfH/dOefV6PXK5fEw6AJPJRHt7O2q1Gj8/PwYHB4WfUqkUmUyGwWDAz8+Pnp4eAgMDaWho
      IDg4WDjO19eXwcFBYEiD4Ofnh7+//5TcA9D2DHLwhQ9GlEelxZC+1TVFhLs0E07NjLveY246
      jukO8QR2+v1O5gxguuoAOjs73TsDEIlELiPF4Q39wQ9+IDz8r33tTkKr1SKVSvHy8rrdTXGh
      vr6eyspKkpOThQ1Fh8PBiRMnCA0NJSoqioKCAmJiYoiLi6O6uloQgt0MCoXCZZPR2QkP74yd
      94hzwDE8LYjzOLVa7fJzquId4Mu6728eUS6Ru//+bm5uRiqVUltbO2rK58+juLhYeE9XVxcO
      h2NKpCv3cPtQKpWT5wfg7gRlU5Hm5mY6Ojro6+sjLS1tTCYdk8Xx48fZvn07//jHP4iLi0Mq
      ldLS0kJfXx82mw2r1UpkZCQ1NTX09/ffFhXzdEQsEaOcpE1GZxptm81GYWEhdrudVatWUVRU
      hMlkYvHixVy9ehW9Xk9QUBBNTU1CuZOysjJiYmImpb0epjZyudxjCONOZs6cia+vL+fOnZty
      hhvOGPuOjg5hOSA6OhqJREJjYyOBgYGUlpYik8m4cuUKTU1NZGRkuIzOPUwNnCGdlZWVdHZ2
      Eh4eTnt7O+fOncNisRAbG0tMTAxms1kot9vtFBQUkJSUhMxfA90AACAASURBVF6vx263fzYD
      kKsgfNHtPSl3ERiHzWYTUslMBpNVlzMYY7S6hq+ujBWr1erpANzNlStX0Ol0U269evv27bS1
      tREeHj5qiGdgYCBbtmzh0KFDOBwOcnNzOXTokKcDmEIEBgYikUiEJbbw8HDkcjlisZi8vDwa
      GhoAhIf/8HKHw4FWqyU4OBij0ega2aXwRTEJfgAANpsdiWTiBkcihQpA0LVMxvdwsr7rIpHI
      rRFxUqnU0wG4k9bWVmbNmoWPjw+tra1TysCkoqKCK1euEB0djV6vp7a2lqCgIE6cOMHg4CAR
      ERF4e3sTEhJCUFAQu3fvJikp6XY328MwgoKCAAQHPafFp3OfZPjSjlwuF8Rh1y75XLs/JVJF
      IAu8edX3reAMEpksJiNvmDP55WRgsVjcVpdCofB0AO5EpVJx6dIlFAoFqampt7s5LmRmZrJ4
      8WIh8sopuBs+wnc4HISEhCASiYiJiZm0kY0zG+xkPhjchtkMl5pGlvupIHLq7AF58DAang7A
      jfj5+bmYsE8lrlX9Xu8YJ7e6h7F//37i4uK4fPkyvr6+Y1J2WywWfve73/H973//luq8rRhN
      UFo+snzOrGnTAUxmxztZdU1mxuDpfP2EJ4LZbJ4yRibuwGKxuF0QNR0YHBx0+3lbLJYxa0Q6
      Ojrw9vZmz549fO9732Pv3r3k5+eza9cuxGIxmzdv5p///Cdr1qzhL3/5C1KplG984xucP3+e
      n//85+Tk5KDValmxYgVHjhwhLy/vpo3PPXjwMDaEDsBisdxRqRMmawNoqhEUFCQYfbgLrVZ7
      U8e/+OKLPPTQQ4SFhVFQUEBwcDBisZjKyko2b95MZWUl8fHxdHd38+CDDwIQGRnJv/zLv/Dy
      yy/j5eVFZmYmVVVVLh7CHjx4cB95eXmfdQA+Pj5TXnRzM9hstjvqfMaKRqNxu8huuCvbWPjh
      D3/IG2+8wcqVK8nKyuL3v/89L730EuXl5fT396PT6YiMjOSxxx7jz3/+Mz/4wQ9QKpVCxyUS
      iejv7xfUwB4mHrPZzN69e4GhbKMq1VA0TXFxMXq9ntDQUHx9fbl8+TKxsbHIZDIcDseoKcOP
      HTuG2WzG29ubzMxMAAYGBigsLASGHjzHjh0TfMIrKyuF48ZKfX09RUVFPPnkkzgcDj7++GMh
      u61Tf1NeXk5PTw8+Pj6EhoaOqe2jXZfDhw/j7e3N8uXLqaiooLe3F4lEQl5e3qjXrqSkhIiI
      CObNm/e551ZTU0NTUxNarZb169dTXl4uXOsFCxYA0NbWRnl5OSKRiLy8PIqKisZ13YaTl5fn
      MYS5Hna7Hb1ej16vx2QyjfoANJvNQrlOp0Or1Y44zvn+24HD4eCjjz6iv7+fixcvsnPnTgoK
      CoQ29vX18c477/DWW29hNBrZt28fJ06cwOFwUF4+yrr2GEhISCA8PJynn36aqqoq8vLyiIiI
      wM/Pj3vuuYdXX32V+fPno9PpKCgoIDk5meDgYJYsWYJEIiEjI4NVq1bxzjvvEBUVNeYcRB7G
      x4ULF8jKyiI/P5/Tp08DQ/ePTqcjPz+fjo4OWltbWbt2LVeuXOHy5ctERUWN+llarZZly5a5
      PJxOnz7N+vXrycjIoLCwkIULF2IwGCgvL7+lgImgoCAhHPbKlSvExsZy3333cfbsWeGYrq4u
      1q1bh0ajGXPbr8Vut7N8+XLhO9zV1UV2drbw8AfXa1deXo6XlxdKpfKG5xYbG0t+fj6RkZEM
      Dg66XGsn586d47777mPmzJmUl5eP+7pdi2cT+DoYjUbOnDmDw+GgubmZbdu2ubxeUlJCbW0t
      X/7yl7l69Sp1dXVYLBZCQ0NJTk4WjmtubkalUhEZGTnZp8D58+epra0VNqY3b97M22+/jclk
      wsvLC41Gw4YNG6itreXYsWOIRCKamprw8vK65VQWTvMXZ1rsX/7ylzz11FOIRCJyc3PJzc0V
      jv23f/s34ff8/HwA1q1bByCMgKY8chkkzRtZHjy9Zp86nQ4/Pz+USqWQzM9utwsdsEQiIT4+
      nv379wve3Pv372f+/PkjHqYzZ86krKyMnp4evvjFLwJDoiOFQoGfnx/BwcFcuHABuVyOVqul
      uLgYtVot3DtjYfjs3tn2a8VQzpmwVCodc9uv5drvwdy5cykvL6elpYUtW7YgkUhcrp3FYsHH
      x4f29nYMBsPnnptUKqWwsBCVSkVISIjLtXbijNrz8/NDKpWO+7pdi2cGcB28vb3JysrC19eX
      zMxMent7qaqqQqfTCfJ6Z7qE0NBQ5s+fj5eXl/BH7Onp4eOPP+bMmTMAVFZWcujQIcrKyigq
      KsJqtVJZWUlTUxMffvghhYWFN7XMciNM/z977x0eV3nm799n+mjUe++yZEkusmW5yXIvGGLs
      ANkA6SGk/BKymxDSNsFsQoAsgWwIEEjY7BITWkwJtsGW5Cq5yLJlFav33kdtejnfP/Sbs5Il
      2zKWsY3nvq65pDlzyvueOfOW532e52OxUFJSwrJly4DxB/fUqVNoNBopcVV0dDR9fX0UFRWR
      mZlJW1sbJpOJ6upqSkpKPvYsYCI//vGPJX/0TyUaDSxbNPWVeHOlWwgLC6OpqYmOjg78/f0x
      Go3IZDIMBgNOpxOLxUJoaCgrVqzA09MTpVLJ8uXLp9UWDgoKIicnRzIdGo1GfHx86Onpoamp
      iaioKDZs2IDdbsfT01Na+P+4hISE0NzcLJk/jUajlBVXFEVMJtOMy345vL29WblyJQEBAVgs
      FoxG45R7t2LFCmkt7lJ1O3HiBHFxcZJ79sR7bbPZsFqtCIKAwWCgpaWFiIiIWb1v4O4ALoko
      ijQ1NREbGyvZ/fLy8qYkvYNx75ehoSHJfbK0tJQtW7awYMECYNx9S61W09HRQWJiIqWlpZMy
      ll5tJtYLqa6uxmazcfz4cU6cOMHBgwex2+3cfffd0iiptbWVgwcP8o1vfAMfHx+++MUvEhIS
      gk6nY926dTQ3N89qmdzcuMTHxzM0NER9fT0ZGRm0trZis9mYN28eeXl5kjmnp6eHzMxMkpOT
      KSkpIT19qo5AR0cHeXl5pKSkIIoijY2NLF68mKqqKgwGAzExMej1eubPn09GRgbHjx+f9jyX
      4uzZszidTo4ePYpOp8PDw4NTp06xcuVKqexLliwhNzdXMpXMpOwXMjAwwNGjR3E6ndTV1TE4
      OEheXh5BQUFoNBoaGxun3Dun04lWq71s3Tw9PWlqauLQoUPo9fpJ93poaIiBgQGys7M5fvw4
      Pj4++Pj4XPV9u5BZTQd9IzEb9amsrEShUDBnztQpvl6v59ixY5J9UC6XS3q469at48SJE4SH
      h9Pa2kp8fDynTp1i1apVFBYWcuedd7J7924iIiKYO3eu1FBv3rz5qrOIuuQTXZSUlBAWFsa7
      776Ln58fgiCwfft2Dh8+jN1uZ2BgALVazcqVK/H19eXUqVPMnz+fvXv3Eh8fT05ODqOjo4ii
      OKN00G4ujvteubmR2Llzp3sN4FL4+/tL4fYX0t3dTWxsLF1dXcTHx1NdXY1MJmPVqvEc8FlZ
      WZSVlREYGIi/vz+LFi2iu7ubZcuWIQgCnp6eLFy4ELlcTmVlJSkpKdckp7jL/v/tb3970naX
      zX0ioiiybt06BEHgS1/60i3pRuvGza3EZTuADz/8kNtuu+2KTtrS0kJgYCAqlYq///3vfPnL
      X77ovs3Nzfz3f/833/72twkLC2Pv3r1UVVWxbt06EhISMBgMhIeHX9H1Z4tLpXOeKNINTIkA
      lsvlk7ZNzJHf1dVFdHQ0Go0GQRBumAXP2YgEduPGzc3DZTuAQ4cOSR1AQUEBLS0t3HXXXZSW
      ljI4OAjAli1bOHbsGL29vcybN4+XXnqJpKQk7rjjDkpKSpDL5SxfvpyEhAREUSQ3N5fBwUF2
      7NjByy+/jL+/P2q1mr6+PgoLC/nRj35EX18f//znP6msrOT+++9nYGCAlpYWtmzZQl1dHUuX
      LqWxsRE/P79pk67Z7fYbNhLYz88PPz+/a+Ieer01gWF8wbuvr4+cnBx6enowm82SGc1lNvu0
      zC5GBnp455lfTNkevyCLnM99OlS23Hx6mbEJqKuri9zcXFauXMm7775LRUUF99xzD3/+85+J
      iYnh+PHjrFixghMnThAREUF6ejre3t5YLBZSU1N56623+OlPf0pZWRm1tbWkpqby5ptvEhkZ
      SUJCAjqdTlLS+u1vf8vXvvY1IiMjpaChsbExPD09efXVV4mMjMTpdJKfn88jjzwybXmtVisG
      g2HWbtTNgtPpvK6awIcOHZLWEZ544gk2bdrEyMgIQUFBKBQKKeXIyMgIPT09UkxAU1MTcXFx
      WCwW/Pz86O/vx9/fn6GhIfz8/KQke59kkrqZIIrgsFmnbHc67NehNG7cXBkz7gCGhobo6emh
      t7eXhIQEKisrWbBgAb6+vuj1emJjYyV9V39/f4KDg9FoNISHhzN37lw+/PBDYHxVPSkpidTU
      VEpLSwkLCyM8PBy1Wo3ZbOaRRx5Br9fz7LPP8oUvfAFvb288PDzYvXs3GzduxGw2c/vtt7Nz
      506CgoIuqjSmVCpvCRWyC7nenV5BQQHf/e538fPzIz8/XyrTU089xS9+8QsOHTqEVqvl/fff
      l7wa5HI5Y2Nj7Nq1i2XLlhEVFcXrr7/O9u3bOXjwIA8++CDV1dUUFhby0EMPudXK3LiZBQ4f
      Pnx5N1Cz2czOnTtxOBzExMTQ3d2NzWaT7PIREREsWbKE7u5udu/ejSAIZGRk8Je//IXW1lbC
      wsIQBEGypy9btozjx4/zxz/+kW3btuHv7y95voyOjvKrX/2KP/zhD2zZsoWYmBiKi4s5fvw4
      giBQVVVFWFgYXl5e6HQ61q9f/4mNBk0m07SmEFEU0ev12Gy2KduHhoY+kbJNh8Vi4Z133uGt
      t96io6MDgKamJgoLC6V99Ho9u3fv5u2338ZkMpGbm8vp06cRRVGKBr1StFoto6OjwP+JWL/2
      2mtkZWWh0+mke+gKCjOZTNTV1Ukh8UuXLuXYsWOkpKRQWlqKWq1Gr9dTVVWF0+mUzI6fJmw2
      25Tnx8W16NANBsOsxZzMtHydnZ1SHa+kTiMjI+j1+o9VtkthtVonRdxeKaIo0tbWNquxOy5a
      WqZJL34NOHz48OVnAH/4wx+k/9PS0qQkazk5OQB85zvfkWQGx8bGyMzMJDU1lfnz5yMIghQE
      9PWvfx0YD7DauXOnJKIwMR99UFAQv/71rxFFUVqEfPrpp6UoUkEQEASBkpISABYvXjxLt+LS
      6PV6Xn31VR566KEpnx08eJDAwEC8vLyIj4+XtouiSHl5ueQV9Ekjl8vZvHkzTqeTjz76iO3b
      t3P8+PFJ6WQNBgO33XYbdXV1nDp1CrlcTnt7OxqNBp3u4+ncbt++nd/+9rcEBARIEYoPPPAA
      J0+evOhid319PVFRUYiiSGRkJMXFxTz88MO8+eabrF27ls7OTsxm80UbyZsZh8PBgQMHkMvl
      bNq0CbPZzHvvvUdoaCjh4eH09fVNeYbOnz8/Kdr8Sjl37hwrVqy42qID4/74q1atYnR0lMHB
      wWnz6zQ2NjI4OIhMJkOj0Ui/i5nU4+jRo1JbMxs0NzcTGRnJsWPHSE9Pp76+nsTExCs+z5kz
      Z6QYnun4uN+R1Wqlp6fnsnmKRkZGMJlMF/VSnClX5AbqaoAvJCQkhIceemhSzvlLeZEIgnDR
      fN0XXsN1nonb5s2bx7x58z4RTxVRFCkqKmLevHnAeJCLxWLB398flUqF0WhEEARJX9XhcJCb
      m4uHhweCIFBbW0tPTw+iKOLh4UFKSgoDAwPIZDLKysrw9PRk0aJFk3z3ZwOFQsGZM2fYt28f
      X/va18jPz2ft2rUcP35c2icyMpKmpiaKi4u55557ePfdd1EqldTV1WGxWDAYDCxadGVasYmJ
      iTzzzDOYzWa8vLykEdKWLVsA+I//+I8pz9CGDRuw2WzSTPC1115DJpORkZEhPQ/Lli3D09Pz
      U+udNPGeJCUlsWDBAo4fP45cLmd0dJRjx44hiiKLFy+muLgYp9OJwWDAZrMxZ84cQkJCKC8v
      R6/XEx8fT2dnJwMDAyxatIjTp0/j5eWFWq2WIsMLCwsZHh6WYlNEUWTLli3IZDJOnz7N4sWL
      OXv2LGNjY8jlcubPn8/Zs2cRBIGYmBg6OzuB8ZkxQENDA/X19ajVas6dO4dSqSQhIYHY2Fgq
      KyvRaDST4khaW1spLi6WEsy5ztva2orBYGDt2rUMDg4yMDBAf38/x44dk3JFFRUVIQgCmzdv
      pqGhgdbWViIiIqTIXrPZzNKlS6V6ZWdnU1hYSGhoKHa7HX9/f9rb2wkNDZVyeB07dozQ0FAy
      MjKkupjNZrZs2cLbb79NcnIyNptNSjJZWVlJUlISo6OjGI1G1Go1/v7+tLa2EhwcTHFxsWQ1
      cJU5ISGBQ4cOkZKSQl9fn1TnmpoaPDw8WLZsmdRxvPPOOwQEBKBUKqVrCoJAf38/BoOBpUuX
      MjY2RmNjIzabDa1WK639jY2NkZSUJN2X5OTkiz53s/JrckXGKpVKRkZGpFwiV4LJZJpxWLNC
      oZj1jJcXo6SkBE9PT2kNxGw2YzKZKC4uxmazoVAoiIiI4MiRI1LeoOTkZLKzs6WyKpVK+vr6
      SElJ4ezZszQ0NBAREYFcLr+qvDuXIysri4cffpgjR47Q3t5OUVERZWVl9Pf3A+NJtAoKCvjK
      V76Ct7c39913H8HBweh0OtasWUNbW9vHuq5KpcLb2xtBEJDJZJNecrl8yjaVSoVOp5Pynkz8
      68rv4uPjI22/kfAOCOarT74y5bX6Xx6c0fGukf/69eulzq26upqioiIp+ra+vp5Vq1aRmZnJ
      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
      wKIoUlZWxvz586+LW6TJZKKqqoqMjIxLXv+T1gR248bNZFyNruXEC1hPvjDtPqpl30G9/DvA
      tQ0Em3Ek8IV89NFHOBwObDYbTqeT3bt34+/vz4oVK9i9ezfJycnExMTwz3/+k6VLl5KYmEh+
      fj59fX3Ex8fT3NzMl770JXJzc6VFlqamJinU2nXc4sWLyc3Npby8HB8fHxoaGsjLy2Pu3Ll4
      enry9NNP86UvfYno6Gh8fHyorq4mPz+fDRs24OnpyZkzZ+jq6uJzn/vcJE1Nu92O2Wye8Y2c
      CcnJyddNZ1gQBFJTUy97/U9aE9iNGzdXx/Hjx4mIiCA5ORlRFDly5AgpKSmTAsFcloJrFgg2
      kdHRUTQaDZmZmRQXF/Paa68RHR3NggULeOGFF1i+fDkJCQk8//zzbN++nb///e/09PRQWVlJ
      UFAQLS0t2Gw2amtrOXDgANnZ2Xz44YekpKSQl5c36bjS0lLOnTsnLba6slH+5S9/ISkpibCw
      MLKysigpKaGnp4eXX36Zu+++m5dffpmWlhY6OjoIDAzk1KlTk+qgUCikhd9b6aVSqdBoNLP6
      +iTSILhxc6tiNps5cOAAQ0NDnDx5kjfeeIP9+/dTXl7OU089hcFg4NFHH2VoaIh//OMffPDB
      B1gsllkJBJt2BlBYWEhvby92u52amhpUKhWJiYmEhYVhMBiIi4tDo9HgdDoJCwvDx8cHm81G
      aGgoISEheHh4MDw8jCiK+Pj4EBsbS2BgIBERETQ2Nk46rrOzk+TkZAICAgB44403WLBgAV5e
      XlLE4MQFU6VSSXBwsBRKHhMTI9nQJ6JUKmfdFHIz4NYEduPm5kOj0dDW1saJEyfw8fFBpVLR
      2trK0NAQHh4eeHh4kJWVxbvvvktISIiUqsNFR0cHCoVCCgSbqRVg2g6gu7ub3/zmN3h4eEij
      9Zdeeono6Gjuu+8+nnjiCebPn8/mzZvZuXMnUVFR+Pv7ExYWhre3NwqFApVKhU6nIzY2FplM
      RnR0NFqtlpCQEGJiYqTjcnJy+PWvf8358+eZP38+np6enD17Vqqcv78/r776KuHh4eh0OjIz
      M3nsscekFX2ZTHZZL4mJuAI9bhSzxtDQEDqdbor/riiKmM3mK0qYdSE1NTU0NTVJ/uO1tbW0
      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
      4QtR1e1gc2IUBo1AdFTkHfRxEun9FbJ3715goSrZq6++SlFREWazmWPHjpGcnMzu3bsB0Ov1
      bN26lczMTIqLizEYDBw/fpycnBwOHjy45nbq9Xpef/113nrrLVJTU0lMTJSLvCuVSvbv349a
      reb111/nxIkT6HQ62ebo6Gi++tWvkp+f/0D7rqurY8eOHXR1dTE9PU0wGCQnJ4e+vj4uXbpE
      WVkZs7OzZGZmsmnTJgoKCpAkiU2bNuF0OgkEFh6Uly9f5sCBA7S3t7Np0ybMZjObNm0CoKys
      jE8++YTm5mZSU1Mxm82UlpYiCAK5ublcv34dlUpFfX094+PjWK0LqpLDw8Pk5OQwMzPDxMQE
      e/fuRZIktFoteXl5NDY2olaraWpqoquri2AwSGdnJyUlJQDk5OQwNDS05Hil/9YCEgMhNGoB
      i9XB7oJ0UuIWwkPjDQsuI416dSu1rVdCIYn/fWGGhBiB/ikf/dM+ClK0/FeznSlHAK8osS1d
      i9MXpLZ/bSfEI3wxkS+AFbJYuz/sC16cJBWWjlAoFLKPOVyZbC10/9cj4Td3k8mEJEnEx8ej
      1Wqx2+0oFAo5zjkcHaVUKlEqlcTGxqLRaOQvJEEQEAQBnU4n11cIu24SEhJ49dVXaWxsZGJi
      Qt5ee3s7er2e6OhoVKoF/3JHRweVlZVyG0mSmJ2dJT09Xc7qvXr1KmlpaWg0GjZs2IDdbsfl
      crF161YqKiqoqamhsLCQhISEO+pI2F1eijYlsm1zMh9c6sYnBukbW3BJ5W3cgHXeg0YtLCSM
      LT9g6IlFoYD/52giwRA0DnvIjFMToxEoyVy4X2bdQdrHvPiDEimRL4DHylM7APj9/meyVq1a
      rV71/Ifl1BiOi4ujvr4ek8nEjh076OvrkyfMYWHwi4mJoaCggOrqasbHF0TRQqGQ7LIJbyfs
      Qtu4cSMXLlxAq9UiCAIbNmyQ93f9+nWmp6cJhUKUlZWh0Wi4cuUKJpOJ8fFxub7C9u3bqaur
      k49h06ZN9Pb2UlpayunTpxkeHmbDhg2IoojFYpEf7ps3b2ZqaopQKMSNGzdQKpXo9Xp6e3sx
      m81Ljr2m/RaFmxKpujaITwwuWTYyMUde5sIgMHB7luynR3H9nigUCjLjFl52/uf+eGI0S6+f
      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
      8P8D8QLG1n18zwcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Prefectural Map' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3MkWZYm9rkMLREQAa0SCWRmZWZVVld1VYvqmu2pbs5yzNZIo9mSD/vE
      R/4H/gCa8Z1P5JLc5hNJWy5n2NPTYlpWdYrKSgGRkAktAghEBEK65APq3PRwuIdCIBNAxWcG
      AxDh4rr79XPOPec753A7Ozsmx3G4KhBFEUdHR0gkEuB5HgCg6zoymQw8Hg/8fj/7HAAMw8Cr
      V68wMzMDXdehaRr73jCMd3INlxE8zyObzUKSJPh8vqrvTNNs6lhu88npOO967jmNyTCMpq+Z
      wHFc1TVZ52KrME2zofHUupfN3Gc6F53X7blxHAdJkiCKIiqVCtbX1zE1NQVFUaDresvXcRnB
      cRy8Xi8kSYIgCO96OE3DNE3ouo5isVg1v0X7hL3sME0TkiShXC4jEAigUChgYWEBwOmLWy6X
      IYoi+1/XdQSDQUiSBMMwwHEcu/irdN0XDdM0EYvFMD8/j9u3b0PTtKp7ZYcoimxSOcFpXjkp
      3HYIyPPCKvAA1LzuZkD34LzzzCqI643L7VyNjsN+L9yOSZ8JggBJkvDll18imUxClmVomnZm
      Xlxl4Q+czlO/339lFYBhGNA0DeVyueo9FN/hmFqCaZro6urCysoK9vb24Pf70dvbi9HRUTYp
      y+UygNPJKQgCeJ6HaZodi78ODMPAwMAAtra2MDIyAsMwmLVA95Z+Ly8vAwCGh4fZ/b2qsAo4
      utZWlYD1WO02rmqN6aIMuXqrCkEQ2O94PO76nl3l+QGACf6rbDRyHHfG4LpyCsDr9YLjOBwf
      H+Pu3buIxWIwTZNZHTzPsxUAWaiapkHTtI4CqAPTNBGPx7G6uoqjoyOIoohIJIJSqQRd15lw
      NAwDg4ODWFpawvb2NkZGRhwtvqv+spzH9UV/X5X7YLf87SsAp/vh9XohCALy+TzK5bKjoXXV
      LX/g9PplWb4wJfs2YX2WHMddLQXg9XrB8zxevnyJYDCIaDQKVVWhKMqVn2SXBblcDoFAADdv
      3oRpmshkMujp6WEvtyRJTAncv38fS0tLNX3+7fJLvw3Yx1PP4m7EGn9bCqAVH7/9b/tn9lWf
      9RwejweiKOL4+BiPHz/G4OAgYrHYmXfxOryXoiheGwVgdV9dKQVAS7DFxUWUSiV8+OGHMAyj
      I/zbAFoaCoKA169fY2BgAJqmwTRNBINBAG9eZIoNAKeTSVVV1+Ne5VhLLTeQ1bdvtZjdfP4X
      rQQa9e038544XYf1f0EQcHh4iJcvX+KTTz5BMBiEruuoVCpV+1jdg1fxPRUEAcFg8Mq7fwg8
      z1c92yuhAIhtkMvlsLu7ix/+8IcATn39V3FSXTakUimUSiWUy2VEIhH4/X7X4K5VmBmGAY/H
      A03TGjqP1Sq+rLALfbvP1G2VUCvg+zYUgD2OUQtOQW8n91WtcwCA3+8Hx3Hw+/0wDAOlUqkm
      04vu1WV+/lbwPM8IJFfd+qfx03y+UgpAlmUAwPPnz3Hv3j3wPN8R/jbwPA9VVWEYBnw+X0NC
      meM4pFIpcByHoaEhxpRyE/4Eq0Dz+/2MllvPneDkSriMsAp1N3eIfft6IAZao9s3M1Y3AW4X
      trUscadAf61zAmDKX1EUSJLkKvydGEWX/d0lxUauH7KcrypojtD1kDv30isAjuMgiiI2NzeZ
      319RlE5A1wbTNPHixQtEo1GUSiUMDg4iEonUvE+macLj8bBtarlznCBJErLZLCYmJlpmzVxm
      uAlEJxeP/X/7Z60qjnr7NHqMWpa3XfjXi9t4PB4IgoCNjQ0kk0l4PB5UKhXXfSlmZP3/ss8V
      r9cLj8fDXKNXWfgTyB3n9XqhKApCoRDePQm7Dujmb29vY2JiAoZhNC2ovgvgOA7RaBSTk5O4
      ffs2jo+PkU6nWdCH53kUi8UzLo1gMIhisdjyBNc0DT6f74wbpFm3xGVCPXcIfe52nW4Wtj3B
      iii29dwi9tVTrftcbxzNXIvTdh6Ph60cl5aWMDY2xjjmbmNwMkIus0DleZ4RTq665W8FPV+f
      z8fiGpdeAZDAKpVK8Hq9V0qQvE1QnKRSqcAwDNy4cQPb29tIpVIQRRGqqmJzcxOzs7NMKXAc
      h0KhAI/H09I5NU3DwMAAFhYWqvykbkLxKj27eoLQCU5Cvt51N7qdW1C21lhq/W89hj0w6ASr
      UPz666/x+PFj3LlzB36//4zwtyu3qwRyk1hziK4TaEXDXFvvekD1QBMoGo0inU5fuwfSDnAc
      B03TUCgUWBmHSqWC999/H5Ik4dWrV1hYWMD4+DiSySSy2Sw47jR5Z2dnB729vS29qIZhIB6P
      n2F+WMdlxVUTBk6oZW3X+qkFq6VcqwwFCetGLNNGrFanoGCtMXIch8PDQ5ycnOBnP/sZkskk
      y7FxG/9VeuZ0Pyi/4TrKGnrv6efSxgAooUsURTapyFVxFXyIbws8zyOTyWB7exvj4+PQdZ3d
      H0VREI1GYZomAoEARFGEx+PB/Pw8JicnIcsyJEmqG/S1wm4pptNpSJLU8P5XITGqGcu1UWFf
      77rtdNJmBLMVbts7CbNGmS1kMQKndbei0Sh4noeu61WlBdxov9bPL+uqgO65tdzDZZ+n7cCl
      VAAkmOgBrKysgOM4Vp7gMk6gd4lCoYB4PA6Px4PV1VWEQiF0d3dD13Xouo5wOAzg9EUUBAE3
      b97E+vo6OI6DrusQRbFhKqcVHMchGAxif3/f1ZV01ZR1I64Y+/btnpN0TLfVRiNjc2PbtMJE
      IgHPcRxev36N3t5eAGDZ9U7sIqf4z2WdB2QVE+VTFMXvhPAHAG53d/dSVQOlDMN8Po+XL18y
      3//3vvc9iKKIUqnUYQDZIEkSjo6OcHR0hPHxcRwcHECSJFYmwwqyBCmRJxqNnnuy8zyPhYUF
      3L59+0yA3i5QG7U62w23OdOsm8pqSTfitrGex2rZNzq2Zu6V0/ZuVnmz8Pl87Dlns1l8/PHH
      KJVKqFQqjkrGqoAuq+AH3vj8fT4fs/yvYrG3VnGpVgCyLEMURWxtbWFlZQUzMzPM2qBKnx3h
      fxaqqiISiSAWi0HXdfT09GBtbQ1dXV2u7h1d11nxrvOCBNujR49w//79mtu9S9ipiED9qpdW
      nIdtY80raAd1003Yt0oTdYMgCMwiVhQFW1tbmJycBHBaIsEpE99OK73MCkCWZfj9foiiyGIr
      3yVcmAJo5sETg0WSJOzu7mJtbQ2ffvopJEliy0xVVc89kTiOQyAQQKVSuXZUUtN8U5q5WCyy
      7Mx6+zRyXKC2INF1HdPT08jlclhcXMT4+DhLDGrF5UDC7SKVvRtV03p+63isv2nbZudjM66Q
      d02htcbgOI5DNpvFN998g76+PoyOjsI0TUfrn3AVlIAoiggEAizg+13x+1vRVnVHgtzn88Hv
      97NMOmIs0E0mTSuKIrxeL1t+HR4eYmlpCR9//DFEUUS5XEa5XG5LvR9JktjDpvNdVwQCAWSz
      2bYwGRplsmiahlAohEQigVevXrGKrMAbt4ksy3j58iXW19cdj0eZzKlUCq9evWrby9gKJ97+
      /3mFfzOw02mbuQ/tGhfHcaznwz//8z/j2bNnuHfvHm7fvn0tVuM8zzNixHXj+9tBrkpN0/Dw
      r19hfX2dfde2FYC1Yp6iKNjd3UVXVxcLrLiBXvjt7W1ks1l8+umnkGUZ5XK5KXZKrXFR5iI9
      YE3Trt0KwAqO49Df34+5uTl0dXWht7e3pSBvs3Q+cj+l02nMz8+jv78f5XIZqqqiWCxC13XI
      sozu7m6srKxgenqaHVcURTx79gx+vx/RaBR9fX3Y2dlBMplsetzngd3af5uCn87n5sYhq7pR
      QXWelRSV/06n04jH4/jggw8Ys6yR0up0ry6j9c9xHMv0tVJrrxpUVcXKygr6+voQjUYdt1EU
      BYqiwOv14ujoCLsb69jb2kIikTgtrd+uILDf70exWMSLFy9QLpeRTCZxeHjIascbhoFCoQBV
      VdnSMpvNolKpIBaLob+/n7V5bJfwJ7cS8OYloqJV1x00yZ8+fYq7d+9CURQAjXfgalbYSZLE
      6hERRXB9fR1erxeRSIR1iqIV2PPnzwGAJakBwNDQEKOtqqrKGtOcF40ydaxJUU7HsN4T63xq
      RsC63f9WXGW19hVFsap0dy13jRMEQYDH48Hz58+RTCaRSCTOEDCuYrIXeR4ikUiVZ+IqWv+a
      puE//Pv/BYMjI/hXP/1bx21SqRR++Y//gJHRURynDhAPh07fQ38Q3//0B+1ZAZClsbm5iZ6e
      HoyOjoLnedy8eRPFYhE7OzsQBAG9vb3weDxQFAWqqmJkZIT18KWXtJ0sH1VVr7WlXwumaaJc
      LlfV+qHP3Sb7eV5kURTh8/mQz+dZyejx8fGqcxK7QlVVTE5OsjISJKQEQWCK39qApp1ujXo0
      ylrC334frb/PO65mYyROfxOIt398fMyYYbIsQ1GUM24la+zICvL9p9NpzMzMnLn+qwL7vRJF
      8bQGzreK+KoKf+D0GcUTCZajYQdRiYNeL/TCCeLhEHPTl/Mn+P1vf9seBUD+3uPjY9y5cwcc
      x7EOQV6vl7EG7IwL0zRZNcEOv7/9ICWgqmpDk7zV++/z+dgk9Pv9ODk5cRWYBOvqjAS9dXuf
      z4dCocBWE7VAiqWREta1WDVu+16k8GtW+NdbwdF9rVQqePbsGbN4R0dH4fP5qkoc0DuoKAoK
      hULVveF5HpVKBTzPs9WbEy77O2u9t16vF4FA4Mpb/lYMj45B/XZ1bwXN2a2tTQR8njNueK9H
      hqbp51cANEHIvRMMBll7Rl3XmfC57BPlOoLnedy4cQPLy8uYmZmpGQdo9fkIggBFUVCpVBAK
      hSAIAiKRCFRVRaFQaHXo0HUdMzMzePHiBWZmZiCK4hkBz3Ec9vf3USwWmavR4/G0ba7ZM1zP
      Cydh06wAqrWCI8pmNpvF4uIiBgYGMDIygkePHmFvbw+Dg4Po7u5m5UJoVebxeCDLMvL5PHMV
      AtXNf67q+0vJj36/n602G82yvgq4ffs2SqUSNjc38WphHvff/wBdXV3s+9crK0iEg477iuI5
      S0HQ5FEUBU+ePGHWv1MyUAfvBkdHR5Bl+cKeAZWeoFVfIBAAcNqs57zgeR7j4+OYm5tDT08P
      wuEwQqEQDMPA+vo6Dg4OMDk5ie7ubgDA3Nwckskkyx3Rdf2M5e5kjNhdIvbfl2n+1qLlUkb3
      119/jZGREQwNDUGWZXz/+99HPp/H9vY2VlZWIAgC+vv7kUwmWYIXxYw4jkOlUoGu66zQGz3j
      q4pAIMDq+1zl63ACuV7/+C+/Q0AS8dWf/ogv/u5fg+d55PN56A6rg6r9Wz0xlWtQVRVfffUV
      RkdHEY/HOy0aLwl4nsfBwQFkWWYtHi8aqqoil8tV+fLPC6/Xi/v37yOVSmF3dxerq6swTRN9
      fX2sLSjNt3v37mFnZwePHz9mwedkMtmQ75/glNTULrQqfOxC3+1/nudZm1SKwxFjJxqNsszw
      fD6Pvb09PHnyBKqqore3FwMDA4jFYowWCYBRB4vFIls1XCWQv5uqe1434W9FMBRGOZdBuVyC
      pmmQZRnBYBC8WFvEt8QCopuaSqXw4sULTE9Po7+/H5qmuVaG7ODtgud5bG1toa+v78Iobudh
      rjQDIgnQcp7gFDey+nefPXuGu3fvshWpW+C21vidVgDW7RuNXbnROxuNzTglqXEcx1xedN2L
      i4vIZrP43ve+x3r0WlsbUtCXjqmqKvb29rC9vc1qSo2MjCAWi+Hrr7+G1+vFrVu3oKrqmXf7
      MrOAaA4EAgHm97+uoC5+C/Pz6B8YQCQSYd998/QpMvs78LqUfG9qBUDBI1mWcXR0hPn5eXz0
      0UfM798R/pcHoiiiWCzWDOC1imYDl+eF1Y1Tb2Vh3TYej2Nvbw/d3d1Vwr/ZsbuxbloRfPUY
      PLVAgt7OX6eA3+zsLEqlEh48eHAmU5f2paAw7SMIAoaHhzE8PAxFUXB0dIQXL17AMAxEIhHG
      ALpKbDqan5Rkep0tfwDsub53927V56ZpYmx8HH9cWzmfAqCbSdaXpmmYm5vDvXv3EAwGUalU
      3oqLoYPGcRFJOG9b8J8Huq5jYGAAL168QG9vb5Ufu5l70uzqoNZx3BrMN3IMEuDkiimVSggE
      AlhbW8PW1hYqlQpzi5mmyejUNAeIUUV+fhoPlVun+9Pb24uenh5ks1lEIhF2LDfX2GUjeNC1
      ybJcxfj5LoLjOEQiEXj8zkFgABBJqLtNZgr0chyHhYUFHB4eolKpYGRkBJFIhGUGdnC50G7q
      4lVcQpumCVmWcXJyAr/fD+Cs0K0lxJ1cNq3A7rZpdhVhmqcNvKkj1+zsLNLpNHRdh6Io+PGP
      f8yEOcdxrrk0bqsnGhPl4RBXnvJo7BnhTi6xy6AE6DqotPNVzfBtNyZu3MDSy+eIhENnvhMp
      Y9D+QtCPJEkol8tYWVlBJpPB+++/zyYi0Tw7uHwol8vwer3vehjvDBzHYXd3F5FIBKFQiPm9
      rbAKs0aEWi0GTiPjse/rJDStCsIqxKkw4pMnT1AoFPCDH/yArcipqY81p8Z+jfVWb4ZhMDqt
      kyv3svr6CdYEN6Ijd4T/6X0ZHBrC00d/dVYA1GwlGAwyZo8sy8zlk8vl8PDhQ9y4cQM3b96E
      IAhsorWL6dFB+xEIBFAqlRpm5NRyR1zFJTTR4G7cuFF1/XZr1ulvK9wyg5tBreziRrYF3iRm
      lctl/OhHP2LBX2LpkCHmJvR8Pp+rQUDJYE7jsY7Tqlguk3C1Kjefz8dWQldx3l4EeJ6Hx+vM
      4hIHBgaQTqdZEkilUmHlkqPRKA4PD/HBBx8gHo+faQHXweUFWYSLi4sYGxurS4O0W6iX2dpr
      BOT+KZfLZ1Ll6zF77CsD671pRGnYj+t0bxvdl941TdPg9/sxOTmJr776Cj/4wQ/AcVxVsl0t
      gVdLYBMzyOlzJ+FP39H9eNdzha47EAhUBcg7OAXP85C+zQWyzxHR4/GwglvWLxVFQTabxdTU
      FPx+P6vf08HVgK7rGB4extHRUU0frZuldNWtJ8MwMDAwgI2NDYyPj9cVVPbrdRL0zQR8ax2z
      mdUGoVKpQBRFDA0N4fj4GHt7e+jv72fc/3pjKZfLEASBFe2zgxRALdfXZQZVI/6u1vV3A7nq
      fYEAdKUCUazudsZTHZBisYhisYhSqYRyuQyO49DV1QWfz3ctG6hcd/A8j3Q6zfooO+G6L5PJ
      EjQMAwcHB6hUKjg5OYFhGG3vB2Fl1pw36GsHBfTz+TwrebG9vQ0AVXkRTuOhc+u6jlwuh0Kh
      UFWqhejb9hWAPRboNq7LoBzsjV2u85xuFcFgCLrhUPSP/rA/zA6z52rDNE14PB5GF3QqifBd
      eFHS6TSOj48Rj8dxcnKCrq4u7O7uQtM0jI2NnTuO5Zbg5fR3o3BbKRAfPxwOM9ePIAis3pZ9
      5eG0EqlUKiwzlnz/xWLxzLnp71rC/zKA404rfJLV33H9OMPn9yPjVPX1HYylg7cAwzDQ19eH
      paUl9Pb2IhwOV720ToKJls9ONXSuIkRRxMTEBCuBQHz3rq4urK2t4eDgAIlEoiYllBKviHJp
      h5ulb/2uUWHpdH6r35Z89UTWKBaL8NgSfOzjcFqBKIrCGqBbO7fZrf7LIuTdQALf4/Fc+65e
      rYKef6FQcFwtdhTANYZpmpiensbLly8RDofPfGd9WQRBwO7uLo6OjhCPx9HX13fpBUA96LqO
      UOi0AYZVoGUyGZTLZYyMjDCh7iTwqC3pwsICwuEwhoaGqlyhduFfa1VVT6g6CWonhU3lF8Lh
      MPL5PCvm5nQM635WUKtVq7/ffr7LbADQdUqSBL/fzxrfdIS/O7LHaXiFs+K+s1665jAMA8lk
      EgcHB46+aLKaFhYWIIoi7t27h0wmcy2W0mT1W+v1kPC0fu7GCiqVStjZ2cG9e/fA83yVq8SO
      egLIziyy1xCyjsOtvpCVFRSPx3F4eMgSn9zOX6tej5Pwb8Tyf1eClix+SvQKh8OsDW0n8HuK
      lZUVrK6uYm9vj31mmibKxSJ43qGC7NscXAdvH4ZhwO/3n7H4gFOrf2NjA4VCARMTE5AkCdls
      li2pr3Keh12Q2SmNVCaBviPQdfM8j+3tbUxNTaFUKqGvrw+7u7vo7++vYszQ73rC32kc9LsW
      PdQ0zTPKmKp7bm5uMuFXS2jXcv05nbMeq4h+3uYqge6BJEkIh8NV96Rj/b9BIBBAd3d31f3Y
      3NyEAMPxHl19M6+DliCKIra3t+H1ejEzMwNBEGAYBoLBIERRxNLSkivD5LLDyaK1Cjld1zE2
      NoaVlZUzbCCO47Czs4OlpSWW+wKAVcN0Cqw2KnzcBDwpJPuKxE2o67oOr9fLavS0+pyc7lMt
      pf8uLX/6TbWM6H/qcNbBKfr6+qqyoBVFwdzzZ4jaXMCEjgL4DoDKQlCWd7FYxNLSEhRFQU9P
      T9VLr+s6RkdHAcAx6HnZ4RTItFvguq7D4/HA7/cjm82e2T8UCiEcDiMajVZZ+62wqdoRR3Gy
      0KlGV7FYbJlp1Ijwd6O3vov4EM/zzN/f4fs3hlwuB0N1f487CuA7AL/fj1QqhdnZWczNzaFY
      LGJychJjY2Nnin0BpxTgoaGh06XjFbKu6rFYrJ8Rq8deKoNcZvYuWJeJFUPjTSQSSKfTLbFf
      7ErRCW6B7bd5L+j8giAgFAoxyud1iFG9DfA8D6PGs+rEAL4DEAQB09PT7H9KAiJBYmcEAWDU
      x/X1dQwNDV0a4VcLzYyRguOLi4sQBAE3b95kDB87tRI4FUS6rjNXmf28b9MSJVdRPB7H5uYm
      BgcHz8R36jGSzoN3MRcCgQCjrnbQOOopyo4a/Y5A0zT248R4cdp+cnISiqJca2vr3r177H54
      vV7ouo7Nzc0z7h6v1wtN01AqlRzpk7V+aLt2wjRNxGIx5HI5ZiETmg2KNrPt2xT+VvdTx+pv
      DTzPAzWeb2cFcE1hDZTVWu7XEhbb29vo7e291Jzw88A0T7tmDQwMYGVlBZVKBeFwGMlkEh6P
      pyoGoigKJiYmMDc3h+np6arv3ISim/CXvy3MBaCqiqeiKEzR1AIlPVFim6qqFyIcrQrsXfj+
      6ZydEg+t43RedBTAtUWtOjNujBX7S+0GyiSmtoBXBXalZ/2cvrPGAnw+H8bGxph7h8qd20FZ
      uE6xBTvchL8kSVhZWYGmaQiHw0gkEgBOX9RvvvkG4+Pj6OrqOqO0rc+ShOH8/DwGBgYgSZJj
      gpobWnmWb/v5W6/XmuzWQXM4pTu7f9+5q1ccToG6ei6ARl0EsixfyyKAdlYLMWDqdbfTNA09
      PT1YX18/Qx91cv1YV04cd9rAncpz3759m3UqK5VKeP78Obq7uxEIBBpKxKJriEQi4Diu4dpd
      boHxy6bg6RrJ999ZATQP0zSRTqchdBTA9YRT2n87k2J0Xcfk5CSWl5erasZcBTjdA/v9afZe
      meabEgyrq6uOSoD4/DzPM8ptPp/H8fExNjY2GIVT0zSWbby3t4cPPvgA4+PjODw8rBnotApr
      chs5UV2d9rFnRDeSc/AuQM9EkiTW3KWD5mAYBhRFwfKrBYQC7j2BOwrgiqKWgGsXTNNEIBCA
      oiiX6iVshOtfj9rYDKyKQ1VV3L17F8BpY3Y7iKYoyzLW19dRKpXA8zz8fj8ikQhmZmZYN71Q
      KIRnz55hdHQU5XIZAKoylN1A2cq7u7sYHBw80+7SKuydksus37mVnbgMoIxsWu10UB+meVox
      dnV1Fb/+p1+C05QzPQCsuFpmXQcA3m7qu2EYCAQCKBQKZzprvQucx1p1i4W4bet0j8ldRCWV
      7dA0DQsLC5AkCclkEpFIpMqNRrEFXdfR19eHZDIJVVXZqsE0z5Z+sIMsf2L/WNs5OsWE6uVE
      XCZY73vH9dMcSKn//ne/Rfkk65r9a0VHAVwxvIu6J4FAANls9p0zguoJLY7jmMuALOpG4KQM
      at1nskwzmQy6u7ur/O+lUgn9/f2sBHWtGIpToJmscjfQPaCewACY4qDvaxEDLoqW2i5Q1zJR
      FDvtHVvAwcEBCtkMuqKRhrbv3NkrAmvg8m3CNE309vbi+Pj4nb6IjVisJDzOm5jlFFC3K4Sh
      oaGqdpvkSiFGjjUI3KjSpvhAoVBgws/6nd3dRawlWonUc+1cRn+/FYIgIBwOIxQKMeZPZwXQ
      HPzfdnBsFB0FcAXwLqx+Oi8xCd61r7iRc1uzm6nWD6HR++cUJHYSQqqqIhgMVr1sVJ/HXjSu
      0eC8rusYGRlBPp/H/Pw89vf3EQgEmOKle0ABeWuSHimbWgL+sgp+4E1hN1rB0f8d6785BIJB
      eAPBhp915+5eclyE8G8kc5XjOBwfH2NhYQEvX77E2NjYpU4II8tXURRUKhWW5OW2ba08Aftn
      Tt/puo6enh5sbm6iUChAFEUcHBxgcXERXV1djveqkWdpGAZ6enowPT0NWZbx4sULlMtlxjgS
      RRE8z7Mm79dFQFoLvQFvVrwdNA+eb7xcRicGcIlxUZZ/PT86cPpCHh4eYmpqCsCp4CHXCgUs
      6x3rbYMCtMBpMNZJCLuxhuh3M/dbFEX09PRAVVWsrKwgmUyyfgFE83RTKLXuG61k4vE4uru7
      sbq6ir6+PoRCIayvryMejyMSOfXxHhwcoLu7G6Io1s0FqBf4fleg+0RKriP8WwPdR6VSBuc/
      W8/KcZ/d3V2z42O7XLhIwd+IAKCXr1QqYXV1FUNDQyzhiOM4fP311xBFEdPT02+tOJfVxUFo
      VphZBaDbvbAKHvJBW8/n5Isnd4Wdjmk/ntP1NAKPx4P5+XmYpomxsTHs7OwgHA5jb28PJycn
      +Oyzz6DrehUttd4cuiyxAArcB4NBxvrp+P1bh67rePzoEU4O9+F1KGpoR0fNXkLU47mf55iN
      bguclpEeHx9HNpvFkydPcHJygrW1NYyMjCCRSOD4+PidVGds9FrsJQTqCX87Go7mJ8QAACAA
      SURBVBVCpmk6FtmznvM8UFUVY2NjGBsbgyRJmJiYAMdxuH37NvverRic2zW8q7iS9fw8z8Pr
      9SIcDlfV+e8I/zegVW0z82h8YgKFUmMsuI4L6JLCzUfdzuM1so/P58PIyAhGR0exsbGB/f19
      DAwMIJFIYH5+HpIkoaurq+FSBK2gVSHqlKjVyLnetXC0g5LDOI5j7qH+/n5kMhl4vV7Isux4
      /63N4glO7q63uRKwBnipoTtZ/R3hX41KpYK1tTXsbm/B4/Xiex99fCb73A2dIPA1g1tSkrWd
      oFtbwfMGb6nq5PDwMBKJBDjutPbMzMwM0uk0lpaWUCqV3nlQ0k14ED2U0MxKqNlVg9Mx2g1q
      hH58fIyenp5Tv68lp4AEbCQSQSQSYW0+rd+5BbcvCmTdU1Z0KBRiyXSdap/OWFlZwcLzp+DV
      Ciq5DH79T/+Ecrlck5HHcRzWX79GwOdt6BwdBXAFUc8t1E7XkRWGYaBSqbCMYE3TMDExgdHR
      Uezu7mJ2dhYHBwdte5Gdxl/PpWEt8kb/U3MbOmaz57cqVadzNnKcdkKSJJRKJaytraG/v78q
      +E2gkhTEGiIjQJIkBAIBx6Y3FwHrM5FlGeFwGB6Ph42vI/zdkc1kEAmGTg0YUYQEA7/8f/8T
      5ubm2PP/61//ylxEhmHg6OgIW2sr8HlPFUC9OdpxAV0xvMvgnaZp8Pl8VSsKck/cuHEDPM9j
      fn6elTewwyqI6qHZVYs9ecsKap4O1BfG5Bqpt739HG/rmVjdJR6PB8FgsCrrmV54SiTTdR35
      fB6GYcDn8zFfuzVmcFFjt7t7SBlZfzpwx8TkJB79+Y+ISKdi2uuR4fXIeP1qHi+fPkHQ5wMn
      CHj+XMLExCQW5uewvb6O3q54w8+0owCuCN6W4HezGDiOQzabRSwWcxTOZIUEAgFsbGywImW0
      r6qq2N7eRiAQYDXwzzPGVtDo/aulfNphqVKHK3KtNQNym+Tz+ar+BTQ2qkJKqzRqYxkMBqtc
      P62siJqBNchrLenQEf6No6enB7fvf4DZp08QCb2p6BkNhxANhwCcPr/DrU28XlpEJBBATzza
      1DPtPIUOGOzCnyh6VN3y4OAA4RoFpgzDwNDQEFRVRSqVYseoVCqYn59HX18fUqnUuUtL27Nr
      3ybdsRGGlt0FZR2fLMsIBAIIBAIIBoMIhUIIBoMNFdojrnwmk8HTp09x584dAKhStDzPIxAI
      sFUMz/OMYmlVAE51iNoJSZIQDofh9XqZwrO6fDpoDAODgwjGu6C41JTiOA4+rwfdsShkWWp6
      vneeRAdnBCkJj83NTczOzmJhYQFff/11w52Zcrkcuru7AZwGYFdXV/HgwQPkcjn09PS8k4zi
      t7GCsjJZnJSp3++H1+vFyckJHj58iEKhgHK5jEqlAp/Px4K7bgqNlHEqlcKtW7cQiURQqVRY
      Yp7V0jdNEycnJ9A0rUoAX/Q9IV8/lbCgc9PYO77+5sBxHD783kdIpY+b2s9OYHBDxwX0HYeT
      wDEMA/Pz85iammLBQl3XWRZwLZimCa/Xi5cvX+LevXvIZDIQRRG6riMSieDw8LChcbkpmmbz
      GS4iGO4EN7eZfSwcd9rKUdd1PH36lLWk/Oijj+D3+1GpVFgtIWsgFwBLNvP7/VhZWcHg4CCA
      Ny6lUCjEtjVNs6qhil2509/1BHIzORM0DhL+ZO13grytwTRNKIqCr/7yZyRi0ZaPUQsdBfAd
      ApUNriUAOI7Dzs4OxsbGmOAmNBxYEkUEAgEcHBwglUphamoKhmFAVVVWrbNVNMJdbwd9s1XU
      Eqr0eaFQwI9//GNIkoRUKoUnT57gD3/4A9577z0WYyHhDZwGsRVFgd/vx6tXr3BwcIC+vj52
      bTzPM+FP1r8gCPD5fADOZjfT8akzGbmDnMpJWBWG2zVZVz2BQKDK1dNx97QGqmv15z/8HqKp
      Q7qgXhwdBfAdAcdx2N7eZj7hSCRyRjgSY0NRFJRKJSZAmgEVM5udnUU0GsXk5CSrn18ul+H1
      eusKlUaupVbW7duy+psBCcijoyOWAGWaJhKJBL744gtW9I3jOHi9XmiahuXlZaRSKeTzeXi9
      Xpbn8eGHHyIcDkPTNObisVra9eo0cRyHUCjEvi+XyxBFEaIoMreUfaVgP5bVp0+rFFptdKid
      rYOsfsMw8OLZM3CqAsl7cZTdjgL4jqBUKiGbzWJ4eBjpdBq5XA6CICAajSIYDCKfz0NRFBQK
      BUb3bAVEN7xz584Zaz8cDuPZs2fw+/24c+dO22IBl0nw10pG43ke+/v7GBwcZBYefX50dISZ
      mRkAwNHREebm5tDd3Y27d++y+IE1e5eqnpJCd3K1uLml7CtBa9lscvn5fD7kcjnm+rO6pGj1
      YI932FcDHTQO4vHruo6//PlP8PsDWF9dQX9314Wet6MArhnoRQWAfD4Pn8+HUqmEWCyGvb09
      ZDIZjI+P4/j4GKIoss+6urrg8XgQiUQwNDR0rtIOpmk6Jhp5PB588sknmJuba/nYdHyn/9st
      /JtdqdQSeh6PB4Zh4ODgAFNTUzDN03LVkiTB4/FAkiTouo7Dw0O8evUKd+/eRVdXFxMM1GSG
      kr7INUeun2ZcLfb6SNYfSZJYroDH42E5Bj6fj53HTeB3hH5rME2TVa9df/0ahcwxKrkM4mH3
      Zu5usPeHqIeOArhEaIe/VBAEzM3Nged5+Hw+pNNpZrUpioKbN29CVVWEQqc84omJCeaioUlz
      XuHv9jlZk+Vymbkuzgvr+S7C8re3W3RDI8KP53moqlolNEmQT0xM4OHDh7h//z5M08Tz588x
      PDzM+jCoqloVjyHhS26XVl0uVsFtVaCGYcDj8Zxp0uJEb+0I/tZAyj2TyeDpkydQlAqMSgmR
      UKjle+ok+CuKAo9LDOE7oQCI/kZJMbTkDp3jRjeC8/q6WzlfPp+HLMuYnJwEAIyPjzMuPoAz
      GbokVNrhjqkXmKXzj46OYnFxkWUPN/sM3laA14k5U2s7t5UJuWcURWHWtdXq1jQNyWQSJycn
      WFxcxJ07d6DrOubn5zEyMsKs8kKhcIZH307r23ocYvHIsnyGNNAR+O2Doij46k9/QNjnhdcj
      AZ6zxd7ssRhSwPV6R5crFewfHePo+BjJ7gS6ohFGNSZcewXAcRzS6TR2d3cBgAkcr9eLdDqN
      ycnJtleytL8kzdAWz/NycRyHk5MT+P1+Vr+m2UzT86DR64xEIsjn8yiXyyzW0Oh1vy2F2upz
      oPHJssyyo8kAyefzCAZPl/XE3af6SjzP48aNG5idncXvfvc7lrxFVqIoiojFYlXnIQFwUUyb
      jrC/eCiKgpNsFhG/c8xN13UcF0rg8O0zN03EAn54PO6soEw2B1MQMTw2js9+9nfgeR6VSgVz
      c3PY395ENPAm5nPtFABxpamDFc/z2Nrawr1798DzfFVQa21tDeVyGbIsty0geZ6Xxi2r1P4/
      XWOpVEKpVALP8+ju7sba2hqy2Szu3r37VgU/0Lxg1nWdNTQnQXlRAqdVZWzdt5H96Bqo7o19
      DKqqwuv1wjRNlEqlqiY3pVIJgUAAMzMz4DgOqVQKAwMDEEURlUqFKRGn/gsdIX01QTEXwaXE
      s2mayJUVfPGf/V1VDs7vfv1rcJxyZo6pmoZsoYS7H3yIwYGBKuqo3+/Hhx9+iNLt2/iXX/8K
      AY8MgeevlwKQZRnr6+vI5XJVgpLocnYMDg5icXERU1NTbaEmWn+3C040zdXVVZycnMDr9cLv
      9yOTyWB/fx+RSAQffPCBay/cdw26FkVR0N/fj/n5edy+fbvhe+/G7280Uck+jkbHW2976/cU
      LN3b28Px8TGSySQikQj+9Kc/wefzIR6POyp6Wq1lMhlWK2lnZwc3btwA8IZ22RH21wdkoMqy
      M80ze3KC6ffuw+PxVK3yPv/pT/HH3/8LvJrGlEChVALv8eFvvvgZgsGgqzHl8/nw2b/6Wzx+
      9BD7+/vXpyUkVaLs6+tjZQisVqWiKK4v8uzs7LmtZnpAPM8zDj3xttsFURSxs7MDjuMwMDDA
      grfECpEk6VKXWbCPzTAMvH79GtPT0649dN2EsJ29QnBzvzkFOtsNv98Pj8eDvb09fPPNN0gm
      k8hkMsyVk0wmMTg4CI7jUCwWWSVV4I3xEo1G0dvbi0qlgidPniAWi+HWrVushHIH1we6rmN9
      fR2zXz9C7Nsez1ZkSxX89Gc/Z01zCIZhIJ/P45f/6T9ioLcHxVIZkZ5evP/BAxawrwcyOK7N
      jFIUBZFIBPF4vKlCVzzPI5FIoFAowOttrImCEygwQxzukZERlqrfDoiiiIWFBfT09CAej7MV
      DSktqgx5WeEkdKkAGllCduFcL6jsJsytsRQnF9pFKACi3yqKgsePH+PTTz9lc3FpaQk3b96s
      ct1ZFRtZ9uTnpzyMiYkJ7O3tdXzx1xSmaWJxfs5R+BuGgXAs5ury8/v96OkfxPr6GvoGh/DB
      gw+bWiGyhL1zX8UlgaZpLVnApmkiFovh9evXLfe35Xke+Xwes7OzKJVKePDgAdLp9LmoeTSW
      XC4Hr9eL5eVlDA0NIR6PXzpBbxfabj920P35+uuvG9q+1nmdzu+GixCmxJHf3t5GMBhkJR1k
      Wcbt27chCALK5TIKhUJVj1f6fGtrC8lkktXS4TgOiUQCmUyGrfQ6uH4oFouOn5fKZXR1OZdN
      J2Ph/v37GBgdwyc/+GHDlv+Z4zQ94ksIEv5URKtZC29hYQH37t1rWbAahoHd3V289957UFUV
      HMdhdHQUc3NzrGWf1Wp3Awn+k5MT7O3twTAMJBIJPH/+HP39/QgEAldC+DcKTdNw584dPH78
      GEBj1nmjCoK2eRtcdVmWWTbt1tYWo+CSm4csfycXoyAIyGazGB0dhWma8Pv97AXneR5ffPFF
      Sy93B5cPiqLg2TdPcXKSx2c/+QkAoCvRjezxEcLBQNUz9vt8mHv5AqIgYHxiwnEeR2Mx/Piz
      n5xrbrRVAdASxC4ULlpoEZunv7+/6X05jsPU1BSrftmKpaXrOiqVStW1hkIhTE9P4/j4GIVC
      AaZpIuKw1COIosgEPzVip+zRRCLR9nhCu3AeTj6VQ/B6vXjx4gUGBgbOBEntLJxmVgjW/Qjt
      EqQ0TyRJYnV6isViFbUVgKvgJxiGgUgkglKphHg8XlVArSP0rw9M08TXT54ge7CLQCzBjJOP
      P/kEz549Q2Z/BwHLvOE4Dj3RMFYXZpHNZnHv/v2qOGO7DJu2BYEFQcDe3h6y2Sw8Hg80TUOp
      VMLIyAgCgcC5j18LHMdhYWEBMzMzLQlJnueRSqUgSRJisRg4jmsqN0AQBOzv76NSqWB4eLjq
      hRcEAZubm+jr63NVLqIoYm1tDZIkobe3l5UFuMwCoFWB7ATDMJBOp3FycoJQKITu7u6qAL4b
      +6dZWH3pbvOE47iq5inW7SlWYS+xXCwWMTc3h0wmg7t376K3txemeVqPv5bwp7iR1+uFz+fr
      MH2uMQzDwO9+8xsUMmnc/fAjDI+MsLiXoij47a//GaWTE/R0xc7sWyyVIAXC0HUNpWIRU9Mz
      mJicPJOR3Qra5lg0TRP5fB4zMzMYHBzExMQEbt++jcPDw5Z963a4dRPieR7RaLRl+iNZ2XNz
      c3jx4gWWlpaaGrNhGEgmk44t/gzDQDgcRiqVchw7MUIymQyGhoaaVj7vAm5N0luFIAgYHBxE
      sVhkTc4J7TwPHauW8A8EAozBRVVRqXQFVbwslUo4OjrCwcEBFEXBN998AwD4yU9+gp6eHiiK
      gmKx2JDwp96+nQqa1xscx6G7pwddvX3oHxiosuBlWcbf/uzn+OiHP0LqKH1mX7/PB16rQDJ1
      xAI+LM+9xPb2NpvL53k/2uICIk1GyQr0WxRFVsTqvJAkCevr6+B5HoODg4zGxHGnvWqp29R5
      MDQ0xKosNvsiEv3TWoqXfmKxGHZ3d8+4qERRRLlcxvb2Nm7evFll9X+XBIEkSXj16hWjgxLc
      qJ8Ep3vVSMOaWuMQBAELCwvY29tj7Qyp7y4xdihpS5ZlvHr1CsViER9//DEEQUCxWKw7563C
      PxAIsPIQnUDv9QXHcbh77x4L6FvnLMV8+vr6EOvphVYpnaH8Cpa5EQ4G8M2jh4jHf86Yi60a
      D+dWAJIkYWtrC8VikTWjIOi6jlAohFKp5Fgd0gmCIODw8BB+v59ZYoIgYHFxEeFwmDUZiUQi
      CIfDrNG4UwOTZmCaJoaGhiCKIp49e9awK4lcAdlsFpFIhAkM68NQVRU3btxgiU9UEKxUKmFl
      ZQVDQ0OsfMNVFPzNZMs6IZVKQdM0BAIBVn3SDfWE5HlonrSfz+eD1+vFJ598UvV5LpeDaZqI
      RqPgOA6FQgGpVAo+nw/hcJgJ/3rjpzlDbSAB5wzfDq4f6j3nyamb+PrLPyMedY8XchyHWCiA
      v/zxj/jx558zZdGKEjiXAiDfOc/zmJiYAM/zZ9wXjVIzBUFAJpPBzs4O+vv7sbGxgVu3boHj
      TjtUdXV1IRaLoaurC5IkIZvNQlVV3Llzh604zlv+gJZTjQpiqx+Ykn2cLFQAzH1ANeAB4Pnz
      5/joo4/eSqC8nXBLtGpF8AqCgEqlgq6urrr5G408EypgRttWKpWGXWqqqkJVVQwODuL169ds
      TtEzI3omrQYODw+hqir6+/tRLBbrnscq/D0eD2uO0xH+HRAalWE8z0NQFfzmV/+EGzenMTwy
      AlmWm55LLSsAjjstZUsNqlVVPSPESCHU6y4lyzJ74agphiAI2N7eZrV6YrEYuzmqqrLAcrt8
      xCQwdF3H4OAgDg8PGSOl3j5kDVoba9i303UdyWQSu7u7GB8fxzfffIPbt29fWFbqRcItW7dV
      qKqK3t7ecylBEvxUxZJckpIkQVVVFIvFhsZJbjjalkoxWy17EuK9vb3Y3NyEoihNCX9qmt6O
      IF4H1wunxobzKpcMEiIheD0yPKaJpdnn2Fh/jR//5POmFUDLTkdRFLG8vMyEvxtSqRR6e3vP
      npjnIUkSyuUyZmdn4fP5WO1zwzAQjUaxv7+PfD7Pyh5Y0e6UflEUMT8/j5cvX2JzcxOxWKzh
      ZCKOOy3eVU9hxGIxZLNZLC8vvxV21FWAYRisI1mroN4HFIuqVCr41a9+hd/85jfI5XKQJIm5
      Who9niRJyOfzrAuWEyqVCvr7+3F8fNzQi0e+XhL+nQzfDqxQVRWPv/oS4aBzI5j9dAZlk8fR
      cQblbwkvHMdBliQUC4WWSDDnjgHUs9rshYwAsNZ4x8fHiEajuHnzJoDqWvWqquLu3bsNnaMd
      oBeRkrkoecdtW7sCkGWZrVbcQC6mXC6HiYmJuv7iq4DzKmLyqW9tbbHSCc0ez+v1QhAEzM7O
      sno6VD/nyy+/xM9/fhosa+TYmqbB4/FgcHAQy8vLuHv3LgKBAEqlEnte1gQzWuVSTSY30Jzx
      +/1VbLaOAuiAsLKygq7I2R4lmqbhOHeCm7dOM8p9fj8OD1PYWluDwHOIJnrw+Q9/+HaDwLqu
      w+/3s/rzTjBNk9VFJ9YD1UE/ODjABx984Og6on3fJjRNQ1dXF46OjhCLxVhGL+BcT8YKGn89
      K9MwDAwNDQFo3Nd3meFUt8eagdvohOQ4jq0EqV1io5BlGaIoIpVKYXd3F7du3UI0GkU0GmUE
      guPjY8RiMQSDQSiK4jrngDeJW4ODgyiXy/jqq6/w6aefwu/3I5/Ps+dmv15ivLldH3AaJ7K2
      VeygAyu2NtYRtLnKNU3DiaLh05/8DRKJBFtpjo+P4/7995HP5xGNRltmkLXsAjJNk/WbdZvM
      hmEgl8thaWkJW1tbjF63s7ODUqmEQqFwaYKf1JVpd3eXCRWnJCenazVNE/39/Zibm6vpC6as
      z0gkcmmuu1XUq9tDge1GcgYMw8D09DS6urpQKpWaGgfV0nn8+DHef/99jIyMIBKJsHP29fXh
      4cOHyOVyEEWxKuHKDnq2NIbp6WmEw2Gsrq6eoWnS8anLXDqdrmkAUOC3I/g7cEKxWES5WDjz
      ua4b6E32syxxK2RZdvy8GTS1J/kwK5UKTk5OWPvBWpicnMT4+Dh6enowNTXFqJrT09MNU0Mv
      GiScNE3D4OAgHj586CrI3V5gj8cDWZaxu7tbVdnyKgZ566Ge8HfbvpYyUFUVHo8H+XzeVck6
      /RArJxKJsCbqlKi1urqK/v5+iKKI3d1dVnI6EAggFAohFAoxxpAkSQgGg/D7/WzVCpzGbYid
      5DRuTdPQ3d0NRVFqKnV6dzr4boIaILlBEARwcJj3MCHLbzLT2eemiUwmc+5EsIYVAMed1tSf
      nT2tTUERaTv33w7qgCSKIgzDQDwex8DAAILB4KVzgxiGgVgshkAgUFWAqxGrjRK+wuFwlaC7
      rkrADfVcP7XuSTQaxdHRkaugtN9TciseHx8jFAoxi5zKMIyNjSEej2NsbAy5XA6//OUvsbm5
      iePjYxweHgI4reEfiUTYM/d4PPD5fPB4PKhUKlhZWcHY2Bh7gZ2ujZq9uwWCz5Ob0MH1wNzc
      HPb3912/93g8kC3l6FVNw85BChov4saNKce4wP/0v//f+OOXj1nJkVaUQcO1gCRJwuPHj/Hg
      wQO2tHeq4X4VYdXMPM9jcXER3d3drKSvdYnlttwSBIH1AbCviq4T28P6vNvtxuJ5HplMBoIg
      IBwOVxkI9nOJogiv1wtRFPG73/0ODx48qGIT6bqOdDrNmqqbpolUKoVUKoV0Og1BEKAoCsbH
      x5l7Z39/HycnJxgYGMDk5CRWV1dRKBRw584dFgR2cglS2QhKXHS6Lp7nEYlEGKvousyHDhoD
      GQ+1nvvS4iIWXjyDLImo6CZ+/PnfwO/3s0xxgmma+Ob5LP7nX80DnAAvivhvvngft2emqtyY
      1BmsFhpek5L1vre3xzpuXXU/NsHO+56ensby8jJ6enqqarFzHIft7W309fWd2f/w8BDBYBA+
      n69KcF1X4X8RMAwDgUAAc3NzePDgwZmAqxXUISufz7Neu9aKqZIkIRAIIJ/Pw+/3s77JNHcB
      IJPJ4PXr1/D5fDg+PobX68X9+/fx9OlTHB0dQVVVfPjhh1VJhm7WPBlDdliffz6fRyAQ6CR+
      fQfhZjhqmsYMgonJSQSDQaRSKXQlEggGg46EgXK5jH/6cg6meEq+KUHCf/jNLP4rVcX0jQks
      raxhdW0N/+W/+fv2KQBd1xEIBODxeK68xW+HvZQBuRDm5uaY9UblngGw+huRSIRliu7s7GB4
      ePjMvblKwt9ex8gOJ9ZPuyHLMoaHh7GxsYH+/n5HI8Pn87ESJM+ePUMymTxTBkTTNITDYezu
      7sLn87HYgiiKkGUZkiQhGo3i/fffP3P8zz77DEdHR4jH4wBOXzi71W+dKz6fDzs7O+jt7a1J
      7bWWv+6gA+C0vAiVFuF5Hsn+fiRrlLU3DANHR2ns5zSA9ZLnUIYf/9tvlyD88gl00Y8v7p/N
      vXJCwwqAsln39/cxMTHx1pSAkzC6iKJZViVgmiamp6dZMTDyN1Mgc3d3F4IgsOJ0u7u7uHnz
      JvP/k4C4asLfGvOw+hPfpsLXdR1dXV148eIFo71Zz0/VMw3DwOLiIn76058yo8ReSkLXdUSj
      URwcHCAej7OMXmv3OEEQGD2TSj7wPM86r5XL5bq+VWvswQ77HOgUfOvACjIynEAMSyLL0Dxc
      396FzlsINKYJr1mAInig+3sBtYDh/jYrANM0MTg4iPn5eWQymZrNTdoJpyX3RQlXOqZhGKwm
      v7W6KW1D1UiJgZLL5dDV1XXpa/i7we6mclK6dt679W97Upx9v3rb2KHrOmZmZljxPGJkEYOH
      4zjMz8+jt7cXHo8HqqqesdLpOIFAANlstqqZhiRJ0DSNcf4VRYEoiowlROeqJfSp7IRpmsyl
      IwhCFXvMiUTQUQAdNIrnL+fxeG4N/+ann+DRszm8Nz2BkeEhvN7ahyl4ANOEqZUgQse/+9f3
      8WJxHV+uliGYKhIOfQWc0LAC4Hke8/PzCAaDCIfDLV9UK7C/jBdpXdvdQU6gwHAul8Px8bHj
      iugqKQL76sdJyNPfVjh9Tn87KRX7307CkBSt1+utCqZT5UxVVTE7OwtJklgJbavwt88Vqht1
      eHgIWZZhmiaLDUQiEaTTaei6jnA4zBIVncZvvReSJCGdTiMWiyGXy7EUfLubyGpQ0PV2FEAH
      9WCaJg4ODvCnb5bwOufF//CLP0AXA/hq9l/w3/93/xbhgBcfjfGYGIgj7Bfh8/kxNDiAvp4E
      /rrwD4gFZYRDoYbO1bAC2NjYgM/nw8DAwFsvYeBkjfE8D0VR4PF42k4ndVMC1votGxsbODo6
      YsHKqx4Qd+PZ03dO29c7XiPb2UHPWtd1FItFlpBHLps///nPmJiYYPEWe3kH+1zRdR3BYJD5
      33Vdh8/nw/b2NgqFAvr6+mCaJssWtgeenVYuPM+jXC7D4/EgGo2iUCicSWp0y2W4SoZBB+8O
      wWAQIs8DvACdP60NpJmnbWO/+PyHjsHh9HEGBu+BJJgN55w0bI6Mjo4yat27sGKsy2mq/fLy
      5UusrKxcCKuCgjJOAqBYLCKdTuP27duuvt+rBGLPOOUvtHJtVuvXqjTtP7X2L5fLiMfjEEWR
      sSGOjo4QiUQwMjICXdeRz+fP+P2dxquqKqui6Pf7UalUIIoient7Icsy9vb2GOXX6RqAU5eP
      YRgolUqMamqaJlRVhSRJVeQImjf29+Q6McI6uDiQ39/vraZ/ahCQz+eZ6/Eglarab3V9C6bo
      B4fGPRANS3JN0zA2NoadnZ13pgCo4NbDhw8xOzuLRCLBArRvA+TvTafTLCB81YW/Fc0KfrtA
      JxdHLaFfTwFQz93NzU0MDw9DkiTwPI9CoYDZ2VlWOJBq8jd7fYIgYGdnh8VxSqUSQqFQTZ8/
      x502/Mnn8yxBLBwOV8UMrJnAbtfnpBQ66MANa7vHVXPS4EQUiiWYponfpD6YPQAAIABJREFU
      /vFL/I//66+wtb3z7epWxdLmETheAN+EodFUbrqmaRgaGsLGxgaGhobeaiYvlWs+OTlBNBrF
      jRs3IAgCXr16hWw2i1AoVHM8Tkv6ZkFCv1Qq4f79+wDeJHhcNBqJTXi93rodtdo9nnZDEAQ8
      ffoUmqZBVVVsbm5iYWEB5XIZN27cQCAQOFOf34p6SkHXdeY2lCSJdZ+rlbtBrTsTiQQ0TUMs
      dhpgU1UVoiji8PAQyWQS5XLZcdVIrp+O9d9BIyAaekHlAItzwxQ8WN3cw43JCZi6hooUwy/+
      4S/44vvTKJYVrKQBTuRggmvYJd2UAjBNE5FIBFtbWzXLJV8EdF3H+Pg45ufnMTw8zITAjRs3
      8OrVK6iqing8XlcJnOdl5DgOmUyGMX7s310UqHcsuSFo5aFpGvtfEISqZubN4jKsZMhFc//+
      faytreHRo0fM5RMIBFhfiFKp1FJcgs5BbhtK/vJ6vTXjWtaSz+T2oc+JIVbP6ifWUEcJdFAL
      ZGSurq3BkG1MS07Aw4U99MSe4cV6FuBk7FaC+Pe/XoTAGTDEIDgA+YrOYlT10HR1Kurzm0ql
      EI1G34rgEAQBa2trSCaT8Hq9OD4+Zu4fRVEwNTWFtbU1CIKAYDB4Jthmd2mcZzVArJNEIlFV
      H77V49UDlRCgbEGrC4EesPX8oVAI5XIZhcLZyoKNoh4F8iJACsw0Txu6LC8v4/PPP0c0GgXw
      xt9eKpWqXC1W1Boz+VUzmQwCgQCjgPr9/rqkBqp5Zc3xsJ6TlIpdCRDl1O/3N11bqoPvFkjw
      G4aBfD6PbxbWAV46s13ODOEXf9o+/Y6mkeQHmaMcx6FQOc0haISq37QCME0Tfr8fr169wve/
      //0LFxQcx+Hk5ASVSgXpdBqJRIIVmCOoqorx8XG8ePECt2/fZsKS2CRE77MGbBv1cVthmiYS
      iQRWVlawvb2NwcFBZo1fVA4Ax3F1a8fYhQ65gs6zQnsbSoDjOFZ6m1aUr169wvb2NkZHRxk3
      n7j6ThVaG7nnHMexiqCiKCKRSDA/PhkT1m5KZECQcD8+Pq7K87CekwyicrnM5iVt4/P5WBmK
      DjpwA8mPf/zNn7C+c4SjvIojxescoeV4QKhdgVmHiJN8AX01t/r2cI0WgyOIooiFhQWMj49j
      fX0dU1NTF0ILtfq85+fnWaeuWoE6nuexsrLC9qPaMuQyGBgYaKoEtduLK0kStre3kclkWBNx
      8gu3CyRAKBu5mWdE7qFyuVy3TLFbwLdVGmejoGJuPM+jVCpBURS2ipuZmWHVYwuFAhuD/Tqc
      cg2cxuvxeFjgl5QJcPocc7kcyxh2SuKSZRk7Ozvo7++HoiiOz0GWZWxsbLDAMuUUUPOXDjqo
      BV3X8bs/P8R//Os2IJ6/TIhp6PjbmSD+/uef151/La0AKMOSGDHtbHAiCAJOTk5QLpfh9/ux
      srKCW7du1WV9kMCfnJys4mtXKhUUi0W8fv26bS+jqqro6+tDX18fXr9+jUwmwxRAI8HaRhAI
      BOD1eluOVVjLG+RyOcftarF9mnWvNLId8GaFQlz6lZUVHBwcsPr8ZDGXy+Uqhd/q/fT5fDg4
      OGDzwxofUVUVsVgMm5ubrB4LVQ4l5bK9vY1kMlmVb2C/N6qqIplM4vj4GH19fWzF1nH1dFAP
      pmni1dIKfvl4CxB99XdoABwvYH59H/+5eTYL346magHRC+L1epHP55nbhfy054UgCFhYWIDP
      50MwGEQ6ncbMzExVhmY9WLMuc7kcNjY2UC6XmVXZLpA/eGxsDLOzsyiVSsyCPDk5QV9fX8sK
      x+fzwec7/2QgF0sz98/pGPTbTWE0qixkWWZ1fJaXl7G+vo6ZmRlMTEwgEAgAANLpNFZWVjA0
      NNRQMpoT48Z6vvX1dXR3d59x81ivy+/3M5/p5uYmvF4vi6FQ4Lme8SFJEorFYlXJiY4C6KAR
      eL1e+GWg0kZHSioPHBwcoLu7u6bcq+sCEkUR2WwWJycniEQieP36Nfx+PyYmJgAACwsLmJ6e
      rtkKsRFwHIdUKgVZlllGpvWFbsRatV6HJEl49OgRHjx4wFgczfrEGxXgPM9je3u7igevqiqG
      hoaaFryyLCMcDrdNeJimiXw+70gPbXZsTs+gETcMKSJZlqEoCra3t7G+vo7PPvsMHMexOA2x
      mtLpNFsl1IPb6oOatABgSsc6l2jcgiAgk8kgHA4jl8ux+uvUNrJSqTi6nuz/U5BXFEW2Ou4o
      gA4agWEY+D/+r3/EX7eqvQccx8FUS2fcQpxpQMtsgA/1gXNzGZkmROUYt0fj+K///m/g9/sc
      56NILwGd2DrZKSGH3DHb29t47733mI+Z0vTbAdM00dPTg+XlZVYhr1Hh7/ai+f1+GIZx4aUr
      TPO0UB79TTkLzYLneZaU1C6Q8LUrgFYzfOvtZ3eBUSyD53ns7e3h5cuX8Hg86OrqYuU8rLRO
      YtREo9GG6Ky1VhupVAoDAwOoVCpsnti3F0URxWKRFYjzeDws4GztA1HregVBgMfjYT1/O8K/
      g2ZgGAZK5RLUkwK4Shac7ANME4auguO+XVEGe8HBgAkOWnYbplYGVzwEF+gGBIe4JsdB88Tx
      fLMM/J//D/7dv/0vzjSWAQDx5OQEBwcH0DQNiUQCvb29LLt2c3MTHMexolscx1VZ+iTs6AWz
      8tRbAc/z8Pv92N3dRU9PT82s1EZ8rETfa9Tyb4WmZxcsNF66B9ZEsXrHJUHZThBVtl2wu1zq
      bePxeMDzPGZnZ5HP5/GjH/2IsWXcchZo/p1njMVikZXntn9ndR1pmsZKTfT09DiygdxA8Qx6
      btYs6A46aAZ3boxgYeslKoExGGoJHMdD4ARwogzO0KDmtgFOhAAdYqQfEL0wK3lox+sQE1MA
      vi3Zr1bACxIMpQBe9EDL7eClEcfGxibGx8fOKgCPx4ObN29CEATMzs6iUqlUcd2p4bUTdF3H
      6OgodnZ2oKoqDg4O8P3vf7/lm0BN2ff397G8vIybN28yfrU9AOckVO3U0Hg8zurHNLKMbxb1
      3B+1CovZQcKknSD3j12onWfV1uh9ov66AFgbxh/+8IesFSPx8O3PhQgGhUIBHo+nJdeiJElI
      pVLMdx8KhapWgU40Tso/aORaKafA5/Mx10/H599BqxAEAQ8+eB+vdw7x59cGeDlQ9b3JixCj
      I2d35AVwggyO42DoGtSTffB6GZppQvCFYZSOIMZGoYPD//fHb/DfDvRDluWq2mkiLX01TWOU
      TkEQmHun1gvI8zwEQUAymUSxWGTL5vMwgjRNQzKZRCqVcrTA7BaoWwDSNE309/fj5cuXrHy1
      LMstCRQ3JWMdn1WwapqG0dFRbGxsYGJioiELvFGfdzOoVCpV7JXzCv9GQU1bNE3D48ePIUkS
      7t+/zyifdpecfQUVCoWwubmJUCiEaDTKcjgaWclRTX6e5zE8PIyjoyNks1kEAoGqOID1mTqt
      Wq1zy37P/H4/60fcsfg7OC9oDh1liwAaNwJNpQAh1AO9fAItfwg5mjx1B5kmwHHg/ADN3KWU
      hsXlVdyeuVl1jKrwMJUUAFBX8Kuqimw2i729PYRCIXi9XszMzJwrGEwp84uLi0gkElXfOSkC
      N+VAL6yu65iamsJf/vIXxuOenJx0rB7aiGuDvnMSpE7ZocViEbu7u+ju7q6pFMmH3G7YaZRv
      S/iTi+fLL7/E5OQk+vv7mSvKLR5jVQKVSgXDw8PI5/PY2toCcFoeNxaLnbHSgTfBbBLI1J6z
      WCwikUhgY2Ojqsl8PYFtnVt2RUA+fid/agcdtIpKpYJ0QUUzCkAt5SGWs+BFGZ6uUSbs4TAv
      DdGPV6sbuDU9xfqZAC3kAVBZ3t3dXUSjUdy6dYsJl1aDrbQKyeVyWFpaQiwWQ19fX1UnqDfX
      Vv/lpXFSnkIikcDU1BTLB7h586arNdgI3AKK9m3u3LmD+fl59PT0OJ6DBP9FWP8U/K4VR2k3
      OO60VLeiKHj+/DmSySSGhoYAnFJjiSGjaZqjILdCURSEw2EWFKd4DlXjJJimyXoEl0olHBwc
      YGRkhBVwo6JylUqlZlDXybXoZGBQP+EOOmgncrkc0gXd0ue3NvSTfXgifeAkL0xwqP92mzjM
      FFEulxnlGmiiHDQAVkq3UqkgEolgeHiY+XFbFTCSJGF5eRlLS0soFAp4//33MTo6ypQJvYi1
      ltpklYmiyMoKlEolPHr0CABw584d1ggkGAxiaWmJubrOY8XV29fqIrIKeFEUmXvjIiiDVE+k
      3U1qrL5up+dBVvHz58/R19eHGzdu4Be/+AXm5uZYyYff//73VQLUTfB6PB5GC9Y0DSsrK5id
      nWXP0cpt5jgOv/3tbxEMBjE6Ooo//OEPjJNvmmZVkUA34e9k9Vt/6JlRwLiDDs4LMsx0Xcde
      6gg614wX4NTNY6IxucFxPHIl7cz8b2oFUKlUWOnl/v+fvTcLkutK7/x+596be2ZlVmXtqA1V
      2HeQBPduNkU2W61WD7ulUViyRxEzY0/YL15D4Qk/OGKe7NcJ2xGesGPGE6PxaMZ2q1sSW72I
      FNVsNtkkuAHEDhRqR+1L7pk3773HD4lzmJWVtReAAjr/EQyiKrdbec/5zrf8v//X3b1r7r9h
      GFy5coW+vj4t0LWe0NdG77G4uMjU1JRWdfT5fGQyGbq7u2lvb9eb3zAM+vv7SaVSfPrpp7z0
      0ku7uv5a1BozKSUdHR1cvnyZ48ePE41GCQaDD9SDLJfL5HK5VZ3Te+H91xrI6t8rqL9reXmZ
      p59+Gikl6XSaS5cucfjwYQAWFhaASh49l8tRKBRIJpNAJe0YDAbJ5/O4rqtHkKriuJJxUKkd
      NQrStm0WFxfx+Xx88skn+P1+wuEwUkpSqRQAyWRSs44ikQiZTEavucXFRYLB4Ko6QSaTIRAI
      0NTUpBu9qpk+DTSwW6i1li8UeOuXVxD+psqc361QrUtpRFPXtvb2Yl4wMTXNkUOD+nfbPgBc
      19UFsK3SK+tdpGmaTE9P09/fTzAY3NJhUrv51PvOzs5y9uxZTS30+XyMjY2tmvJkWRZXrlzR
      XqpKQ+xVd3A9r1BKqfnuim3yIKEMV/V92Wvjvx4UB358fHxViBmLxTh06BDXr1/nzJkzQOWg
      +OKLL7hz5w6JRIJUKsX3v/993nnnHZLJJLdu3eLQoUPMzMxw8eJF3RV8584dVlZWmJ2d5cKF
      C3rKV1dXF57nMTs7y40bN3jzzTeRUvLxxx+zuLio9f+/+93v8pd/+Zd0d3czPDzMm2++yS9+
      8Quam5tZWlri2LFjHDp0iL/927/F5/MxOzvL8ePHefrppxvF3gb2HD9662ecOnGUT768zbwd
      RmwjsDS87VO7i4T4Vz/+lP/uj2J0dVWk4rYVy0ajUc6ePcvMzAyZTAbbtrcseFWbi1ZCbRMT
      Ext6xJvl/6u9UmXsHcchk8kQjUb188rlMuFwmIMHD9Lf38+zzz77QD1xv99PPB4nHo/T29tL
      Z+dWtPl2h90qgFZjK6k3BVVvGR8f5+bNmzz33HP6YDUMg7Nnz3Lz5k3NhvI8j2vXrvHbv/3b
      vPrqq7S0tHD37l2tW/QHf/AHvPDCCwwMDPDGG29w5EiF53z48GFee+01zp07x9LSEi0tLfT1
      9Wne/49+9COd/1fDZL797W/z/PPP4zgOc3Nzuunsj/7oj8jlcggheOWVV3j55Ze5evUqoVCI
      119/nTNnznDixAmtIdUw/g3sNUou/IsfXeSjkQrvfztrTFpBkNtM8QpBsQyFQl7/alsHgKKF
      njhxQgt5DQ8PMz4+vq0CsPpDE4kE0WhUh+nrPa/2GhQtUIVQsViMkZGRVakegImJiVWHk+u6
      mgfr9/sfWGHUNE2amprw+/06f7yXOkTVUMV3NbKwHurltLfz31bgeR7pdJrnn39eSz6oAzkY
      DHL48GE+++wzvYaklPj9fi3LrHL258+f10VbqNwz9W91yKtrUvRlKSXRaJQ//uM/5u7duzoF
      pgq2Kt1TKBTw+XycP39edyDPz8/zs5/9jE8//ZTW1lZSqRQ/+MEPGBkZIZvNPpTieQO/mXj2
      3DFChs2hRInfOhrGJ0tbWm9ObhG3XEI6GxMp6kGaAebmF/TnbLuapV6YTCY5efIk/f39xONx
      lpaWtmQsavnXrusyOzu7pdfWKzh7nkdfXx8tLS2rUjzlcpmFhQVthKr7HR4UVDHa799Yr3uv
      oAajp1KpdXsN9tLoCyGIRCJapjoQCOgCtuM4nD17lmQyqZVIFZTTMDw8TD6frwy8vi8tIoRg
      bGysboTk9/t1Ll5d08rKir7/aiiPeiwcDvPiiy/y7rvvEo1GKZfLzMzMEIlEmJ+fJ5lMavaW
      67q0trYSCoV48cUXefXVVzl27Bjz8/OEw2HOnz+/pYEaDTSwUwwODPBP/7M3+U//8O/xO69/
      jecOViQgNoPwHMxI646ko4VhcX1kRv9s/smf/Mk/22l4qzZiIBBgeXmZ5ubmLRUw1H+zs7M6
      97peI85Wrk1JB2SzWdra2pBSsry8zODg4CpDlEqlME1zzztuFdRUq3A4/FBSBsVikUKhsOfv
      q9g+qmCttPsjkQiBQECreqpuWHUYVIuoqfRaPp+nq6tSrAqHwwAMDQ3R1dXFJ598wvXr1zl8
      +DCHDh3SKqrqGlpaWnj77be1RlIwGKStrU1HctFoVM/4zeVy9Pf3a+NuWRYHDx7k17/+NXfv
      3uWpp57iwIEDrKys6JpCc3MzgUCAjz/+mOHhYYLBIIODg9y9e5fr168TCoV0Cq+BBvYaijbt
      91cIBk2RIB9cugXmxvZJeg5CgPCFd/Kh+GSB584dq6Q2tzsQph48z2NmZkZPyFpzwTWHgvo8
      n8/HpUuXeOqpp8jn86se24o3qt5XjYwcHR3lG9/4BqZpcvnyZc6ePas9Y8Ulv3btGsePH6/b
      DLZbNDc3PxQhMFVLqZV52C2qaZ6mae5amE5dZzqdxvM8YrGYLr4rw62ih3K5rFU7XdcllUpR
      LBbp7OzUXcWe5+nJW4BmASmKKcCdO3c4dOgQnudpcTchhE5JKcKBOsRM01zVD1JdS6rHemqg
      gQeFbDbL//DP/wNEOjZ8npeZxggldjY/QErOdrr8o//ouxXq/A6vdRVUZ7DKt2+mu6OgFEXn
      5+eJxWJaRkIIoXP01XNY1fuapkk2m8W2bd0YlEqlOHbsGF9++WVdDRkpJaZp0t3drQd3KJ7+
      XqSFVG3hYRiL6sHwewEhKnMeQqHQqmEmu/1b1H0zTVNHRYo0UCgU1kQvtm3rSM62bR05qFy8
      uv/1XqcOepXrV/Wg6hSREIJCoaB/Vt3XtSSGBs+/gUcBy7IwkGxW2hW+MLJcQOzgAJBAan6S
      xcVF2tvb9+YAUE0yly5d4tixY1v2rqWUHDlyhMnJSebm5giFQgwMDDA1NcXk5CTRaFTL87a3
      t+upW6lUisnJSZqamhgbG6NQKHDu3DmCwSDd3d1689fmxZXBHBsbY3p6mnA4rPPTu2XPVOep
      HyRU0Vfp/OwG1Yb/QUkbqDC3OvduWRbhcJhMJoPP59NqsuVymfn5eQKBAO3t7ZTL5VXORHXU
      Vwt1cCgu/2ZQ8yEeVHG+gQa2AyllZfypscl69BzcYhpfc9/OHEDPYTQXYHh0Yu8OACUlbZom
      qVSK1tbWbXWh9vX1aRrhZ599RjKZ5LnnntPeuUrpJBIJpqamWFpa0pzyvr4+XVzcSj+ByiGH
      QiFaWlq4evXqrv52hYflNRaLxXXZPluF8sRDoZBmKj1IqI5c9TmqoSqRSGAYhm6yKhQKeq5u
      vRGg67HC1GOK6lv9+3pQWk0PIg3YQAM7xcLiEnKT/L9bymIGYzuO/oXpg0gHt8dneeHZHWgB
      rQfDMHTjzHa8abWpXdfVfHnF2FFwXZejR49y9epVMpkMPT09urlKGYp6E6/qwXVd2traEEKw
      srJCLBbbtWRCdd74QWM3Hmttfv9hHFrq8xTqXX8gENAzgOu9vnqxr3cIuK5Le3u7Hs5eT9pZ
      HXZK9LCR6mlgP2FxaWlDZo8QAoopjETPFrR/1oGURHLDNEdOAnt4AHiety3jVC/HrDZmrTFV
      eeRz586Rz+fx+/2rDpmDBw/yxRdfcODAgS2fjKZpMjExweHDh3edS3+YB4CSWlY58a3UL1Rx
      NxAIaM93Pxm/2kOi+vfV/4eNVU3rifspeehSqcT8/DxQmfPb8P4b2E/wPI+ZhTRskAJyy8WK
      0qdhbYkuWg9SuiSaIhwZGqxEwju94GoYhsHS0tKWvOnNmD3Vj9dGEkrnp9YAlMtl8vmK0t1W
      Ofiu67KyskI6ndapiJ0a8Qcl57zeZ1VLSigq6EZRV/Xkqv3IaFEpqY1y/NXPXe855XJZ33/l
      JAQCASYmJujs7NSzlh9kzaOBBnYC2y5zY3wBWF8uxrR8uK69Y+MPQH6B/sNxDg5Uagh74gZa
      lsXMzMy2PPB6qD0ctrpBg8EgXV1d2/JqpZRcuHABKSW3bt1iaWlpR16xKoA/TI+y+qAMBoMk
      Eol1Dz41ZnO/Gn8FdQgoWJalO3erhdg2gmKHTUxMMDMzg2VZTE5O0tnZqQ8Ex1mriNhAA48a
      77x/kdnCxk6kxEBaAaSz896foGHzzDMXdDp4TyIAVeBTXZsb4UFtPqWDs500lGmatLa20tzc
      zOjoqFal3CosyyIejz/SdIoQYl1GkGqgehy83eo0mud5jIyMEIlEWF5e1rpRnufR3t6unwNr
      B/EMDQ0hhKBYLDI2NgZUBOny+bxONVXTlRs6Pw08bBSKRUJVzagLi4u8d3kCz2ja9LVWoo/y
      wh18ycEtS0ErKFXbZLJZO5DbPgBUgVZrSRgGc3NzAHoS1HrYbKOpx3cyxETx4reSRlBQssGe
      53HyZKUoojjmtfTDai9UjRyMRCL7KpdeC+U9Pw4GTs0JBnQ3cVdXl57rq2Q81KjI6nSj4zjk
      cjmSyaTuLfH7/fT29jI3N6ebDKFyX3O5nO55UPUlaDR8NfBwkE6n9QEgpWR8fIKSqETo0vPq
      TvSqhpSyogO0TSkIwy0y1B4kEg5vfyKYesHNmzdJp9OcP38en89HuVxmcXGRkydPbtqctNEG
      qzak2zX+juNw+PBhRkZGtsVCUsNYAN14pgxNtXGoTfGo5rT9YjCUka/+ztR4zccBnuetMtLq
      sK0ucgtRGRLT19fHyMgI4XAYy7I0+aC6k7xYLNLR0aG7iv1+P8ViUa8x1Tjm8/k0M0gVyBto
      4EGj434UC5W1f/3WMPbiOFKYGL4QVrx7EzsKwhfaXrpdSsz8DEMHz62ifm9pxRuGQalU4ubN
      mxw9ehSfz8fVq1cRQhAOh2ltbV3Vqbn6Yjc3ktVh+HY7XA3DYHR0lHw+z9DQ0JaNv2LG1P4u
      HA7raVpCiLpe/qP2+qu/H9d1yefzq36nmrseBsd/N1D0TTW6slwuY1kWs7OzBIPBNetJrY2D
      Bw8yOjpKc3Mz4XBYC/AlEgkdPUxPT5PJZBgaGtIU4eqZ11ApGivqablc1tTY/fydNfBkQUrJ
      TNrF13oIADc7R3nxLkawCeGPYFjBVZRPKSUIE2lnwRep/6b3oTMq5SIUF2kOepw+eWLV+t70
      ABBCkM1mGRsb4/z589ojO3PmjM7bKk+r+kO3uonWG/KyFahr8/l8W4pAaj+3HizLoqmpCdu2
      KRaLZDIZQqEQodAOdDf2ENVzFJSUsfpZCKGZQaVS6aFx/HcLz/MYHx8nFAoxPz9PNBqlUChQ
      LBYZGhpa0xegNH2KxSIHDx5kbGyMWCzG9PQ00WhUz38ulUp0dnYSj8f1/autGVRHTFJKSqUS
      Pp9vlcJpAw08aOQLBaYWC8hApYHRjHViShcvv4TMzWOXS1jxbi38JkRlDKQwrA17ATy3jLs0
      gi8QJOaXnD/RxflzZ0kmW1Y9b0sHQDqd5siRI9i2rTdGLZtiJwZnt96W4vJvR8qhOnXjOE7d
      oTCKNqlkKPbDEHDV7Ka81tqDTqV7HhYddS9gGAatra3Mzc0RjUZJJBJaIqLe/XRdV8s6T01N
      kc/nmZyc1OuotbUV13V1k2CtlIRCteFXULWB6kE2+ynN18CTiTt3RnB8X1E/K2vSQIRbEYCJ
      h704ij85CEJgZxcR0sVJz0CgCSvSUvPa+/8uZfBHWwlYku+8fJjTp07VFXfc9ABQMr4rKyu0
      tbVtWehtI6wnNrZdCqmSgd4uVH58s9eq3PB+gDJQtahOZT0OXn8tSqUSiUQCQCuHNjc364K7
      ShPBVzOH/X4/XV1ddHd368NQCKGf5/f7uXv3Li0tLcTj8boMqXprTc1XUNGU+m4bh0ADDwJS
      Sm6NToLpZz13XmJgNXVSmL2BMEz8Te0Y99NFXm6B8tIo0vMwAhGs2FcqotLOQlMXbuo2Uh5a
      Naa1GpseAJ7nac2c1tbWHfyZq1Ev966w3QPA8zza2tqYnJyku3vjwomCz+cjGo0+dp2g1d9Z
      9WB5lfN+HI2/QvV9i8VijI+Pr5qi1tbWhmmauK5LX18f4+Pj9PX1abmH2vvueR6BQIBIJLJt
      wTzbtvU4UXUANVhCDew1pJTYts3dmTRSRjd8rvCFCcY7K+neQPyrNGY4iS/SiiwXcLILAJRX
      pjBMAzwXIQTPP3WK06dOrevIbCkFpCh6Pp9v1Yba7obYyPjvBFJKnT9Op9PE43HtDa7X1bsV
      z38/QjV9BYPBx97g10Lx8z3PIxwOEwgE6Ozs1L+bmprS85Xn5+f1/V2v3lQsFgmFQtumBSvY
      ts3KygrhcJhgMKjTSo0DoIG9gCLM/ORvP2A6F4At+KIilMCdu1WZAyBWMyaFL4QZCGMv3sUX
      P4C0s1iREO2BPL/z+usbDqja8AAwDINisciNGzc4efKklu3dCR7UBgqHw/T09HDv3j0WFhZw
      HIf29vZ1x/kVCgWt3f+4IRqNPlFGSEpJMBgklUqxuLioZT4cx2HCzS+bAAAgAElEQVRpaYlk
      MonnefT09JBOpzX9s7e3t65nr6i7CwsL9Pb27mq9VlNT1VS0Rk2ggb2A53m8+6uLvHttuZL+
      2RIEhi+IMMw1Do2UEhFqwR9MgGGC6Ue4RXwij23bRKPrRxjWRro8S0tLLC4uao3/jbyujbBV
      478TGQkl7Xzo0CGtCbS0tIRpmiwvL9Pf349pmiwuLmLbNm1tbY+l9/wkGh7HcZiamiKXyzE0
      NKTX18rKCsvLyzrl6Lou0WhUR3jrdT1ns1lyuRxdXV27ilQVVGH93r17tLW1bbiRGmhgK/A8
      j7n5eX728R08M7Gl1wghcFYmKsyfjWTOhaF1goKlOV566RldX1sPG1pCJe/s8/kemtrlTqE0
      3ltaWrT3lkqlGB4e5osvviCTyewoHdDA3kMVdkulEh0dHRw8eFAPaHEch+bm5jU9DIr+Wk8y
      WsFxHMLh8LYbCdeDmm9x9epVPZKygQZ2CkU3fvsXH1LaovFXr0MYGOGWzZ98HyIYZ/Bg36bP
      s6oHdVRDDehWG243Huh6n/Eg4DgOhw5VquTt7e0UCgXd5el53mPTHfukY2VlZV2DqjR6qqWu
      NzPoSi8ok8nsyfWpz1PjLJWY3OOYOmzg0aG670Qx+YwvP6e7ZDDbPIATSsKWNH0EyK07ICXp
      46dv/x1//Id/f8OMR91HVFFOzWJdj7a5VWzFG9tLz1w1pynp32qpZ9u292QGcAM7g+d5dfsY
      quG6LolEYpUx38rasyxL6zTVQukiVc9DUP9WkhBqXrGi/wohmJqaIplM1u0daKCBzSCl5IvP
      PtM/j125wrPFIv+AAscXbiK2ONrFjLbi5Ba3/LmeUybs37yhsW4RWLXSDw0NrTuWb7uHwWZR
      wIPYWOu9p+r6bODhQnWM53K5Te+33+8nlUqt4uTDxutEHQDVbLNqOela5VD1vtX9JNVRyfz8
      PDMzM7z00ku4rkuxWNS02wYa2AqEEJw5d06nJZc++JC2+49JKcFzEGZg8wi3lMP0h+t/hlcG
      wyLkpWmNGKQLDiVnhd7eZ3Z2AKhwulAoEAyuVpzb61TOehpCDxLVG/lxUct8EiClpFAobCkC
      syxLF3JVZ2+10a5VjoWKnk93dzcjIyM0NzfT0dGBEIJ8Ps/ExASlUklHhmp8pOo8Nk2TlpYW
      XNclGAwyMzOD4zg89dRTejaB0op6mCnNBvYXqiVZRoeHOXjo0IYpFpVNUXauvLCgmTyvGB7N
      Ux/xWayXfPPAunNehACvsITVcnDtY9LjRGuZfHaJ3//uG3R3dTI3N8+//n/eYnoho9Op66Hu
      I6r5RXH/d6rVU/ue9X73KAprqhhz7969bTcKNbBzbKU4qx53HIfOzk7GxsZWzXsWojLbV63L
      6rWpNtvQ0JDWSrp79y4XL14kEAjQ3t5OZ2cnHR0dzM7OcvjwYdra2jhz5gzd3d0EAgFisRi2
      bXPkyBFeeuklYrEYxWJRF4E3KkI38ORDRbE3rlzh4x/9aMuEA8Ve81UZ44gQvGjCayt3EPba
      Ln8FNzWF2XSAerUCYaeJBwX/+T/8Q/p6e+43ukY4degAd27dYGxsfMPrqhsBSClJJpPcvHmT
      yclJBgcHdUPMZt6P2pT15vrW/vwoWRX5fJ75+Xk6OzsbHt1DwHZmPKh1IYRgYGCA8fFxDh06
      hOM4FItF7t27hxCCeDyudf0dx2FxcVFLPxeLRb788ks8z6O/v59wOExbW5tO+XR0dKyKKGpb
      5dWGtW17lZCcbduPbR9JA7uDqi1O3L7Nyo/+gq5TJ7fsEEspyWQyRKqMeEpKbM/js2AS6Vsn
      vSMEnp3H1xSoWy041BHk7//em7pPBSAej/ONr3+NV772MrHYxtTldRvBhBCcPn2acrnM1atX
      CQaDDA0NrftGtYVitdHW0/x5lMbfMAzu3r3L0NAQ+Xxez5Kt51VWo9pgNLA9SCnJ5XLb8qDV
      +gmFQoyMjOiUXX9/PwDLy8tMTk5y6NAhVlZW8Pv9BAIBAoEATU1NXL9+nRdeeAEpJTdv3mRu
      bo4TJ07oZrNSqbSK7aMOKLV26zkt6kBodAb/5kFKyfzMDHP/7s9oKhQR/f1bJsdIKRm9coVu
      KUEIpBD8qdVMIdYFoZaNp3sZ9Z0NUc7ynW+8ULeeGY9vPl0MNjkAVEHt/PnzXL58WU8DW+/5
      W1UHfVTGX+WDc7kcPp+PcDiMbdsoLXqo5J5V4VDJAqvHi8UiUkqtt98wAFuHSidalqUdgOqJ
      XtWozu87jqNz+dXpIcMwsG2bZDLJ6OgoPp+P5uZmotEotm3z3nvv6Slvtm0zMDDA0tISt27d
      wnEcjhw5ssrAV6uPrufVqfDftm0Mw2hEAb9h8DyPW3/9E4aKJUYMwVBXF+lUikRz86a2YPLO
      MIH3fompnud5lENRZHh9fTWBxM0tYvgjdb3/oFGmNbn13oB6qHsA1BbZHMehv7+fqakpurq6
      6m6Q2mEb+w2maXL37l0CgQDBYJBDhw7p/H/1gaQalNRrFLOk2kCoQ2MjjY0GVsMwDK2sWu1h
      l0qlVQdAbQQJ1H3c5/NRKpX0/AOV3gEYGRnh4MGDWi1U3eeWlhYSiQSpVIpcLkc4HF5VX9gK
      FJdbrfVGJPCbg3w+jzE5CUCnhNv/57+EUyd55fd/b93XSCmZGhtj8T/8B9oLX621Fc9DWOsr
      DctyDjc1BcEEVrR9zQEghKAjHiQY3J1asaWMfbVRry2sQUVzZ2JiggMHDqyrvV+bS68OqR/1
      JhGiMipQSUZsJQpxXXfdv1UJjj3qv+txQDXNUn1fjuNQKBT0YVuL8P25pblcru69KpfLeixk
      MplECEEmk2F4eJhisciFCxc0dbP6NQCJRIJ79+6RzWZpa2tb9xrW+1uUbHRTUyXM3s+OTwN7
      B8dxWGiKERCC7nyBRCFP05nT69qAmZkZbv3qA7Kff86Zkq2NuBCCa65LOda57meJcgFhBTFM
      C+mWEdZqqqj0PJrCu69FGeqCqo10vclahmGQTCa1GuN6UUA1TUr9rELn7Y573C7q9SioUH1m
      Zob29vY9awJT0gQNbI5aJ0DRQUulktb9r0U+n8cwjHV1zKFyny3LwnUr0refffYZzc3NvPDC
      C3qMab1rsW2bnp6edZ+zGdSsYnU4VVNUG3hykUgkOP/mmwgpkcDS4CAD91UHqmHbNhf/+q+Z
      +Of/C4Mffczpkr1mfcz6Ihvn/aWDFCbS8FFeGsVZGcfNTIOn7JdHJpPZtT3TKaB6nnv176WU
      dHd3c/nyZdrb29eMgKx97Xq0zwexUTzPI5vN4roukUiEbDarDb8Shsvn89saGL8VKJmJRhSw
      MerNXo5EIgSDQb0m0un0KsciFArp4paahKagUnPNzc2r1lMsFtPiV6pes56zomYpJxKJHW0i
      dZAUCgU9LrSRDnqy4boudz/5hMFikZHuLs5+/3tr7vfK0hJf/n8/oPPWbULqsTpkgqfdImPp
      KZxYN1IYCOlVxNzuw3M9jEgrwgpgtQQQSITn4q6MYrUewZ6/w0wxQC6X29XQqjU1gM1a9AOB
      ALOzs6va47f6+r2GopvevHmTjo4OTNNkfn6eWCymN+iBAwfwPE/TWPcSyohAxSjVNs3tBIrq
      CBWDogrSTxqUsVSRYiwWW9UhXH2wNjU16VGYruvqZqxQKKSpmo7jkE6nCYfDqyLN9WjJmUyG
      jo6OXRESPM+jUChgWRZ+v3/f18Ea2B0WFxbIrqww91uv8vTXvkYwGFx1ACzMz3P9f/8X9Kcz
      GJt0rg/4LM7N3+DXTqkSCXguvuY+MH0gTEQwhixlEFYAoSSjLYGDDzl3C1nOUWzp5+qN27z8
      wrM7djzEzMyMVB5aPQ+92nsTojIf+M6dOzz11FOr5KEfBQzD4NatW3R3dxONRvX1PMxDSG14
      NYFqJ1Dfu+M4OpIBdHokHo8/lhLWW4H6uwuFAp7n6UlgtZFVrRaPYuOoA9jzPFKpFB0dHXoe
      sBJwU4yh6vWtdIZ2EgHU0p3VPVLd5Y0o4MmESmfX2kT12K/e+jE9v3gPawuyJXfLZf6i6xnK
      gTgCkJ6Dm54G6SKlB0Lgazm4pjtYIPHyC4hgMxgWA9E8/80//v0dOx6bTgSrhpSSSCRCX18f
      165d48SJE4/sEDBNk5GRERKJBLFYTBvNh2n8I5GIVhfdyXdQLXGsmEbV16882XQ6jWmaT9xA
      GPiqe3ezv622vqMODQXLsmhtbdWpIr/fz9zcHOPj4/T29q56TEpJU1MT8/Pz+Hy+befwa5+r
      mEGxWKwRBTzBUGu1FlJKSsUi9o0bmGxug7JS8n64nXKgMrRKAhgWZqIXVNqSNZmj+88ViHCb
      /nklV6Gn79T53JZbqf6wjo7K8OGHbYyqpzLlcjlc19Ue38OGaZpaZlqpSm4XUkry+bxOYayX
      UlNUxidVxVRFOtVkhM3Wlkq5qeawQqHAjRs3yOfzlEolpqenWVpa4plnnmFhYWHNfAHTNCmV
      SoyPj+Pz+fR7bRXVtS51j9Q9bBSEf7PgeR4Lc3NEZ+c2fa4Qgrddg9mO0+s9YYv6oBUU3Yot
      3Cmszbpy68kkFItFAoHNFez2Ep7ncfnyZbq6uggGg0xMTHDixIlHZhSDweCu0jJSSi23vZU8
      tBpyo1gviiGzkaF8kjuXDcMgGAwSCATwPI+lpSX6+/sZGRkhnU4zODjI8ePHsSyLXC7H2NgY
      nZ2dOmIVQjA0NITruiwsLJDL5ejs7NTf71ZRzXorFou60e1J/M6fJCg6L1Qcy51CUY3v/uSn
      9N/v8t0MLaiIc/drpOwZ5O6nQXeCVX95rUGvzqer/1uWxfXr1zl69Kim3z1omKbJ2NgYkUiE
      sbExQqHQIzX+wBqPcrtQeertHKKq4KnyzkoHR6G2s1XNP64W9HtSDJMy4qoWoEgJasZw9QHd
      1tamD4rqFJJaPy0tLVr5VnW/7yQlZNu23hN73fuiis1PIiHgQaM2rXr7+nVmLn9JeXaGjpdf
      5syFCzt+Xykln//oLzhw+44u/NZCrYMvbZtbRpAV0wduue484OrZJVuBh7kjKrOCPgBqQ9d6
      BTg1d/VhdsAqOuf4+DgvvvgiBw4c0PLAjwrrcde3AuUpFgqFHUdQ1c1ItRPOFPupOt+tjFF1
      quVJgBCCUqmki8bZbBbTNBkYGGB4eJg7d+7oYS8HDx5ct+tXRbO1MwO2C8UKikQie/49N+jG
      24eyaYppNjs9zZ2f/Zy2W7cZBMYDflIzMzuK2NQevHHlCi1fXMK/zuvzUvKhI0hbASYTvRSb
      D266xrbtgHg7X7MWbJ2fL6VkbGyMEydOPHADrJp05ufnKRQKxONxPM/bFx7QTpgeKlQsFot7
      poWkIoKNUCqV9HPUQaAM5m74w/sBhmHogTFqE3d2dhIKheju7ta/VywgtbFq753i8u/mvqj9
      o9JA6sDdKzypLLAHCSklhXyeSz/9GfmJCaLzCwzaNgaVQqz/m6/zzNe/vmPjn0mnmf+7v2No
      A9u54Hl80n4aI3yfNr+Jnd3uGjRwCexCDmJVI9hGh4DP5+POnTuaV69e8yC8EiEEs7Oz5PN5
      Ojs7dWi+X4bTq6LsdgxooVDQzUkPG7VpPM/zCIfry88+bqjtXvf5fGsUR6vnWteuVyGElnVQ
      6R+VWjJNc1vd6+pwyeVyOnJtGO5HByklv/43/4aBuyP4q/LtrpQsAMnm5h3dHyklw1euMPtX
      P6Y/ldowk58UArOcx5O7E21bD37D29WQIgvqd/Oq/9eKwiUSiVV5zgcBFdr39PRomV61GfcL
      MpmMbtTaChRTZb/gSTNMpVKpblS62ZoRQlAul4nFYlpPyO/34/f7yWazRCIRLWOyFVRHAqpO
      1EjdPBo4joM7PoEfRauU5A2DmZdepP/0KXrvy4pvB67rcu3jj5F//kMG5OZl3I+wkE0HdnT9
      W0HAlIRDod0dAAr18v5QMV6Tk5N0d3c/lMJvqVQik8nQ39//SHP9G0FKSSqV0hr0GxWFFYNn
      v+BJNEiKirud9aIovKlUSheRU6mUTok2NTVx7949wuEwiURiS7MMqjeiih6exO/7ccCtGzfo
      LTsgBDOmwWxzM9HOTp7/7W9pufetQEpJsVDAcV2GL17E//O3iW0xkG/yHISdQ/rXH8yynt3d
      CkzcvZWCUBdUXfhdXFzEtm3i8bjOpT4omKbJ6OiopujtZ0gpdY49Go2uaQpTBSjVs7AfYJrm
      EyljbVkWkUiEdDq96vfrpTZVeubGjRuYpsn09DRCCFpaWjS9VvH7U6kU5XKZRCKB3+/XOWDl
      3ft8Pl1rUEZ/bq7CCX+Su7j3O1LT08QFuEjutCbpOnwYXyymo/at7AEpJZfee4/0z9/Gyefp
      Nk2203J1wWcyvHCD8QMX6q5DgaQ5dYl2K8W8HWbJ3w+Rts1KBRrhgLWr9bXhQBi1qJeXl+nv
      738o6pdSSt3Z9rjMX5WyMu5tvVTaw5an2Aiq+PskHQDVzspGUUD1TAK/38/8/DwdHR3E4/FV
      3cDV67yjo4POzk6y2SzFYpHl5WUcx2FwcJBSqYTf7+fmzZtahDAej5PP5+nt7SV0PzRvRAGP
      Bs+99hrv/M3bDCIwLIupqXuE70/K2sxoep7H4vw81376Uzq+vEoSoCZiqHb06qEkJUEhEHXq
      SAIPKz9LrDjGf9x1k86wiythvnCFv1g4zmTs2Y3VQu+jpSm0qzRj3XkA+iJFRUQrFAqRy+WI
      RjeeL7lbWJbFrVu36O/vf+Rdr9Vc7uqayEaGfL3H9ovxB7Y01/lxgLoXamC7SueEw2HdYAdo
      fR6l4fLOO++wvLxMIBDg2Wefpa2trW5xvjqXD2hjHggEtGPy1ltv8bu/+7scPHhQG5SVlRWt
      UmrbtiYuNOQhHj4Mw8Df20tgcopnp6ZJGQYLgwfrrn8V7ZVKJUZu32b+s88Ijo7RVyxisZY4
      MO2UGXFdWoTBsftRYdUTyEnJh6zwTDmKawa/YqAhsfLTnJCX+VrLLC1BD79RqS+ZAjrDLt9r
      vc6/vmeSST6z6d/Y3BTeFeV4VRG4Xh+A0r94GGGson5Go9F9kTKpbZ5SN3E/FaProXqUZS2L
      RTGY9kK59FGg+m9S/RSAbobx+XxEIhEtIZ3NZpmbm6Ozs5Pbt2/T1tbGG2+8oSU4oKLptLS0
      hM/n05pEpVJJp3fK5TLBYJDPP/+cQCDAiRMntLqskhpXEasSJVRzAhp4dBBCED1xgvLkFMLz
      WCoWSLnOmv2bz+cZuX2b6c8+48bVazwPHOG+Vy2MNXZxtFwmD5zxB/jELnG05nOHHZvl5kV+
      tyfH56M26WwM6XkIz+Zs4W95pXWG9vD6zmRnxOPF0DV+zjNfyUJ4DnguqCliUuL3cpw58dyD
      SQGpP7ZQKJDL5R64wfD5fNy+fZuurq59a2D3kydfD6ZprhKoU7lqVdiEimb+fuil2CmqB7DU
      dk0ahkG5XMY0TbLZrB77ODQ0VPEG7wvEqd/7/X4Mw+DHP/4xoVCIbDbL4OAghw4d4p133uHN
      N98kn8/z85//nJdeeonR0VEMwyCVSvH1r38d27Z59913gQor7Hvf+57WZVGpqP2+Zp505BcX
      aQM+tkt0hMOcfuWVVQ1/nufxwb/7M7pv3OAwgj4EN+wSrf4A7xZyBBAM+v30mBZ5KZkr26x4
      HucClVkWBw2TCadMj1mJEyQw65V5pr2A3/C4MJglvDzMSPYeRVfw+wOLCOSmOf6QJTiY/jvG
      Is/jWSFkYYHO4g2WgkM4/maOd1q88txTDB3cPpOpGhseAIZhMD4+rguH8GAYJJZlkclk8DyP
      ZDK5Lzynak9/v29iISoDVgKBwBqpWvWYaqKrloV4XJHP5ymXy3XDeCEqoz9jsZj+uxW///z5
      8/z617/mBz/4AYlEgjfeeIPl5WX8fj+vvfYaUkr+/b//9/T09FAul0mn0ziOQ7lcJplMcuzY
      MYLBIMePH9ff5WuvvUYoFOJP//RP665blZ5q4NFA5nIUXJe45SPq8xO8X/9SezuXy2GNjRG7
      n+YJC4HteSx4HoO+AH2mwaelErOOg0Gls/cp/1c6aP0+H8O2zZRw6TJMbpdtgi0ZWoOVFLaB
      x+nmPG3+IlN5RUjd5JqlxBMm/6DnLv/HRIh7sQt0OWP8cd8oZW+Ma5kE577xP9J9XxVhN6i7
      MpVS4vz8POVyWU/S2mvDYRgG09PTLCwsEIlE6O3t3RfGX2E/G341FUsZdjWVqhZCiHUfexxR
      raFUGylWF91VekdKiWVZukB8/vx5Tp06xfDwMO+99x5DQ0MkEglKpZJWBFX1p3A4rFNL1TWh
      QqGg867VjKD1rvdxP3AfV8zPzRG6fZsFz6XVsugolZj5v/+MpW++hhWJYPp8ZG/eoqewWiLE
      JwzmXIcz/kq6JWma9Fs+/OvUSg0BRU9yxSnSd2SWvuhasoxhCMK+rduTsgsBC/7hget8sjjJ
      S30pfIak7EHrsZfp6Ozck7pS3QNgbm6O6elp+vr6OHfunPag9hKq6aZUKnH6dEUadb+mfvYT
      VDSm0hf7+ZB6EKg2vOtBFYhVmmhlZUVTPcPhMKFQCMMwsCyL9vZ2Pv/8c86dO8f8/LxWGS2V
      Sniex/z8vI4sAoEAi4uLHD58eMte/eOcbnuc4TgO13/8Y3odlysSBgwTpKQjm6Xww7/AEwJP
      SlqAaha9lBJDCE74virsHrJ8+rFqeMAdt8S0VaC7LUuXX9Ifrc9czNuS2DYOgJjfYypr0h1x
      +Ebniv79WD7CwWe+uWdR5Zp3URsgHo+TTCYfKBtndHSUU6dONQz/FqDkn2spnL9p3qVhGESj
      UWzbplQqrWFm1TK21NoKBAI4jsNHH32EbdskEgleeukl/H4/x48f56//+q8xTZNvfvObJBIJ
      kskkb731Fj09PRw4cADXdRkaGmJkZIS/+Zu/4Vvf+ha9vb3aC+vt7V2zKVXU0cDDhZSSW19+
      SfLGTUwh8JAIFR0C4cqT1n29S+UQ2DBRLwRXi3lahxa40FzSn1v/qYKZvMXZ9q1lN8qeYD5v
      cDq5OpKQErLx47QkW/eMlKNHQlZvJNM0uXPnDslkcs3g7b2AZVl8+eWX2/KkfhNRPQ9Yea2/
      6VBr0XVdPUjecVYzO6rXslKOXV5eprm5GZ/PRywW0+MkpZREo1Hy+fyqiErJSSsJaUUVVXNg
      1e/VIRQIBFaJ86mBQbFYrDEm8iFCSkk2k+HT//V/Y2h5hUXPY9HzOLJFO+MBvyoWeDkU1odG
      LYQQ3LTzdB+Zozuytd6oiazFpaUw3SGbp9rqq9JWv/97UwG+fqC0yvYWHIPJE/8lT7/wyp6t
      p7pSEFJKOjo6mJubo6WlZZX4215A5VuVyFsD9eE4jpaaaBj/CtQaVDUQxd6pzvlXbxrP87T3
      H41GmZ2dJZVKkUgk9PPy+TymaTIxMcHAwADFYpFcLreqwUa9b/X0perPqte0WF2TaODBQ9Vj
      brz3S3qWlwFBi2Ew7m7dxtxzynT7fOsaf4V0qMTTka03qvbFXIJGhrni2hkA9VD21q6Z8VIT
      h4+f2dP1pK1KdZFL/VwqlXY0IGMjCCGYmZmhs7NzXxV89xuUN9pQlKwPJWtdPaR7vUY9taYN
      wyCfzzM3N7dqlkK1g7Oe+udWf1eN7SiJNrA7KON/7cMPCb37LoH7rJ5lz6PJMHU9CKAEpKXk
      jueyKCXqeHCFYNp16Tc3jhYkUPA5GGJ7h/tyySAe2ML0PwmWWLt28s2nSCSat/x5W8G6f2k0
      GuXIkSNcvXqVvr4+mpsrH7zRJoH6LdbVG1NKSVtbG+Pj4xw5cqSxQeogEokQCoUol8tPBG3z
      QcHv969i2WzUzR6LxRgbG6OlpYW2tjampqZIJBI6/aNQr6typ2u0sbYfDpTxv/nRR/BXPyYu
      vrJBi65Dq+XTKUBXCH6aTLDcmsRMtlBeWia0vEJTOkN7OsOQZW3Mjb+PSCHAR5MRikUfrU0l
      TrRtLPZou7BU8nG4eb3pXYKCK7i17CNXFvQ1rXWODf/ea3it+7eqHOfp06f58MMP6ezsRMqK
      JHR7e7tODdVGB+tdYPVzVFu9GsPX2CiroXLGtdO+GlgNVWCt53RUR7Ku69LS0oJhGPzyl7/k
      lVdeIZFI8OGHHzI0NEQ0Gq07C3i36/JJ0FxSe35iYoSOjgOaKrtfoCQc7n75Jc5bP6alhlDS
      ZVp84JQphQK8DFwJBSg9+zTR+3sr3N5WSe15Hjdu3aHvziiG/Eq/qbaepHDBSJBdjhESgqtu
      BqOztKpoXBuN2i4ELQ+jTm1ZIri84KfkCg4lygRNSdhaGylsb1z81rDuAVCthdLV1UUymcQ0
      zcqXffcuqVSK1tZWTNMkFAqtigw2W/Su63L48GEuX77M6dOnH/tNspdQWvQNbA6Vsqw9AOqJ
      Y6n+gXv37iGlZGJigvn5eZ599lktK9HW1qYNnOu6+P1+SqWSLsSn02m93svlMn6/n1wupwu+
      2Wx21Weq/oPHGVJKbly9iLH0Z1y6c5CzL/4TItHYo74soHJt6XSajz75BOvtdzjiuGtMpBCC
      sWQz7qnj/PDSVYLPnMdxHAqZjH5ONBolEAhgDQ5w6dpNIoWiVj1WnfNCCFZWVrSTYBgG8Xic
      MpDzsqRSKbh/GAE0NzeTdUyytqA76hELCKKWxxfzfkI+aA54tIccHCn46WiA4y0u5+L2uk7H
      lB3n4IVv77mO14bRjs/nY3Z2ltbWVmKxmM5Jx+NxyuUyw8PDhMNhMpkM7e3tdHR0AGv5/Oqi
      1SButcmOHz+uC2+/aVRQZbjU99LAzlA9n7lWu6ma3aY6opXR+OCDD3jjjTe0JPS1a9doamqi
      WCzyne98h5///Of09/dz6dIlvvWtb3H16lUtFjYwMMDZs2d5++23cV2XlZUVBgYGOHHiBIVC
      QX/+k3BfPc9jZf46x5IO9vwdZmenGdwHB4BK+/zpT35MMYy0JiMAACAASURBVNmCe7CPtlt3
      SdQ8L2oY9HuSYc8j+PLzBEIhjHJZO63FYpFsNltRib11h5OZLOGmJmKxGIVCgXQ6TWtra0VX
      6H6kCJBKpcjlcniRCOFQCnk/zaikQorFIldSLbSGPN6dNDAEJPwuzUGPVElwKWVwpMViOmvw
      dIdDZ8jZMOIseQb+0M4nf62Huu5J9YUsLi4SDoe1gVYnoM/n4+TJkwwMDHDu3Dksy+LatWu6
      cUaxKGzbxrIslpeXuXnzJktLS9y4cQMpJfl8noWFhQ29pMfdg6oH0zRpamoiHo+v6dL9TTsI
      d4tq8kK1528YBktLS9ppUQduoVDghz/8oWYB2bbN559/zre//W1ef/11gsEgk5OT2LbN3Nwc
      3//+9wmFQszPz/Otb32L119/nWvXriGl5LXXXuPll1/m+eef586dO2tSI2qS2OOa4lTXfeT0
      t/nodi8j6Wfo6x98xFe1WuMqaxoIvw/z8BA/CQW4jeSG5+rC7rCAhTMnEaaJUdU577outm2v
      ahq0lpYJU4ncpJR6bypNJ8uytBOgUosF6ZEpW/h8Pm2rTNNiLi9IBCWH4yW+caDAKweKDCVc
      pnMmpmnQEoIv5gM81W7TFXbYzKaHZY5sJr3xk3aADSMAKeWGRUjXdTVXurW1lc7OTiYnJxkd
      HcWyLKanp3Ech7a2NmZnZ3XH79LSEhcvXiSRSKwrU2CaJisrK2SzWbq7ux/bTVQPamg4oKWC
      q/P+jZTY9qCG3KuwXc2v7unpYWJigq6uLgqFAslkklAoxPe+9z3+6q/+ShfZAa36mUwmdSrn
      /PnzeJ5HsVgkk8nwzjvvAJXw3rZtfvKTn9Da2kogEKg7J1sZDrVPHidnZmxshD/7t/+KY0cP
      8fzL3+K3f/+/B/YHpdV1XVzX5ae//hCrrRUAYRhY33yVD+cXMEyTm7eH+a2Zea6FglgtzbC8
      XHmeECwvL2txQN1XUi7Tu7S86nOqyQUq0qutgbRbPkbLAaDi8BbK8MVyjJJn8I2+r3oEpJRE
      LJfnO79y8AquyWjax5HmjemkQgjifpfp6bvIgb09gDc8ANRpWa9AplDNdS6Xy7S3t+tNoCKB
      ubk5+vv7dWdmIpHg/PnzLC8v65NUvYcQlSHd8/Pzujmnt7f3iQinFVReWeX7Fc9/P2yuxxGG
      YRAKhfT0tampKeLxOIFAgIGBAWZnZ0kmk/pwDQQCvPrqq/zyl7/k937v9/D7/SwtLdHW1sbo
      6Chf+9rXuHXr1ioGUSAQ4KmnniIWi5FKpcjn8xSLRZ599lkWFxe5efPmmtqDmmetyBKPC6SU
      3Lxxjd7+QzQl2mhubq5ba3mUuHLjBlNCYlZ9r1JKgq1JAErPnOcvR0ZZWV4hef8eqKZA13VJ
      JCrJIjWu1fT5uHX0EAcvfgGgU7PK88/lcvj9fj0TRcrKNEBLCIqOQcER3F0wKbkmJ+LLBEyJ
      KSIbNhNfaC/xzmSInGtwrnU1O6g6rel5HmHLI3fjbcrPvLKntsL8kz/5k3+2Hu3N8zxu3LhB
      T0/Phm9STfFU/1f/+Xw+3YG5qqutUGBycpLe3l7N6Z6ZmeHu3bta6VFKSWtr62OrXb8RbNvG
      7/fr0PFxMhD7EdUdu+3t7auaDFX9KhAIsLS0REdHh9byt22bEydO8P7773Pt2jUGBwc5cuQI
      S0tLWprcsiwSiQQXL17k9u3beiLY+Pg4169fByrMNqUiCl95j6pBTWk3PQ4QQtDbN8DK8jLP
      Pf+y7oquV1x/FMjmcrz16UVkfP1ahGGalIIB7Fyess/C7/frvL9KTzuOQ7FYxHVdQsEgzZeu
      0reSwrjvzOZyOUKhEIFAANd1KRaLFQ0z22a5VCIgKkKLdt7jsm1xtM3jSKKMWy7VZfHVfneW
      ITENyWQKYn5B1P9Vfr9eE2GULOP009Hdu2f3QUtBKNRKQty+fZsjR47saW7aMAzGxsY4cOAA
      tm2zvLzMysoKvb29tLS0MDY2BkB7e7ueqPQkQSl0PomzeR8FVGFXpYBqtYGUF66iLhVxKg/d
      cRxCoRArKyvE43EdoSkDoQ4Oy7JIJpMIIVhYWKCpqUkbB0A3TsLqVJDq69hP9MnNsJ+7mIvF
      Iv/yrb+k2JZc9zmGYZDL5bCzWWSxREt/n3YS1H01TZOA308hkyU8Msp3RyYopNOEw2HtvPr9
      fh09FAoFbMfhRrREuNnGmo5jWD4GJHxgZvmd04v4jErxP18WxEImssp21fsuXSn4eNrCZ1YO
      gCMJB0N8tX6ns4IrSwESAY9TyTJ/PtXNH/+3/xPR2N4U4uumgFThbGVlRS/w3S6E6pDGMAxs
      22ZxcZHFxUX6+vro6empULbGxpiZmeH8+fPAk1cUNU2TaDT6WBmD/Q4hBOFwWBf1qlH9syrg
      VUPdh9nZWcrlMtPT0ySTyQot8D7jwzAM5ubmiEQiJBIJnWpyXZdYLFY3PVptQB8Xz78a+9Hw
      K1iWxbmBQT5YmsMIBOo+x/M8IpEI0WiU+Ws3VmUn1B4UQuB8eZUT41McdT38QlC6L7qoivfK
      /nieR97v41rA5unBDK0hh4mYjQdcnGhiqD3PR9N+EgGH+UKEeECSXhT0Rsu0hjwiPjDr8PhN
      IYkHBR1hh7Ir+NU9P00Bj5IjKLrQHpa81FXENAXXFizONS0yMXyNY2ef3ZN7tO4B4DgON2/e
      5OTJk3tGPap+DxV6nTlzRp/KX3zxBf39/Vy4cEGP1XvSEAgEGt29DwCbDYRXqKaKKuM8OTnJ
      gQMHtOxGOp1menqazs5OfQgoZoj6jGKxSGdn56oB8uo6qgcJ7Ze0yX5FNUvK8zxKpZIWPtzo
      e3v61CnG3/1bpjwPcf+Azd6bxh+PI50y9koap2zjOQ7Bpqa6joHnuIjZOY46LgkhcO+noutK
      igjBXS/H66fm8InK/e2PVZyJwZML+l7PFSyWSoLBeJm43+Ve3sdUziJVlBxvKTOe9eETlTnA
      6bJJriyYL1p0h22SEeiMuCwXBVE/+Izq65CcbSvz5QJc/8UP6Ow/QiKR2PXaWpUCUieelBK/
      38+1a9c4deoUtm3v2otRnlZ197BlWaTTaaampnQBub29/YnUCFJeaiAQaHj/ewi1WZWAW73H
      1tMIUky17u7uVYqiKn87MTGhCQjj4+McOnRIN5KZprlqep0aPJ9Op4nH4/pnIQRNTU1YltW4
      76yuL6rv23EcLn75MR/e/BUeLv/k2/8Fzc0t635fxWKRn777LiHT5LLhYfr9pMcnCESj2JkM
      npTEurtQ3Ephmvrfa+B52CNjfP3GbQZYLfxXi2tugaPHZmgObExIsT2DD2eCvNJdgPtef1ka
      XF/y0xxwGcv46Im5tAQqxd3hFZPmgE1HZHVBuxZCCCSCz+d8zCSe4w/+8X+16zWlI4DajaKi
      gL1uPNCc2/u9AWNjY5w4cUILez2pxj8QCOixmg3sDRQ9z/M8CoXCGjKC+vd6FGLl1KiGsdp1
      Xi6XKRQKWitoaWkJgHg8TiQS0YV8xdSYmpqio6ODe/fuEQ6HcV2Xjo6O39gooNqhzGQzZDIZ
      otEoE5MT+H2V3HosGuXtz/6Gm+UryGjlQHj/8/f53Ve/u+qeVB8c6XSamwtzhEplVrBxygUM
      xyTWcwB/c20r2CYwDPxDB3lvJUXvvVnWu0tCCMqWTZN/86yE3/A42lzm76ZCdEVcjjbb+IXk
      bGulONwbc/Vc4KlCgJaAzaeLMZ4ySnSE1qeETtoJFpov0PT8QaLG3pAKLFhr/E3T5N69e5TL
      5bqzV3eCeumcqakpjh49uooK+iRBcdKVVEADDwa2bdelCW9k/FWTot/vX5PGAXREWiwWKRQK
      +v9qP5RKJUzTZGpqSlMJ+/v7MQyDAwcO6FTGenIV+xW131k+nyMcjuz4/SYnx3n3g7e5WbqB
      I8pYno9ywAZPUJ5yCXb4Ie4hrfs1k0WTC889i+M4ZLNZnatXh/1HH39MpmwjwiHKPd0wegsZ
      G8e+F0F6XsXb3wHsZDP5qRkiG9i6JS/K7UyGY02FTd+vM1Rm0ldJB3407acjUpF++HDaj2kI
      OsIuR5odfjgSJ3lgkKe+foZCKMqtS3/GId/0moNo1Ouh9Zv/Ncf6BvfUoVh1AEClIca2bTKZ
      DM8+++yaotlOUb2oLMtiYmJiDYviSYLSEWk0dj14KGZPsVgZtKEMxkbNg6Zpsri4qHndtVC0
      0WAwSDKZ1O9XKBQqWjKFArZt09nZqWVRQqEQtm3rGQSu62oK5eMAZWSllCwuzjM+/Bky/UtS
      7nGmF8p8+3f+Hi0tSTzPI5vNYFlfzaIulUoU8nkc18Hn87GyvMDi7G2s/K+IlFfwYkGEAS5l
      jPvmzWwWOKIMaYEZE+BBeaYyhvPdi+8wNjbOH37nj0gkEtweucv0zAyTy8sUuzowky0UV1Lk
      5sfxHwQvnGZl+A7Nh4+sn+7ZAKGOdj4Lj/By0a47C2DGcxk9fwb/bIFjbH4ACCFwpMHRFpuC
      I5jLm3w6FyBrS74zaLNcFPx62s9Qm5/X/5N/RDLZSrlc5i+vfEqvO0PQ/OoaRp1Our7zT2nr
      PLDntsRSYVYgECCVSjExMUE4HKazs1O3PG/3Q2snjCkIITBNk2KxyMLCAufOnXsiC71QMTCN
      Yu+Dh+d5qyZxWZal6ZyWZek0Zu1adF2XtrY2JiYm6Ovrq+voVNcXFNSUNpXOU2yT7u5uxsfH
      6evr04eA6m95HA4Az/NYXFzg5pX3cQujWN48A23LhLoFU3O/Yt4bwLZtlhYXuPH5nxNmmJIX
      oixbEMLEYoWAWMRnCWzHIBay6Y+6+KKwtFw/p221GZRnXTzXA8fEbBaYhyV//v7/i+d4FD2T
      dy5+zNzUFD1d3Uw4NsHODjL3xsnOj0M4RWDQQJoSX6tJfnqYWLEPax11gY1ghkKMnD3FwK8/
      obdOIsiVEuHzMWs0I8TMhs6FKwUfzwRJBl0MJBFLMhiX9EQdbi5b+AyJZZr0xjxGW04SClXS
      hZe/+Iwz9gcEqmYGlDyD0uDvPBDjD2Cp9MulS5coFoucPn16FfVzJx+qXldd4VdppWw2i+d5
      nDhxAlh9WDwpcg+qiPg4bPzHGZ7nMT09rbvV/X4/w8PDtLe3azkS27Y5cuSINvBKekM5Po7j
      bCsCreewFItFmpqaaGpqYmxsjK6uLn09j4MT4DgOH3/4NiszF3lmcAqrRXXyVyKpA+0W6dxd
      rr3/PxOLCE70uPed7BxSLgAbO92HewXvX3IodK4lHVpJA7foQQ4QIPyQj2QwwgKyFnN+g9Az
      51kEwlJip9PkVkbxH8qhpcykQBoSM+FQXFoieuDAqs9QEWFhbp5QW2vdixVC4CwvE1unCjBs
      mQSTLXRPLH4lH4HBu3MJnm9JEfNV1kWuLPi7qRBfO1AkZn21rqSU+E3B6dZKqnK+5OfegTf5
      7vd+H9u2+cWP/i+Ss+/SHrFXXcFouZ3D519a/8vdJax8Ps/09DRDQ0NEIhHdKr2bPFNtQU0J
      xSWTSYaGhjRVTjVYVEtHPAkHgWEYT2T38n6DSrMptk4+nycQCGh533K5zOJiZcNWD2hfWVlB
      Skk4HCa2jYaa6nWqUL1mlcMzPj5Ob28vTU1N+9r4V/PcpVvkwtAUhrG2DiClpLfTx41RlyO9
      95VOXbDLglAAxP3GpaItKNmSRGz1d9QUERwPuXxWtsD31ecLIciP2PhCFr4uA3mfMWPEASRm
      i8PSyOeE5rvxByOUCjmKYhizTeJ5q4f3SCnBJ3EKuVXvX1xapri0jFMu4wuHcKdniB1Yqy0m
      pcRIVxhEtQeEC5QQOMUSCbOERCCQjGQDXO17lZvzkxxdGSbjBZjztVFsixNaucKrrYurrqUa
      aaOZr33jt/A8jy8+fp/OxffpiaxNLeXMBLFY00a3cVewAFpbW4lEInr8404913rcXeX5h0Ih
      TfFcL+2jNtjjXBMwDKMxw/chQXnzlmVx69Yt4vE4PT09uK6r6baxWIzbt29jWZZWc2xqaiIc
      DjM6Okp3d/e205DVa1yleWzb1umkQCCgZQP28wGgDqxyuUw5ewtjAwJNviBpSxgoWuPVu1Aq
      u3ieoDMpCPglU3MeM4twpE8w1CMwq7bAyR74bEqCb/X3IQww4wLhEyDXMrh8BwuUnWFKWYnj
      upgBE7GOb+WlDCLd3V/9XC6Tn5snPjiAeb8Wt3j7DrnpGSKdHRRTKfyRCIbPh2fbxLI54jX3
      dsp1+SCZoHTmFP5YlC8CR7mzuMQftNxl0QngTyTwdXZy1z2P6fNhARHPI/vpsH6fnGMy6nbj
      +mOQnSMmcmTzeQRw8/o1xKV/w4FohrowzAe6jqxIJKKN7q6bCmper5gW6XSaY8eOPVGCbvUg
      REUzvFH4ffBQdEDXdfn/2Xuz50jy697vk5mVte9YC/vejUZvM9PdM5yeGQ45HO4iRUoUJYUk
      21e+tq/tkP1w3/xyn/wH+MFLOO51hCN8FVe6vLwSRY4ocshZOHvP9DaNtRv7XkCh9iWzMtMP
      hcwuFKqwdAMN9Ki+ER1ooKoys3I553fO+Z7viUQidHZ2omka09PTOJ1OcrkckUiEcDhcGgW4
      rchpruCLxSJtbW1WCvJRYD6Y6XSalZUVBgYGrDqXOUDpNN4H5spf13UWF2aYH/0pg82zNd+/
      tG4wt2rQu51ZSWYgk9N58WIpoppZNthKClw9J6LrsBzVuXsfLg7CVhLuThskBB3BvXOmlWEY
      uPsdqDGNzGQBQQRXv32XE0AqRQWOoI3suIK70b4jGrMcuCqTT6fJrEcJ9nYTn54lONCHuN3M
      ZxgGob5ecpsxNj4fxdkQJre+geSwU4htcT2RIioI6EBAEPnUJjJzaQR3Z7sVuEgjV9lKJLk/
      s4RXVDAUFVwuxO0GMoD81hZn7ZsUdYExYxDf5d/nyoVnkbap7usri/Dzf8ON//S/8cz3/0di
      zc9iZN+umnwSxIMMqHx02CrTNY+DaqHx5OQkHR0dBzL+T2vqp5zq9zTkfJ92mA+93W63qJmi
      KPLgwQOre9fpdDI9PU0kEqm5HYfDwdbWFk1NTZaI2377Na+tKSS3tLREJBJhcHAQKEWAbrf7
      1Bt/TdO49fHPcSu/ZaRdqZnDN4CJeXjlWQlZgs8mYHZF55XLD6OB3raH2xYEaG8WebCk8dtP
      Jdobi0zFJWJdbhB3P98GBrawiBQU0eI6+bki9ubaq3zBLlQ3/oAYUCjENwl29ZKYnUNTCpbx
      N48PQcDV2IC7qbF0vICayeLv6uS2y4UQDGAUNXL3H+C78gwuj2en0wKcAT8faz20ahtI23Li
      5feG3etloeDBJ+uEX/ozhkfO77hvwo0t3FaDeLvOYRg6nsQ4YpUhgIou4m7uOtb76EjdS3nu
      UBBKyowul4tgMFhTL6W8bf5pgbmSNKf/RKNRbDYb/f39J31oX3iYVMVisYjD4aBQKFirWbMf
      wOfzWakeRVFwOBxV7y9TDz6fz+8QiasF80E0Rfy2trZwOp1W05dZk7DZjnfV9qgor1NMjH1K
      A78mGN75nQVBYDNh4HKAyyGQTGk0BErEzdEZiCV0fviqtM/zanD9oojNBrGkSGJeAmHv51sQ
      wRYWEew6ynoRDHD2yFX287DZrzJ1J3pB2Ygie8/jKjagpDNoxSLS9vUor99YPwGbx10y7GcG
      rfflslmkGmwiAyg+91XmikX0bBbneoagy000l8VobEC02xnteY0Hy8v8i7bd7B3Zbsc//FUG
      z19Fstko5lOw7QAyRYlpvQPN3Yoj3MnFL//+nuftcXHkDsCEKIosLCwQCASsIpypx70rxHuK
      YGrHlBue/v5+i/tdz/0fL0wlR0VRrPy/KeMwPDzM6uoqGxsbOBwO7HY7DQ0NO2ic5SgUClbn
      rjnHAmrfkx6PB1EUrYE+Ho+HUCiEx1NqlDJfO40o5/gvLc6hrP2ESNNuhze3qrO6WToPqSyk
      syIuu8bCKlwdkRjq2s/4lyBJoOnw3jRoEYmaLbaVn/OKSC6R3IPdEZmhGQjSw0FKu17XQbZ7
      S4ybgJ/mCyNsTEwi5QrIQT/evt599y8AiYUFvJFWS2OoGgyAXJ5v9gww1N+PzWYrTZt75y02
      PG4cDQ0MBxqqkgxsNhsvvf790kSxXA7d5gGyZIoicw1f4+Jrf2oNnjnuOtKx3a0my2J+fp5s
      NothlEZADg0N4XK5jqQeYNL50ul0TVXGo4bZCNTX12exmdxud83JZnUcLcyeFbvdTjabtTpz
      TWfc0tJiGSjTWewFs+M3kUgQCoWs6K5SWdSM+Mx7zjBKsyrMaW6nGabxV1WVO5+9iSP7Jj3N
      OxkngiCQyRksrQu8cF7YZvaYaQ0bibTBgyWDlvDB9/tgSWVUch3aymhJAyMrkJtRcXZtr94l
      ocQS2sMW6mkDb7hUqDA0HVZWef3cBR48eEAsHDiQ4yoqCkZeQfbu0/1sGKhrUdqffxG73U6h
      UOAnv/onkrqG4XYiSjZi2dSexruUJcmh2vyk1BgLnX/EpVe+g9PpOnbDb+LYHICu63R2dtLZ
      2YmqqlZX5AcffMDg4KDVXXlYSJJkteab84QXFxeJRCKcOXPmWAvN5d2j5kMF1dlPdRwfRFEk
      n8/v0N43oarqgVk95Yy3xsZGq6mrPJVpSpeXP5Bmg6Tb7T71EV+58f/ot/8XQ43jOJp2v29i
      VmcjAc9bxv/h57f/hyQe/B4XBIF4TsSwH/65kHwCYgD0jEF2SkXL6Hgv2RFtIoLbQEvoCL7t
      625gOQVjy4X7QjMAulLgSlc3L73wApMry9iCAeKjEwSHh6qIMj885sx6FHdL857HpxcUAtkc
      37x+nVAoBIBaLBLDQGhpsgatRwWD9WiUthp1KMMw+PBXP+WMscgDo4vnXvr2Y8luPAqONV41
      H0RzlaTrOhcvXmRiYgJd12lqKt2JB3UEoigyPz9vrbr7+krzMbu7u0mlUty+fZuzZ88e24os
      lUqRyWQsxkkdTw4mcwceaizlcrld7znIvWQydcqNvMfjIZ1OW7llU4MGwOl0kslkyOfz1nE8
      DX0epvHPpFPc+uQX9IfHcWznmsvTXUVNYGHdYKibHdTNnRAo2X8BaprQnfv22g1I7qZ+7gsb
      2Dsk1CUdR5sNQwNlScXZJSJ6BbKTCu4BO7oCxkYIw5lBQCbUcdHSAhIVlb7hbgC0QgFlK44s
      iiWOf7V7xDBIL68gOxzIvuryICYC6Sx//q1vW9P8rF4QjIcBimEgaBriHgtDURR5/Yd/wczk
      c4y0dNSUJTlOPPGEpdvtZmBgAMMwGB0d5cKFCwdetZsiXIODgzu6jAVBIBAI4HQ6mZqaYmRk
      5MgNtN1u59NPP+XcuXO7tq0oiiX6VsfxoVAoWHx+M99+mIjPNHrmNLZUKrVjYLsoipbyZ3kT
      lzlA3JR4AJ5IfnYvmEJ2tWAaf13XufPJTzgTuoFsg4IKK1GDvArprI6mi4BGpFEg4Kn9Xfwe
      sNkMYkmB8AH7klxOEVsCivDQZxzwdOmKjs0ngd1AFARsQRF1S8cWsiGPlNJDInZazlzC5nIj
      iCLCtvfSNY0ht5eO7RkPL5y/wE/ffZuB3j42ihpaUcVIZ5EKBfTGMJIsszk+ia+lGUdDeM9F
      hKEWGWhpsdh+pgPIZDPoNtla/SuJJD8YuUhjY2OZI04TCD5stiilM52cvfDcwU7KMeCJOwDD
      MPB6vdbgjVwuhyzL+3+QkgEwH9BqnXwul4tQKMT09DT9/f0HMg5m+qaawzCjFkVRLENhjour
      PK5CoYDdbsfpdNb7AI4Y5qAQs8HKLLTa7fYDXWNzxW8ab7OIa9ZwTMdtDntxOBy7rp/L5bIG
      z5sdx3td42o6WEeJu3duc/mZZ3ctOsqZPvlcjo9++39wLjKNbAOlKHBnSsfjgoaAQWeLiEMG
      myRxkFW9JMJBe+Y0HRw2iY4thRUjRLc4QGNLA5lMBqfNyf3UBJvSGoKjch45UACb00YhWsTW
      WLrWxaQOGRGbV6CwqSJ4wO8awRHYnduXthJ8+bXXrWc73NCA0+Hk5fMXWF9fL1ExB8IohQL/
      8bNPcDQ3ITuduJoa900fugsFLj17Fdg55dDr9qApBWyAoet0SzJ9PT2lc6FpzE6NMv6L/53r
      /9X/Sih8iELKMePEKAu6ruN0Osnn8wd2ALYyOlc1aJpGe3s7N2/etES7KtMEJsxtxGIxstks
      fr/fGh4OpYtbLBaZnJzEZrNZ8r57wRQlCwaDlpGp42hgGMYOWW1TkbPyPeWpDXOFbjpl01GX
      1248Ho91rVwul8W+KG8aM2FKl+wnH2F2125Go8TWo5y9eOHIo8Pnrlyt+vdcLsv9qUk2Vscx
      clMMty1jl0v3+8ScRluTSPuuGsDBUrCtDQIzywaNB5Dc13T41e0uBgaG+cMXvoQsy6RSKdq3
      dXoymQxv/PYXjCbvknOnSkVexcC24KY71Es0s0rcv/nw8PICcquIulaKDHTVILUxQ7C3b9e+
      XYJoOWjDMOjq6ODPvvVtEokEly5exDAMPrh1kw9H72FrakTP5TGyWYrpdIm+tH3tdU3H0DRE
      u4wgSeiJJK+fv0TA79/V57G+sYHkdpWufTzOpTMjVlRpGAZNkU4eBNtIp5J1B2DC4/GwvLxs
      TVbKZrOYncmGYbC8vIzH4yEcDqOqKmNjY9ZA+a6urqqrdlOIbWFhgf7+fkzBr3LNd5PDvbS0
      RDgcxm63s7GxQbFYJBQKWQ/9nTt3uHz5snWxy/PQe0FV1VNLB3waIYoiLpfLohNDdb0aE6bh
      N3n5Jv3YvAfMQe9Op3OHkTcf2EqpBxMHNeKGYfDJm78hvJlgQwL9/MgTSQ9qmsbH7/w1ua3P
      aAnqdPfsfD1fMAj5D5bDrwavC3KFsqprBXIFgbUtiaagxucLbfz5X/zXBAIBAD777DOLPGGz
      2fD5fPzBd/6QryVf5423f05c2aI90EFLR4Rr167xcohWAgAAIABJREFUxi/f4O37b0KDgV40
      EN2lwrAYKF1/CREtZ6v6TdSiSjQapbW11bqmXZ2dGB0d/O0/vsFabJOkViTS2EjEH6KjsRHv
      +UsUFIVcLkc6nyOvFgn43XhcLuaj60xHo8RjMVpebaza5Nfd2cnA7Ayr8SRfHxymt6fH2jdA
      IBjia//l/3LqSAMnaqXcbjeBQIA7d+7skpAWBIGGhgZisRj37t1DlmUGBwcJh8NMT08zPz9P
      d3f3LoOsqirnzp1jbGyM5uZmJicnSSaTXLt2DU3TkCSJ9fV1MpkMHR0dBINBK2xeW1vD6/Va
      c0F9Ph+SJB2aWWQODHc6nfVI4AhRbuTNQmx5Xr4SZr0AsFKH8NCol08EO0omVzabxZ1IMeD0
      kNYff5zqQaCqKrc/e4d2zy1cIZ37iztfT+cAJFz2R++7EcWSlEO2IOB2lCf1DWsf09EINH6V
      517uIb4VZ2ZqmvOXL/Dcc8/tMJwmbffW+E1Wt1b5qz/7n61MgCAIjJwb4e25X2//DrpecdwG
      IOqkV1bwtLTs4OwXwkH++rNPaLXJvP7cVZoaGy0mV4vXx+XBIbo7Ow+cqh2hVPdbW1/Hsb1o
      qITdbuf7r36FXC63a6ax2SR4GmuEJ+oATCZQS0uL9RCXr/AAawXfuX3BFEWhu7ubaDTK5OQk
      ra2tu3oARFEkl8tx//59IpEIXV1djI6O0t7eTjQatRqITMofQCQSYXFx0bpoJrf8URvVCoWC
      VahzuVynVhrgaUF5aiefz1MoFKyBQolEoupnTOdr9qSY3H673W5dj6M2zrqul8ThRImNfI7A
      peEj3X55J6thGMzNzdLS0sJ7v3uLAe/PCfgM3r+rc/VceV5f4NMxnRcvSQjCo8/fMAyDzmZY
      2YBIo8j4go+5FZVXL+fxugzWU2HyejM2yc37b76HspjGEAxa2lppa2/bcQ0Nw+C9z37Hb6Z/
      yR9c/ZMd10rXdd799B3E5ofyDYahIwgP9XYMwUBqT5FK3CB7p5WWZ649jORkGTEUZMMw+OuP
      PqDX7sAt2fjG17/Oq6+88kjf3Waz0V4mNFcJUxTQZPKUP+uxWAyf14vzFPYKnXieonw4tPl7
      OURRJJPJWG37UPKo4XAYr9dLPB5nbm6OoaEhK3dbLBYZGRlhcXERv79EWejo6CCbzRKJRHC7
      3buMu9nYs7lZyjtmMhlCodAjD6wxb3LTWDkcjrojOALk8/kdSpsmG8hsCHO73RQKBWT54bQq
      873lvx9X74ZhGKytrtKSKzDfEOCZM0NHtu1isciD+1P4A8HtgfbLtLW1M/3gPvbsm/ibS/dz
      2C/xwZ0i53pFGoMCyYxONG6Qzen4D0kzN4C1TYGcItEbKXJ/JUiBFghf5vq3r9GztMzk6Pt4
      fCEKMly42IWmawxeOsv7G+/i8nsIN4R3OFoz2v7VxBucDYxwcfiiVTf55a9+SXNLE2O5O+Dd
      rumIAoK621FrGR0j5ccZrNFTJAgQCvBAUfBubVEsFg9cb3xUVLunnE6HJUdx2nA6j6oMhmHQ
      39/PrVu3OHv2rMXEMFdyra2thEIhFhcXyWQydHd3W4W9vr4+KzJwu93WFKdqtQMzGllZWaGh
      ocEa/H0UjWXljsCMCOqpocPDrO+YTtTk8psOoFyIr/Ial+s3Hdd5N53+6tIym5tRNNvRyZxs
      bW0Rja7z9m/foK9pAdHmYWFNYKMtTLv/Pue6zCEtcKbbQBBE0jmRhoBBKgMOu4hSNI8T4mmJ
      rYyMx16gOWRQfkpMW5rJC9xbPsPdiSh+v4/FjQ06znyPxqYWJsbHicW2GL13j8bGfrxeH4sz
      C8S34gi6gdPt4vXf+ybtHe27dPsVReHvP/gpqk3hytmr1qpf0zRaIy3859G/RZOLaAkdJIPi
      lobNY9tl5PWYg8i5lxFrGHVD00AUUVJpconkicjOGIbBu2+/xfWXXyEQOOTA+ieAp8IBuN1u
      LlwotXQ3NDRYHZh2ux1d15Flmb6+PuLxOLlczio2HXb1HggE8Pv91hjBo+4qNgzDYqI4HA7c
      bne9WHwImLMWymFef7Nuo+u6lRIsT+c9qW7tjY0NZqenmc9nGLC1HlmaKZfLMXfn3/KV8ymC
      HgNRzHGpBwwjSuXXEoDWsMC9aY2ZZRGH3eDLz4jcntR48ZLE6qZI3PYd8HhYWPiQ5tAMUDL8
      C1EbsWwDOb2VfMFganqV9tYw165/G4/Hi9/vw253EAgEWVtb45lnn2Xy83Em3rpLu6eZeDGJ
      JEosFTMsNs3R/mc/sK6LIAioqspPf/MTZo0pBCc8WH5ApKWN9z54j7HVz1laW0Kzq0gOqcT2
      yeg4mhyoG7ufRTGkkF1f3zEBzEoRFYvIK2ukRQEQaG1utuqMT3Lhlc1maW5ufuIdvgfFU2F9
      zIvW1dXF/Pw8mUyGaDTKlStXrJWepmn4fD7m5+fx+Xy7DMVBUM4UOm6YYnLB4OlbFTxNMHOv
      lXgSK/5qx7KyvMxrkov3Gpq49vLLRxbpBYMBvG4bYV9lf0H19we88KUL0vaEr5J0s8Mu8GDR
      4PZ8G5efCzI++gm5nMTsqp2OJoXPZxw4Iz9EMFZYmNqgEMvRHGlldjHK64EgLS0tljNbXl7m
      /bffo7O1HX0mS6e3FQCPXEqzuWwOlITK3/3bv6XjXA9D588SjUbJ5XLMrE5jhAyEtMSmsEE6
      k2ZxfYHl5BKOIREDuzXtUfSXlEi1jI5RlBDKLrXoAC3zUOvJMAyKiST+dJaOcAPPf+NbrK+t
      8fGNG4wMDDzx9GsumyWXSXPl2gtPbJ+HxVPhAEzY7XYGBweRJIlkMrnrYoqiSDAYtDj7p33g
      vBlp1FNBj47yhq7Kv53EeS2mM0iCSNvQAC2tLUd2DA6HE1vwOgX1ZzgOmMYWBGOH6sGzZ0Xu
      3Ddo6zxLY2MTop5EU1XWtVeZGl0kr+h0h3Msr24RamhgObOMw+7jr/6nPyWbzRKLxWhsbASg
      ra0Nr+HEmM1iE6WK/QrEsnFyagExJfD5bz9j7MO7eHFRaIBvXPkW4/NjXPvSC3R3dSNJEj/+
      /h/z//z6/2ZVWNzFMlVWNKSQgFBBotFT4GwqHY+RSHLG7aWzb5Deri5LubW5qYmRkZEToV/G
      YptsrK/S2NzyxPd9UBzYAVQ2xRw1yvWC9kq9mKkZ2/Z0nXLouk5raytzc3Pk83mr6cQsNJvM
      ntMCs/BVHyLzeDDrAafhHAq6TlQt0D40eGRGJ5VKoSgKidUP6d1f0bgmJNGgIeiExk4km0y4
      9SLpqbdwury8+L2/IJ/Pkkgk6O4eYHpymrQ3xfWXruP1encw7QzDQJZlvI0BpOVSqi2RS6Gj
      47Q5WEqu4bI78TlLaQ+Hbifo8IMBBZ/EpZHLnD97wSrK6rqOWlQppjQMT2kwvAktq4No4GjZ
      PRvA0AQEWUbL52nOFvjmt75b9V44qfuivaOT9o7OHX9LxONksxkibe01PvVkcSAHUK55cdQG
      1ORgT05OWimYzs5OgsGgtUKuhMmnrXYskiTR39/P7Owsd+/eBUo3bEtLC6qqEg6HcTqdp0bM
      TVGUekH4MXGazt3w1Stsdq8T2YMyeFiYXe2CIKAbMLdio6e1iOlfMnmQbaWFs6bDVkpkMSoz
      0F4gVNG0vJkJcf3lCwiCYM1G9gdCeL1evF4vwWCYsc9HWbs9z7OvPUdndxeAVWw39YUSiQQb
      y2uEVS8ziUUaXEEkQSKWTzDQ0F31uS2g0H/+rNWdbcIwDO7PTRGT13cYfwAtYWBrqDK2UxfQ
      8wZGUcOZSfHsyAWAU7MQqIXRD3+JUSwQafuLkz4U4BAOwPx5HJHA/Pw8fr+ftrY28vk8n332
      maX2WU11UdM0BgYGGB8f59y5c7scgWEY9Pb2WiuwbDZLNptlY2ODubk5q6HsJFgBlTALwicp
      LFbH0cHj8eDu6TnSprJYLEZLSwvOwDDTKzkahv6Siel/ZKhpAkk0GFvpxhBDeDwuthIqbV3n
      WF+aYOnufS72JultVbebqcBgWy1zm159/sJlNtaj3Pv8HoNDg/zyb3+OGFVpcTUw+8EETa3N
      NDU3kYjHmRidINzYgD/g4+7vblHYyjGvJTnb2I9Ylrep9VwZOjwYnaK7uxubd6fpaQw24Sy4
      yVYMR7e32igsqzjb5dI8AEAvGBRmDQIN55DdLjLJFEWt+FTIsj/76vcRDiGrfdw4dA3gqB2A
      IAjkcjk6OjqsKU/PP/88uVyOtbU1uru7dxl4cyXicDgoFotVQ+3y/gK73Y7D4SAcLvGRR0dH
      aWpqOhVD6nVdR1XVU79yqePgeJzraFKGzTGWSzOzrN5/wC0RNlaWcWYj9F0J4Tj7fe7c/QVO
      YZ3hZ/+ItvbuHZ30/QNnees3/4jY1MvE6m/wySuklRCZvMCtD/8WnP2sLC/R2zfIxlqUglIo
      zVKIFvDaSqkbr+7kk1++j80tk1tO4pM8bGqLKLpKyBmgzdfMemZzh/HfCw5RRl8scuO9j/ny
      N76y47UbY5+QDaZ2f0gwMJTS9xJEAUM3yI3pBNqGCA0Oko9tMeT109vdc+pkFqrBccpkxPd1
      ANW0USqLbo8DwzDI5XJsbW1ZsgyapuFyuSy53soHampqypo3XK7rvt9+zIKr1+tldnaWrq6u
      U1ETMAXx6lHAFxsb0ShOpwuP11PzOufzee5PTbE+MYnDgP4iuBNx7EC7rYGcx8Amy3Q299DR
      +a/QtCKStHPweUnGxM93fu8PS/n5xACf3viIpblPaAjJ5LIJ7o+/xx/9yX+Dz+dDEARu3LjB
      rd98QpfjYcFSEAS8aRnS4JJLmj6yaEPVVKY358mqORo8ITJqDodkRzLVMWs4BEEQ2MrFaQr3
      WM18JlsvlUziJ0TCFdtpbxAQJBFlsZR60uMCjf1XCfR0o6XSvNAc4cXnnttXnfU0YXFhjoXZ
      ab708lf2f/Mxo6YDKJc6rcRRn+ienh5isdgOITZT2XN9fZ22tlIbeTab5cGDB/T09OD1eh9J
      qkHTNNra2piZmbHqGuUrh5OoDZhDzs2Rg3V88VAoFBj92RvQEOLl73235vscDgd6LM41XcYp
      SWCHcGMLoiBQ1HV+ujKHb3HRGl8pinvPBICSjk4o1IDT+RK6LjBy/gLPXXfgDwSsiH54eJjJ
      397ZZbwFQSCn5llOrZcWgwiIokBPqANJEInl4sSycRRNBQGUosJgYy+2SsrO9vE4bHbGbt2j
      u7fbkk0QRZG//PG/ZHF5kX/3zv9JzpVF2H4kDQwcXdL2sdhQlg1czU0Yuk7EEHjl+eefuoVT
      c0sE/ylpCqvpAPY7oUcZBSwvL1ddjYdCIWZnZ5mdnbV04Ht6evB4PI9lqBOJBLlcjgcPHqDr
      OplMxhrqPDQ0ZA35fpIwo4A6LfSLibmZGYIILCSTe75vc3OTbCaDreweMKdK2USRIV+Qvv7+
      mp/XNI3V1VVr0WQYBqlUirPDIyQS8dJ4SEWluYyaaBgG6VQaO9X5pbOJJbqD7Xhk164FV9gV
      JOwKWvn5tcwmhaKCbN85N8MwDOJGmvarfVx98dqOYTYmc6c90s6ff+kvuXP/FjdiH6I5dw6G
      NwwDe5tAbO5TfN5eLl0uDVJ5GnL/5bDb7XsO83mSeOQ+gKM64bquEw6Ha8oz9Pb2srm5SUdH
      h0UTfVzHEwwGkSQJWZbJ5/MMbDeJTE5OHrtWSC0Ui0WKxWI9AviCore/nzWXm4FtHn05DMMg
      m80yNztLdHUV18Iytsbq3PEzHh+jH33CpZde3DWQ/sH4BPH1dRyBEqECSs9p/7bDMA1PpS7P
      4vwCn735MUH77jkHi4kVOgMR3DbnntG2GTn47B7m40t47G66AqVjyGsKWpPES699jabmpqq5
      etMJ9HT1EPAFmPjFGHHnRtVzRVOMQCbIQF/fU2f8TxuqOoDHOaHlF2S/FI158/r9ftbW1vD5
      fLuMu6ZpVrfsUdYdzPDTpIQWCgWKxSIul2uHMzJX5U+iYGwyguo4HMy8tzmw5TRwwCshyzLt
      XSVOeDQaJRwOW70s98cnWLzxGXprE9l0mh6nu+Z2nJKN4OIK7/z6TWSXk+GREYLBIEuLi2gf
      3GDQ5ebB/BKJ7m78fv8OY1vJqFMVhbd/+Vvik+v4xN11iUQhhSGAV659PJXwyC6GmweY3JhB
      EAQUTcU70siZi8OEQqE9pTHMv7vdbpo9rcSNjaqjB4SMyDe+9E1rNOhpucZPI47cAVQ+fLUc
      gN1uZ3x83OL6h8PhEynImseXz+d3HYMkSVa6KZvNHnt9wBw9WdcHOhjKDX+5oBiwQzDutEDX
      dZYWF0kkEizPL9A7OMD83Bzjb73Dt1u7uDezSKdNpi0QqrkNQRDo9fhxbSRYTC2w8WCB+4KB
      wyZzwVuaY3zeJvPxBx/ywtdfr7mdYrHIu79+B2UqSUCqPow8VcjQ4K6eq84XC8iijWwxj1Ny
      IJcVojFKkcDU5iz+1hCvvvIdK+WxH9vNHP7z6nNfZe39FRKuTUsWAsAoQqsUobWptc6cOwJU
      tTTlWvyHxUFy2JIkMTY2hs/nIxKJIAilmbwnxcsXRZH5+Xm6urp2HEOlMXkSyOfzVnRSR3WY
      hl/TtFJOW1WtFJr5msPhOBXnUVEU3n/7Hb70SkkXyB8IMPrBR3TmFGYlibWVZZolO4uJLTpc
      HprcnpoLp4yq8OnKEltKHgy4GumgzVtjPGW+UPWeLRaLJBIJfvMPv8K+YeCWKqICTWUrl8TA
      IFfM45Sad7xuYKBoKov6BoPnhjjTOczGWpT12RWklI5PKEULEV8zm2qCa9942UqrHnS1Looi
      vd29/Pehv+LG3U+Yi86wklombaQYdo/wo+/92JrmVsfjoaYDMA35Ybm15VzkWgZdEATW19cZ
      GBg48Y5cQRBYW1ujvb19x0xgE6qq4nK5CAQCpNNpCoXCsR6POeHqaeA0nwRMw6+qqjV5rRpO
      A713a2uLRDyORmkRsby8zM//7u9pVop0tXdz/+4onaqG5HQjCgKr2TTjm1ECDgebuRxf7enf
      sRh7a36G13r6cUq2mk6iqOvMJOPYB7p3GEjDMJianOLm+zdo6mph4MIZ7v3mM9zsdAAr6Sgu
      2YldlOlxdyAKZZO2NIXx2DTPf+06r179jjWmc+jsEPrLOjMPprn38xv45ZLjDfQ10tnVadmR
      g97T5vv9fj9fvf5a6XsVi/zTm//EQO8ALpfrqWP+nFbsmWswHzbzZFfeULU+sx90Xbfykyft
      AKCUkz1z5oxFCS03HqZUg91ut+bL1ho0Xw5Te+iwN6lZj9hvAP0/V5gLjFwut+e9c1LFfBOG
      YZSUa1Mpbnz4IU5FZTOTpjEUIj47j00QGXH7K1LcAZJKAUXTWEztZAutppIMhRtxbqdaqj1n
      9xNbFAXInz/DpWef2fHajRs3uPPxTV54+UWGhs+wubHJA2l3vanF28hqKkpPqGPHPhJCFk9/
      kO999w/oH+jflVozDIOBoUGyqQxL7z0AHTp6e6rajoOgMn0nSRLf3db6qePocCCXbOZXy3Ot
      j7PCMvnup8H4m0bfNLjm0BgotfX7/f4dlK3DNJyU56cPg0KhcCpkKk4jTE35akV5QRCQZRm3
      243T6XziUVR0fZ2NaBQoXfu2tjZyd0Y509uLfXGFlzQJcXGFdq8Pm1i9f9ZndzC1GWUo3Ljj
      HhjbjNIbDO+5/3mvk8ZvfY2z54atxZuZGrt48SL/xX/7Lzh3YaRkXG0SUpuLeWVtx36KmkZK
      ye7YrqZrBPob+co3X6Ovv69qXcU02BeevYTvbCPRQoyBwYEjnbdcN/5Hj0NVG8vTO48Lcy7v
      ScoxmOkfr9dr5Y+z2aw1MtIcOAMP+x5UVT1241wsFlEUpc4I2gNmCsRms1liaaao3knIQeu6
      zuidOwwMnbF+n5mYwO90Ehgawn17FK8s0+sP0lKrNiHAR0vzRHx+eioKwaIooBuGNfy82j3Y
      XSjy4N338eUVYrIEYmkk4jPXru2YO2F2w3/9u9/k7d+8RXIsRsBeGqK0mFrlXFP/ju1LooSa
      V/ZtVDRnM7zw1evYPA5LkrmO04tjp5uIokgqlbIonpIksbS0RCAQOPEIwDAMIpEIn3/+OfF4
      nPn5eQBefPFFq0u4WCyiqqpVdDpoDeBxNJNMR2S32+urngqY8gEmU6oyvXBSswAePHjA+maM
      gW2hr3w+z+d3P+flr7yKaLPxlpJBTsv0BcO8NT9Nm8/PxaZWxO375JNMAkdBQRZt9AbDVg1u
      JZXE63AwFGrk/tYmmqYRy+do8/l3RQn9bh99hoHgdqAbBtPZNMHzF6wJeeY5iUajiKLIpzc+
      JRfPYBdtrKaiaLpGu79lR97fMAxiSoIXnn31QLLl5vW5/sr1+r27D1RVRVGUE2k8NSH963/9
      r//NcV0oU+Y5Ho+Tz+dxOp1MTU1Zhve03CDBYJBsNktnZyeLi4u0tbVZq/B8Po+maVY/QD6f
      33+DFXiUHKjpLOtUt90w0w2SJFkphvJ/T/p8GYZBMBgklUoRbmjA4/Fgt9u5cPkyHq+XeDzO
      l155mb959y08osSLkQ4WElu47Q4cosSnSoaR3/s2Wa+blUScftlJRlX5aGme1UyalWyaT9eW
      udjcwlIqyfXOHmbjW3jsdqsmUH5uzJ9TyS2WMinaOzutcwWl6NusZ0387g4NriD3N+eIBJrx
      2XcaI0VXCVxs5dyFkQPXVeoF2v1hGAZ3bt/i5hv/Dpu3iXBj8/4fOgYcawRgFnt1XScQCLCx
      sWENbT/p1b8JM43Q2NhoGVtBEHYZ+nw+f6gV/VGopuZyOWRZPlVc9tOA02RczDpPoVBgaWmJ
      565cAR7WI2RZpr2jg08+/phu2cmCaLCZ3MQp24jnczS63NiMkkrkmZER/KEQ02++y3oqyctd
      vdbKfS2bYSy6RkErklIKXGxu5aPlBV7Zfk81PBdu5u2lVX76H/6G7/zgBwRDpTSQKbR4+85t
      bLKMKIh4HW58Dg+UbUrRVBKOPK+/+vKpkS74okAQBJ559jnsRp78MTML98KxRgCSJDE/P084
      HLYGrh9UvfMkUM4wqWThlBfAFUWhUCjgdD5sj5dlGafTuavoW74ie5TjcTgcdQdwSlFe5B8f
      HWXz9ueMjo5hyDYcTieqquJwOFheWiKZTDKULZJVCwx89csUZBv+RIbRjTUMRSXhstPU3MzK
      ygqffvwxA6EGws6H96BHlukOhAg7XYScLiRRRNN14kqBkKO6xLAAzCXiXHjtVQLB4I7BQ7qu
      093dzcT9SZyKTLqYxSU5sIkP14TJxiJf+e7XCGyLxtVx9GiKdNLU3Hpi5/dYKzSapnHu3DmW
      l5eZnJwklUqd+i7XWlPIoGTEx8fHWV1dZWlpifX1das2YLPZcDgcO8LkR6XAmTjKonsdR4ty
      Ntz42Bj/8J9+SpcvwJWXr3Ph4kWCwSA+X6lJq6Ozk82VFUJOJ0GtFNlFNzfp8Ad4NtKOxkP2
      Wf/AAJ3tHVUZPwIQdj1kqXX4A6ykq2jom+8XBF5qaWf6t+/yxi9+sSPqdrlc2GWZ9cQGm/Y0
      WaGAajwkZOiGTmNrE03NTXXjf4x4lF6ro8Sx71nXdUZGRujo6CCRSDA+Pn6qmQF2u51MJrPr
      GGVZZmxsjEAgwMDAAMPDw8RiMTY2NqxwH44+PVF3AKcP5Sv/+1NTTI6NEWlqZtnjoGdwcNf7
      RVHktW9/m5ligYDTSSGVxqMU+d3KAjZBZCabYn16lpu//BW5bJZLP/g9fpdPkSmqVfb+EDZR
      xNA0VF1nq5BHL8vfpJQCsXwOWRRplGx8+ctf3pXDd7pc/Hf/w7/iR//yT3jp619G5CHDaMtI
      09P3dAxZqePR8USurjm9q7u7+0ns7pFhGAYdHR0kk0ny+TyiKGKz2SzRKU3T6OrqQlVVNE3j
      zJkzpFIpZmdnj22VVHcApwtmijCVSjE/N8dvf/EGBUXl5W99gysvXa+pdOnxeGh+6QUWZJH2
      6UVetHsYCTUyk8swFG7k7FaaM2mFuYlJvD4f1773HcbEvXttUkqBrUKed+anmYpt8M78LMlC
      ga18jo+XFvh0ZYn/PD3BtKZgt9ur3kuFQgFJkrj/+QRFSUfRVLJanoKhEG5sqK/+v+B44vkY
      RVGOdJbAUcM07Hfu3MHtdlvFXFEUrTF9JgzDoLu7m7t371qU0aPua6g7gNOFVCrF3Vu32Lh7
      jwZJZvDMGYafuUwsFqO/v39PqePWzk5sX3Py6X/4Ca1eH4W+LvrODePTNBb/4ZeMNDST29oC
      wO5wlCIAe/VeEEEQmNiM8nJXL0FHqRY1l4xzK7pC0OHkelcPa+k0b+YT/PGPf1SVamhSNu/e
      vcuLX38Fu93O/P1ZGlobGbs7xvjoOC+8+MLRnsA6ThWeqAMwaZSmEziNMAuvV65csaif8FDI
      SlGUHe83u1ILhcKx6ASdFrZUHSW43W6y2RyXfSGcko2PF5dxvfglzp8/v+dq2cz1Tj+YxmWz
      YQz0cPWl6xiGwWe//BUXwo3MZVI0nrtEPpdj7P0P6VUNVJuGLEq7tnV3bYUOf5CA/eGipNsf
      pNtfYvpsKgVu2nR+9Md/jMfjqUknttvtDA0NWaSH5uYSHbGnt/dIzlcdpxu7HMDjKIHuB13X
      aWpqYnl5mba2NgzDQJblHdGAIAhWce2k2C/m8SiKgmEYzM7O7jhOj8dDa2urZfxzuRyqune+
      9lFRLBYfWVeojqOHqqpMj47i9odISiLNl87j8XgOfH0SyQQNF88xcu2a9beiKHDTUOl8+QX8
      oRB/8+//PU0eHys2ELMZOrz+HdtYSibIaEXO11ACLWgad7UC3/jB7+N2u/fsjThN06nqePIQ
      VldXjcoJQcdpbARBYGNjg62tLXK5HGfPnrWGspjSEO+++y4XL14kEAgcyzEcBoZhcOvWLS5d
      uoTNZiORSBCNRnE6nbS2tjI9PY3f77dWTsfJlL9VAAAgAElEQVQBQRBwuVy4XK5TGzn9c4FZ
      A7DZbCTicTzbs6kPIj1dVFU+v/s5Fy9fQtd14ltbbEajbC4tc+aZy8h2O9lslo9+9x5nh4cR
      b35Ot8O141ncyGYYi0V5pqUNr1zdcN/ZjNL7o+9bgov1e6aOWrCV63uYK9zyKMBms1nCUkcB
      wzBobGykubkZwzC4e/cuFy5cAODmzZuW/HJTU9OudMtJwGaz4fV6mZqaYnh4GJ/PRygUYn19
      nfHxcQAikcixpmpMaYhcLndiQmd1lCAIgkXZbDqk07fJMpeeuWxFuZlMhtz7n3DO4+OtX/2K
      bhVUpYCjMUQhm6VN2L1yzyoF2rz+msbfMAwKAsQ2NggGg/X75BRDVVVSySThhoYTOwbb+vo6
      hUKBRCJBV1eXpdFjRgH37t1DlmWGhoaOrMBZ7lCGhoa4desWhmEwMjKCy+VicnLy2FIqh4XZ
      yzA2NmY9jMVikYaGBmu28JMqaBuGQSaTIZ/PEwgE6g1iTyHKDXp0ZZUhrx+bKJKbXkRsakHU
      DboGBjAKBardVUGXm8nYJlQf1IUO5P0eevr66inDUw5Jkixxv5OCGNzuELx8+TIbGxuk02ns
      djvxeJzR0VEGBwct0aLjgCzLPPvsszz33HNWnl2W5RNVCa2EOa2s/ByYzKCTaNYyR1TWGUJP
      L3RdJzu3gFOyUdQN2ofPkjk7wFqkEdkuY9wZrdrhG3C6cMk2NnLZKluFhWyasy9fr2tIPQUQ
      RZFQqPb4zydyDDabjdbWVhRFoaenh8XFRe7evUsikSAcDuN2u8nlclbjy3EYnfJxfrqu43K5
      yGQyR76fR4EZCRWLxVNVLFMU5VQ5yToOBwHISQLvry7yy9gqYtBPW1uE565cYXV6hk5XdYVI
      wzBI5PNUewoNwyDqcdB6ioQW6zjdsFUa9HPnzlEsFi3mQLFYtIagVL73OG4ywzAIhUKWZPRJ
      rnIlSWJzc5NUKnUqtfnrD/nTC03X0bI54oZOXDMIFgo0NTczd/8B/uV13P4QumEgVlxjA8gW
      VRqcuyfGpVQF31DPk/kCdXwhsIsGaubey4e0h8NhFEXZoQd+nMbHZrNZvQInxYM3v9/KygpD
      Q0M4HI5TteI28//lOu91PD2QZZn2SxfIpDOcm5xh1SaTSqW499u3+WpzGx+vLBLPZRloaKJ/
      WxcoVShwf2uDrKqykk7R7ttJD13N52jp7KjfD3UcGPs2gplTsyKRiMWLr3z9iwZTDnp6epq+
      vr4Tn1xWDcVikWQyiSRJOJ1OZFmuMz6OEZqmHWnRXRRFLl66RDab5b2lZYyxCebnFnk+1MTo
      xjpnG5oIOV18trLEP0THcNts+Bwuwm4332tpqxoZJ50yA8HgF/KZrON4YDNz3NVuKLN7MRQK
      sbW1ZU0WMnFcTWMnrYIpiiLz8/OcO3fOOp7ThnJBskwms2PIRx1Hj5XlZTo6O49se+Yz43K5
      uPK1rzL3k59x3lcqCEY8pZ4CwzDoDobI6xovtHciGLs/Xw4tHKozw+o4FETYW7bYHOoSi8V2
      pB1Mo3gcxrpQKOBwOE5ML8jkaZ/m2QWw0wlomkYulzvVx/s04yiNfznMIffOGoY77HTR7vEx
      thHdc6G1kcvS2N1ZX/3XcSiI8DCPXMsJhMPhUtPKNhvIbBAzVTKP2gmYgzROypjpuk4oFGJ8
      fPzUrqjKr5PpBAqFwqnpn6ijNpKJxI6Uoj8QYMtVXa0ToDMQRNd17qyv1tzmUjZDb1/fkR9r
      HV9siJXGu9pQbU3TaGtrY3FxkYWFBdxuN1NTU4yPj5NOp62Vsjmn1YS57Wr/TL0f858oitYI
      PTMCOCnouk5rayvBYJDFxcVTl1YxJSnKz7UZLWUymbqA3CmGruu8+Tc/4Td/9zPrb8lEgmBe
      rbl6F4Bzjc0sp5I136Ma+onMQ67j6YZl2aoVd81/5op4eHiYfD7PnTt3aGxs5Ny5cywtLbG0
      tEQ+n2dubo6pqSmrO3YvB1C+T1mWmZ2d5ebNm9y9e5e1tTVr3OJJRgGNjY2sr6+ztLSEqtZ+
      QJ8ETOle2OaCJxIsLS1ZGkqmkzpK2Y46jhaGYTB67x7dz17i+de+Yv09l07jrbHgsdRoBYEO
      v583Z+9XXZB0e/3MHeNcijq+mBCWl5cNYM/OwcrCr7niN9NBqqoSj8ex2+2srKxw/vz5qp3D
      5vbLi8eqqjI9PU17ezt+f4nWZtI/y9/3ODe22+1GURTLMB7UqQiCQCpVGrk3OjrK+fPnLR2Y
      Jw2Hw4HL5aJQKJDL5ZAkiVQqxfr6Og6Hg94y+V6TFVTH6cL98XEm743yrR/+YMf9rKoqk7du
      0zA1R0OZ/v9SNs1SwIMe22LE6cUn25mKbeCUZTp9O4USP49F6fvxD/H7/XUnUMeBYS0lTINb
      iw1UmRIqF46z2Ww0NTURCoWsXoFqq/5yZUJTCvr+/fuMjIzg9XqtjmBVVXcUgB8nEpBlGbfb
      jdfrtfbvdrsPZCANw8Dn8+FwOHA6ndy6dYvR0dETSQkVCgUURbEcgWEYeL1eBgcH6enpAUrf
      1eVynfq5y/8ckc/nmfnwEy5fu7rLQAuCwNDlSyw2BlDKorclQ6P94nlGvv9dpvMl6YfeYJjb
      ayu8tzhHSnk4f0KXJKths446DgorAjBRbtyqrbwr0zeVn71z5w5er5eBgQE0TUPTNMspTE5O
      UigUOHPmDJIksbq6iizLhEKhXdurVZg+bDTgdrvxeDzouk6hUMBms1kOKp/Pk8/n991GOVU2
      Go0iiiLh8O6h3U8CXq8Xu92Opmnk8/mq/Qlut7tuDE4hcrmcNXilHOY1nBodJXRnggani6RS
      4Odri3Q73BRaGrmmGHi2FUB1wyCtKnweXePF9i6SqsJid4SRa1frzr+OQ2HXUrZyOEsl9jIq
      hmFw4cIFIpEI9+7dI5lMYhgGsViMzz//HIDW1lbS6XRJCjWVsmShK7dTWSiuVUfYD7lcjmw2
      a2nqm/WJbDZ7IONvHo8ZIdntdhKJxGNFAZIkHUg/vhxmcX52dpbbt29b0YkZoZQ/+Nls9tQ1
      rtVBVeNfjuxWAs92ZHo3m+L1H/+IVFOI4UzBMv5Qqgc4JRvmk3gvuUVzb32Aex2HR8075rCr
      x/L8vtPpZGRkhK2tLVZWVtB1ncHBQc6ePUs+n0fTNFRVJRQKWemeSiNvYq9C8kGcgNkolUgk
      UFWVfD5PMpl8JHVTM31Ua8D2QWB+3izcVjKnakEQBG7evImu63R2dlr1DDOi8Xg8hEIh/H6/
      NQKwjtMPXddZnJ8nlUpR3FYHBZCaGwiFwwyeG6aypD+fz/KOqGLzuEuRstdDU1PTkz/4Op56
      7IoXHzVtUP45wygNSO/p6dmRMioUCrS3tzM1NUU6nd5109YyqrXSQ4c5ZlVVSSQSj1VLmJqa
      Ip/Pc+bMmUfajizLVoObIAj4fKWRfmahuRYEQWBhYYHe3l6CwRIn3BxDaTqUbDZrRTj1NMDT
      g0I+z8zHN/DmCpxzP9T2kWKlXoGuvj5ur6zRsJHEabMRy+fY6Gnjq1evsra6yru/fgtbpDSY
      pp7yq+Ow2BUBHETsrdpr1WQhKiWkTXXRM2fOcPnyZVKplKVnsx+qUUgrewnKI4la23hUpNNp
      NE3j4sWLVk3D/K6aplk5d7NWUBnVQImdIwiCFQHYbLZdBe9qMNNW5nxgKJ1LTdNIpVIUCgWL
      6VQoFCxp7TpOP1xuNxde+wq6srMbuEOyszA9gyAIdA2fYTmbBsAjy2TuTRDf2iLS1sYrf/Gn
      XHnl5brxr+ORsGOpeFRKn7W0hUwoioIkSQwPDzM2Nobdbrd0hvZLzVQ6GtPAHrdKqcnBn5qa
      sprWALa2tqx9ptNprl69an3/8iK2meqpjJTM1fteSCaTrK6ucv78+aqvmx3AXq+3nvp5ChEM
      hUg2BLiTSyEKIpJaZNDjo/jZXaYFgaJSoHWbHmoTJfyCyPraGg2NjQA4t2dF151AHYfFDhZQ
      ucHa72aqtmotp3jWcgCVn5Nlmbt37yJJEna7naGhIQqFwoFy/NWO03wQjkOgzlx1l0cj5nxe
      QRCYmZlBkiSCwSBer5dkMkkqlUKSJGRZJhKJ4Ha7LfkMc1u6rpPP51FVFUmSrAKuaczj8TiF
      QoHm5uYdEUDlT0mS8Pv91jbrqaCThaZpxLe2LENdCyYjzbzusc1Nkm+/j8MA20vPszg+wQu5
      0pjWu5kkwevX6OjqsmjNx3G/1/HPA8LKysoOBwAciE1QTUKiclVevk3z90oHYLPZSCaT+P1+
      NjY2WFlZsdhEB9G1Kd/vXg6s8lirfZ9arx30fYZRGt6eSqVYXl7GMAzOnj1LsVhEURSy2SzP
      PPOMldLJ5XJWQTmbzeJwOMhms5YQnTmHWBAEenp69jXoglAaWO52u3fVSep48jAd8UGjsvKF
      xcL8PIIo4vV4mHvj1wzIDqZyabxXLtM/PAywo6+mjjoeBcLKyorxqDz78vTLQSOGvfLd5cJy
      k5OT9PT0WLntPb9EheGvfCgqHVI15/A4XceVzlAURXK5HPF4nEgkYs05npycZGBgwOp7MDXm
      zf4EU8fHfLCnpqYIhUI0NTUdOK9vykLXO4Gfbpj31Nv/7/+H3+mCrnaGzo/gdLmsaK/u4Ot4
      XDxWjuBRjOVe9QGzaCoIAmfPnmVmZoampiar83WvPP9eqau9isLVGEa19nFQCILAxsaGxdiB
      UrNPb28v9+7dY2hoyBoGrSjKjpW9OYZyYWEBKJ0TRVFoaWk50L5NtlXdATzdMO/lYlMDI699
      1YoUDcOoG/86jgw2OLriby1Upl/2WsmaLJloNGqNodwvytgrDD6M8a/8zH5Nb3ttP5fL0dPT
      Y6WxDKMkhXH+/Hnu37/PzMwMhmGQSqXo6+sjFAohCCVtpJmZGauYnMlk2NzcPNR4zLoY3BcH
      r3/n2yd9CHV8gWF7lFX842IvJyBJEuPj4wQCAYaHhy0DWusYD5K+qmTe1Oo8LneE+xWhq9VA
      zJ+qquJyuXYZYjMaGBwctP6WzWaZmprC5/MRi8XY3NykqanJKhA7HA4WFhbQNI2urq5dKbTK
      IrAsy/Xi7ymHYRjENjYIhsOHZm0ZhoGqqtjt9v3fXEcd++BEKkh7GWqzDlA+g3gv419ZAK71
      nlrbqOwtMAt3e3Ub7+dElpaW8Hq9VSUsTD5/sVi0+gd6enq4d+8exWKRkZEResoa6CRJor29
      HUVRmJ2dtVIAJmvK5XLh9/sJBoMEAgE8Hs+JzlKo42BYWVoin8tZvxeLRT766CPW19eZnZmp
      +hkzYnzjZz+rR3l1HAmE1dVV47iZBAc1pE6nk08++YS+vr4dBrSaAT+I8a/cV/lPEwcZO1kr
      MqgsHtvtdgqFAnNzc5w5c6Zm8do83+U9AtlsFo/Hs6eGTzqdZn5+nkuXLuHz+eqc/y8QyhcE
      1TA+Nkb/wAA3fvUmxuYWz/3RD+uOvo7HxhPJFZR3yELtvLmmaTidTsLhMIXCQ6nbypx8NeO/
      Hz2zfJ/7HUetz+4ViciyzO3btwEYGBg41GhG88GvZfxNrndDQwOSJFkaQnV8cWB2htdC/8AA
      G9EoTZsJ4mUDgOqo43HwRJPF5Ubb1MOBnQbZ5/MxMTHB0NCQtYKu1W9QufKvRkutTMEcFtUc
      RyWKxSK3bt3iwoULlhZPeYhei8G0X9RSTmt1Op04nU68Xm+dAfLPEDabjWQ8gVM30CPN9TpP
      HUeCE1tGVDPixWKRjo4O/H4/8Xjcer2827EWY6nc8Jfn2/fTBzoKKIqyQyW0XOH0ICmmWjC/
      j8/ns3SE6i3///xg9ozkYlusFHL0X6guCVJHHYfFqYgjyw27OUCmsshVbeVfbggrW+KrpXkq
      C7zlqIwUDhMxBAIBIpEIy8vL+4bmhzXepsLn4xr943aCdTw6piYnuf3ZTYv5lUmnWVlc3HHN
      lhcXCcwtoTWFCQaD9UVAHUeCE48Ayn8vN96ZTKbqa9U+W45aKZvyh6magT+MA5BlGbvdbhl7
      VVVpamoiHo/v6QAOk/6BEgPIXPlX+x6HweNGI3UcHzo6OsilUqiqSmxzk6lf/BPZX7/Dx3//
      c+JbW2iaRnRjAy8CjlDd+NdxdDgVEUAlDKM0Z7hcYtnEfsa/mpGvZfgOUuCthN1uZ3Z2lomJ
      CZLJJJqmUSgUuHPnDnA0TVgej8ea72sel6qqxONxtra2SKfTB3YC5ne02Wz1wvEphcvt5oUv
      v4LT6WTq1h2GRTvdvgDPFgXGbt4CoK2tjTsOkUh/X90B1HFkeCI00FqoXGWXG+r5+XkCgQCN
      jY2WUT0sn/+gaZxajWmV6SQoUVXHx8c5e/YsW1tb5PN5crkc3d3dpdb9Ms3+8u2Y+fvKv1Xb
      p9frRZZl6/2Kolg6QSZM0be9jIGu66TTaex2u0UZrBuP043lxUUyv3qbTq+flUIO6aVrtHV0
      1FU/6zgWnFoqwcDAABMTE8iybDFfDirNcNgcfq33VTKMTJjSzS6XC4/HY3X/HgbVOolNR5TJ
      ZPB4PIiiSLFYJJfL7XIq2WwWURRrzpk1i+Jut9tK/9Spg6cfkfZ2bo4McjOXp7PnIm2dnfXr
      Vsex4UQdQK3eAHMl3d3dvUtUrRxm17D52uNSPg+Czc1NK52iadqh8uom9bVWrwI8pMjuNSbS
      fG86nUYQBCtVVv56NptFEATrWOurx6cHl69cqcl2q6OOo8SxOICDpl3Mn+ZqtXKl43A4UBSl
      5kMwMTGBw+EgEolYzKHjNP4Afr+fRCLxyAXVSkdX7bVakUe139PptDWhzKQLQkmMrlxOoi4R
      8XSg7qjreJI4stiyvOBai1FTbYVuGv5Krn958bMaY2hxcZG+vj46OjqYmJiwNPWPm+ooyzKq
      qj5WWL5XlFJZvN4vqjEMg2QyiaIo6LpuzQQ2xcIEoTTFbC+JiTqePBLbfS511HGSeCwHUM1Q
      Hfazh32P6SzS6bRFkRweHmZycpJYLAaUuiZ1XUdV1UfWxa+2ChNFkc3NzQOv0PZr3KpsVjP/
      aZpmpZcOMvjeMAzS6bTlBE36qN/vx+/3WzWUw9Yp6nh8lEdl5X/79MaNOi23jhNHTQewX8F1
      L6NfuYrdi7suSRKqqlopi8rmrlAoRCwWs6SOl5eXGR0dpbGx0WLc2O12y+AJgkAul2N+fp6F
      hQXy+bw1t/cg2M9oLy0t7Sn0Vr6dowzl96tt6LpOJpMhkUiQSqXIZrPWdDGzb6EeBZwMFreH
      +1i/zy/w5VdfrRd36zhx7KoBmIbr7t27tLa20tDQULOrttr/DwNJkrh37541wnB+ft6SgjBZ
      K8lkknQ6zebmJvl8nra2Ntrb261VsiRJzM3NWWwcURSZmZnhzJkz5HI55ubmiMVi1izevVDN
      aJtG1+VycevWLQYHB3cI1R0ElYb7UR/8veoB5f83owcz5286tHofwJOHIAh09/Ts+NvKwgLp
      VIrh8yMnc1B11LENm5kugYfsm4mJCQKBgGWoKimWe6FWY1Xl6h5Khsput9PZ2Ymu60QiER48
      eEA0GsXr9bKxsUEkEuHixYvE43HsdruV2jGbmyYmJmhvb8fj8aAoCg6Hg3A4TCaTwev1MjQ0
      BMDMzAx9fX2PlQaRZRmPx0NuW8fdVOWsNa/3uAvS5j4q4XQ6rWOqDw4/fbh6/cWTPoQ66gAq
      UkCCIDAxMcH58+eRJIlYLMba2v/f3pn9RpJd6f2LPXInmZnck0XWQhZZrOqGepGmZ+kZQbI8
      gm2MPTBsQLZgPfmv8sPABjx+8ALB1kwLEqButabVe9fGZlVxzWJySzL3LXY/sO/tyGDuJDOT
      1fcHEKzKjIy4ESTPvfcs3zmiwdWL5NXzPI/j42MUCgUUCgVomob19XXMzMzAMAyYpgld13Hr
      1i3Mzs5ClmXcu3cP4+PjkGUZwWCwLsuHBIIjkQhUVaUTwubmJkqlEu0nQAKiBwcHqFQqEEWx
      Y9eMu4L2xYsXmJubqytKE0URsiw3TeschPH3+Xy0SQzHcajValc6BkZrHMfB6ekpANDfe5bp
      wxgWaCWwKIpYX1/H7OwsFEUBz/MwDAOHh4dQFAXRaLSjoJU3w4cYSp7n8fz5czjOmVpmOBzG
      7OzsOY0a7x+HLMvw+/0oFovU+JIJoFKpIJvNIhqNolAooFgsIpFIQFVVuksAQF0fL168wNjY
      GEKhEPx+/7mdjfv8wNmK//T0FPl8HvF4nE4qgiDQZ1Sr1ehE09ED7/GPv9Fz9Z7L5/NRmWAS
      92i082L0D/fP7B/+1//G9975E0xMTg54VAzGGSIJEiaTSYyNjcHn89Hgai+59d7jyLmz2Swc
      x0EsFkMikWiamuhe4bsVQt3GmXyFw2FUKhUcHR1BURTaQ8AboLUsC6IoYmpqCoIgYHNzs05P
      XRRFmKaJ27dvw3Ec2leX6O/cuXMHuq7DNE2qzkncKsQt1ckEcNkrP3Iu4uYRBKGuOMx9DGMw
      uJ//X/30r6Gq6gBHw2DUI5IAqq7rmJ2dpX14gbMcfOI2Ib7uZjSaJERRxPvvv49QKIS33noL
      L1++RDQapW6JTgyiJElNdwimaSIWi2FychKWZZ2rGXCPhxhvjuPw+uuv18U9SOrl8+fPce/e
      PSSTSWQyGaiqirm5ORr0lWWZGn/HcWjMoVMu2xgTLSBd12EYBkqlEgBcinw04/JwHAf5fB4j
      IyODHgqDUYcYCoVgWVbDACnHcVhZWcGTJ0+QSCTq3iOrdNL9igQcRVGkKZ2maUIURUSjUWia
      hng8Tj9LvntX++5rkyYrRNag2S7EG4R1Vxl73VaOcyaT4IWkST59+hSWZWF5eZl+3j1GssIm
      5yfXblW96x5TLzTbgVUqlbr3yK6k19oHxtVRYBMAYwjhCoWCY1lW3cqfGE1RFPHkyRPcvn2b
      Sg0QiIsomUxSg6OqKo6OjjAyMgLTNCEIAiKRCN1hAN+mJBIXS6OsIWJsiXyBruuoVCptYxCN
      DGWnxTZkPPv7+7h58+a5VE+y6u8mndM7KTVSF202fvfxzdRFvZDxBINB+Hw+lv3DYDBaIpK0
      Si88z2N/fx/z8/PUz03gOI7KFVuWhZGREepHX11dpbIEZAWt6zrtlUs+S/AKqpFcfhLQJFIG
      giDQlTaZFIgIGpE/aESrnYP7Xk9PT3F4eNg0z7+Xqs1Guxo33jz+Zqmk3VwD6G2sDAbjuwdX
      KBQckobpdc0IgoC1tTUsLy9ToyJJEl6+fIlqtYpwOIzR0dE6QbdmBssr/sbzPE2hdMcEeJ6H
      oih1WvfknCQQTFa2RN6gXC6fUwQltAtgk3OcnJxgenq6K+PZrA1lJzQq6moke9HseG8A2P38
      FUVBKBRiO4ABQH5/8vk8RkdHBzwaBqM1oqZpdT5sr9vCHQBWVRV7e3vgOA53796FaZrnJo5m
      eI+xLAvVavVckxTyHkm3dL/uztwhMhOCINDdQbP7aAWZjCRJ6spP36hBRyvNn3bPptnq3z1x
      NiMQCNBjSqXSpXQlY/RGPp/H0eEh7i4vD3ooDEZbRKIX44UEccfGxvDJJ58gEAhQhcnFxcWu
      5RCa0SgI7BZDc6dceiGNWZqtjjsJzgJnsYtcLkd3AJ26XYYh08ZxHNRqNYRCIQBnctUs939w
      jI6OIhKJDHoYDEZHnNMCcq9GbdvG2NgYotEoRFFEKpVCoVCoO74X90cjvEabZLgQ+QWvIa9W
      q5BlmQaXve+TSaUTv7pt2xgdHcXjx4+xtLR0zl3lPid5vdVqv5PX3O9d9NmZpkk7lJHxMQYH
      c70xrgv0N7WR7xwALdjSdR0zMzMQRRH7+/vn3DHd0qya1XtOwzBQq9UaFpiJolgXUG6WTtro
      325M00Q8HsedO3ewtrYGoD7OQGITXn8/cUN5ZZq9X73QS9HYZReaMRiMVxse6KyVIil8Wlxc
      xPHxMYrFInie7zk7ptUE0GiF7g3yktRVd2UlMcitaHZ/xBV2//59bG5udpRLTwx+s0mgHY2O
      c082nUDOwVadDAajW/hGxr+V8dJ1HSsrK3j58mXP6YadrMq91yTjIoFn4KwQilS/Nsv+abSr
      aQZx88Tjcayvrzes8nWv/FsFb90TQ6e7gV5W8I2C0Yz+k0qlBj0EBqNrRKC5+6cRpAFLIBCA
      ZVk9uSkI3axai8UiQqEQTRslk0CjSasX14s7AykWi9EOW156cel4x9YqbtJq7N6MKbJbkGW5
      ziXH6D9TU1ODHgKD0TXnLLA3DZQYGQB1GTKapl1I2KqRb72TlaxXeM3r9ukki6fZGEhOvWVZ
      GBsbw+HhYUdZRN3SbufQyZjJVzAYRDgcZs1eBgxzwTGuI3QH4KZdmiPxwXeL28C7/dyd7iLK
      5XJHXb3aFX41uqY3wEtW1e4dxmVNABfFPQG4s38YDAajG/hGxt+7EvcaP03T6Eq8l5VPN0FO
      9xhI4LfZuNrRbJfR6DUikdFIA2iYIDLVjOHDHfsxTRMHBweDHhKDUQffqSF2HycIAhYXF/Hw
      4UNaHNbus243y2UFLBsZ5ctKnSTCdmQCGGbaNahn9BfiliQp1BvPnuE3772HD371D4MeGoNR
      hwh07jYBvv3lJpo92Wy2rruW93Pe4qleM10URaG9eDs5/qJw3Jkc9bD4dls9s2GfoL5LuDO/
      MqenePbkKSKpI2wepnBzeYlVaTOGCjoBkEmg3URA3ud5HolEgvbfdffKbfW9F2zb7tj4XxRy
      f0T/iEwEpMdBu8nyKiA/H0VR6pRbmSEZLhznrN3pwd4e0p8/hJXJYikYxpFt49/8x58hPj5O
      f2ap5Et8+dmn+NFPf8q6hDEGRle5g27jWKvVkEqlsLy8TDtxefP7r9JA9WqEO60FWFtbQ7FY
      xMOHD6HrOgKBADRNw3KfRb7Ic5QkCcFgEOVymcYmQqEQbbrDGDy2beMPv/89nn36Of7V7AKC
      I2P4yNFx78/+HPHx8brdZCZzije//xUkwMkAAB4FSURBVH1m/BkDpWvLIQgCKpUKXr58iZWV
      FbpKJrQz/P1YtXqNfKeTBTmuUChAFEW8/fbbVHLCsiwkk0mk02lMTk5eeeDVvXMSBIG62cjz
      Jr2JSV8GxuDhOA6qosCvKLAcB+lqBep0HFOzM+fadN5//fUBjpTBOKOpFpAX8n6pVMLBwQHu
      3r3bMhW0Vz2cVho7nRzXSI+n1djcnyMr7VgsBsMwqNhcpVKBZVlQFKWrOoNucMdH3AFz0khH
      kiTaN0GSpHPN6RmDh+d5LC0v47RWxXunB3gckPGDd/+C9WhmDC0d7wCID9qtPdNoFdxM38b9
      vRGdyFB4j+32mFYVtqIo4vDwELlcDpIkYXp6us7f7jgOcrkc7ty507CD2kVolppKJgLS+UyS
      JAiCwNo9DinEfbj84D4ODw/xZ3/1l8zFwxhqOpoAZFnG8fExTk5OoKoq5ufnL63tYDsZCndx
      VrtVVLNJhOM4yLKM09NTjI+P0ybzsizTbmCVSgXBYBArKys0fc9bYayqal8CwN5dgKIo4Hke
      fr//yq/N6B3btpEvFKCoPvz8F79g1dmMoYc7ODhwWmUASZKE3d1dqKqKyclJ2qylq4s0SQFt
      JuDmxqt/0+p476RE/gANw8D29jZUVYXf70csFoNt21T1c2JiAgDg8/ma3puiKHj27BlmZmag
      quqldt3ypsu6ayVkWUY4HGYuhCGFZP5021GOwRgGqHVt9svL8zxKpRKmpqZgGEbPxr8dnfjW
      28UoGvHo0SPs7e1hZWUFN2/exOnpKWzbxs7ODm7fvo2bN29ClmXIstzy3jRNw927d5FMJjuS
      iu4WtxYReV6KoiAYDF76tRidUavVcHjYunq3XCrh//7df0Uum+3TqBiMy6OtI5n4+y3LurD7
      o5lEcit30kWuKQgCVFXF0tISNE2jUtZ7e3vw+XwQRbErfz5Jd72K1b93khQEAcFgkAYQh1mO
      4lVFURRMTEy2PCafz2PO5rC3tc1+PoxrB+82yl4EQcDe3h6mp6cvlHffyHh12jjFm9HTLrOI
      pEaKooiNjQ1MTExQWWfHOWtqc+PGDUxMTHQtoWDbNhKJBHZ2dloeJwgCZFnuSLiuUfAXAILB
      YEP5Z0b/6OSZl3N53AiGUVl/ziQ5GNcKx3FaB4Edx0GhUMDs7Oy5X+5WRriRr7/RubsZaCfH
      iKKIdDqNra0tjIyMIJFIwO/3n8tW6jWH33EcqKoK27YhimLD84iiiKOjI+TzeUxMTCAYDHY8
      fvLM/H7/lbiZGJfP9I05PFr7GpHbSw0bCDEYw0oqtdd8AhBFES9evKCVvl7a+eMbrZx6qQdo
      RLOVGc/zyOfzWF1dRSQSqWscc1kQw98oDZPk5VcqFdy6dQupVAqRSKTpGBo9J0VRIMsyW+1f
      E4KhEL7/t/+apeUyrh3RaKx1DCCdTsMwjLaZOldBL9cwTROTk5PY3t6+9Fx9QiaTocFa0jOA
      5OqnUil89dVXiMViVLyu2wmIFXddP1ihF+M64vP5mu8AeJ5HJBKpC5R2YpQbaQK5uaxCr0bY
      to1AIICpqSlUq9WOpKq7JRaL4eDgAI8ePaL3try8jGQyCVVVsbq6CkEQoGkaEokECoUCIpFI
      nYgez/M0oCxJUt1k5ZXWYAwfjuOgVquxRjyMa0/TCYCkJZIVrKZpbXOdvfns7u9urnIHQdwq
      hmHQyuXLpFarYWVlBcDZyu/k5AT7+/uIRCIIhUIwDIMG1HmeR6FQQCwWg+M4qFar0HUdOzs7
      GBsbow3t7927RwXeAKbyOayYpolP3/8A6Z1dLLz1Bu4/eDDoITEYF6LpBGAYBqanp7GxsYFA
      IADDMBCJRBAOhzvW/u8n7iIxjuNQqVQwOjp66ZkZJJOIEAqFEA6HaQcxN6TwbHt7G4qiIJPJ
      YHR0FA8ePADHcTRTqVarUX0fn8/HJoAhheM46OUy7r/zJ1hYvjvo4TAYF4bb399vukQm3bB4
      nkc2m4Vt23XujLoTdTgBdJP62WpcrT6jKAoePnyI1157jaaADgpBEFAoFCDLMp1IyS6FxA4e
      PXqE1dVV+P1+qKrKYgAMBqMlxWIRoijA57uYPExLS0NkHziOw9HRESYmJuqkClpJPPQLUsfg
      Nv7Pnz/H4uLiUORlW5aFYDAIVVWh63rdsyHPkqSwMjkBBoPRCaqqQpIuFuNsWwdAqFarCAaD
      dRktvRqqiwaBW11XkiQUCgWEQiFIknSpFbsXwXGcc2Mh92EYBlZXV5nxZzAYHXNZdUItdwDE
      EEuShGw2e6nqhq30/DuF4zgEAgGq45NOp7G3t4eJiYmhMf7NIBlAgUAAIyMjUBSFpRMOAVub
      m/js00/Pvf7s63WcpNMDGBGDcXV05GwWBAG3b9/GxsZGy0nA7Ye/qJ+/E3iex+PHj7G2tkZj
      FCsrK1dWA3BZEB+/LMt05c+M/+CxbRu7u7t47bXXzr0XjkTAsdgM4xWjpQuIGCrDMKikQqMV
      utuYX4URa1RXoCgKnjx5gsXFRdi2TQXrBh30Jbj7GLhfI1+iKNKKX7cCKGNw2LYNQ9chNthe
      T01PDWBEDMbVwXFcZzsAjuOo/18QhHPum0YNXS6q/+Ntj+gONIuiiJ2dHSQSCTqWYXL5NNL2
      J1+CICAUCiEUCtGqX2b8hwNBEPDDH/0IAGhToC8//wzVapUpfTJeSTqSg+Y4DslkEgsLCzSN
      sRNtfvf3btxDQPNUUpKWWi6Xaf79sNGoGpqs+sl3d8cvNgEMHvJ7LggClT7PZbN4+P4/4vM/
      fsgmAMYrSdssIPKLH4lEUK1Wuyp/b2TwOzX+rc5VLpeHKsunGaShO8/zVKaiXC7XNX9hDJ58
      Po+P/umfcG91FZZlQZZlqKqK3/zP/wbFqkAQmcon49XCcRwc7Kfay0GT74FAAKlUCjMzM/D5
      fOdy2tudg/y73WfaFZEBZzmw5XJ5qA2oKIoIBoMQxbNH7DgONE2DZVmwbZulfQ4RoVAIf/Hu
      u/h/v/w/KO08hR6egl/kgPwxhFAUKw/OB4UZjOvO08ePmk8AXmMtyzKmpqaQyWSQzWaxsLBA
      jVs7LiPjx+tSkSRpqJtuO45DdYFIzi4JpjO55/6TyZyiXK4gkUice4/neSiKgnv3X8Mf97eh
      5FOo2Q4W//QnuP/gNdaTmfHKwXEcllfvn00AzfT73ZimCVEUMTk5Cb/fj2KxiGg02tYH38z4
      k5W+e5fRTkOIvEfcKcfHx0MbB7BtG9VqFTzPIxQK0e9M7nkwjI1FMTYWbfq+ZVnQtRr8wSCK
      nIC7b7yDt95+G6qq9nGUDEb/CIfDENu1WPRCsiOa9Qh2G/FG522mFtrNCovjOMzNzeGzzz7D
      G2+8MZQTAPBte0oAddlAjOHBcRwcHx/hq88+wc76Y4TCEfzb//SfERkZYT8rxitNOBw56wnc
      DYIgIJ1OY3JysqFx70Qu+iJ/WJIkIZ1O44svvkA8Hh/q7AxBEBAIBKgmESv2uno+/fgj7G5v
      1b1Wq9VgWc0b83zy4Qc4fPwRll9/Cz/8F3+LXC7Hfk6M7wR8t7/ogiA0dWM0a/5yGYafXDud
      TkPXdbz55pu4cePGpbd8vEwMw0CxWGQr/z4SCoXw4W/fq3vNcRyYZuOMMY7jMHfrDmzw+PKL
      z/GrX/0K0zMz/RgqgzFwOovifoMkSUilUohGo+B5nq5oG3Wx8hr/y4DneRweHuLBgwfQdX0o
      XT/ueyVaPyzjp3/cXVlF4sZC3Ws+nw+O4+Do6AgcgFg8ThcwlUoFL776GIHJOfz7f/dzHBwc
      XJrQFoMx7PDdGuhkMomTkxOsra1hbW0NlmVRSWOvO+YqipwURcHBwcFQZQC58/rdMQ1FUWjx
      F6N/BAKBc6/puo4vvvgCX331FYrFIn39g9/8I6x0EjUTKBTyWFhYYD8vxncGEWisW9MIx3Hw
      ve99DwCwtbVFDZy3Z/BVuTwMw8DS0hIePnyIycnJSz9/t7S6T1blO1zIsowf//jHdWm5ABAY
      ieKIk7Gyeh8jI6MDHCGD0X/qOoJ16lLZ3NzE1NQUbbnYaOV/2TiOA1mWsba2hvn5eUiSNBQu
      oFbZPcFgsOFqlDE85HI5WJaFsbExNlkzvnPUWepO/wCImJmmaX3JwhEEAYqi0IlnWIw/odkz
      GIaOZIzWjIyMIBqNXkvj7zgODg8PhzoRgjHcdD0BEF2bfiGKIo6OjvDs2TMEg8GhK/wixp+o
      oronA6KcymBcBbZto1gsDL0mFmN44d2FYO2MlSzL2NnZwdTUVN9+6fL5PHRdx+LiIuLx+NCt
      dpppHfE8D7/ffy1Xlozrwe8/eB+apkFRmFgdoze6mgBIumcrDaB2Bs/b/rFd/1+fz4fT01PY
      tg3TNIc+sErGNuzj7IZyucxWmUPIW29/H4uLS4MeBuMa03G0luTgJxKJnlfhzZrENHvdtm08
      e/YMq6urdW0eh62wqlHXLyID/Sqg6/pQPW/GGaQfNoPRKx1bKNu2EYlEcHR01LEKaKc0mwRy
      uRxmZmaGKue/FcT4q6oKv98PoLsuaMPK6OjoKzOZMRiMb+GBb4uW2q0mSFOYqzBqXl866fGr
      qurQ+f2BenkLb/tKTdNQq9Vg2zYqlQpKpdIrMREwGIxXC16SJOTzeTx9+hSPHz9uOQkQn32z
      1WA710w3RlAUReRyObqSJp/vVr30MmnWp5hUAUuSRIuMiFSFbdtD57JiMBgMAOCr1SrS6TTu
      3buHubk5rK+vUw0bn89HjZvf78ejR49QKBSozr0bSZK+UV20LsVlQ+QlvAzC+HuNvvs1URSh
      qip1+4RCIar9w3EcZFnuqo0mg8Fg9IKua0jubHf1GTGTyWBpaQmapiEUCkFVVayvr6NarWJ2
      dhY8zyObzUIQBMzOziIUCmFzcxP37t2DaZqwbRuapmFzcxOjo6M4OTmBz+fD5ORk054BnWCa
      JmRZHnjOf6PVu1fdVJZlKIpCJ8VwOEwzpliKHoPB6AeSJGMmMdfVZ7h0Ou245RzcaZ6ZTIa6
      NSzLgt/vh+M4+PDDDzE1NQWe51EqlTA6Oop4PE7z3guFAlKpFFZXV1Gr1QB01w9YkiRsbW1B
      lmU6kfSDVro+3jG6JwBBEODz+aCqal9cPSRDyr0bYS4mBoPRLbQlJIH0sgXOJB9I20ZBEGge
      /uuvv47R0VHYtg1BEGiXMBKsFUUR5XIZlUqlq+wRx3EgSRK2t7cRiUQwNjZ2pXIKFzGcZKJ0
      HAeiKNJ7J8b5qjKXHMehOyvDMJDNZjE6OgpRFGmfBjYZMBiMThA7UQB1Y9s2fD4fXdl7jago
      iigUCvD7/VAUpS5/v1NqtRpu3rxJrzFMkPsNBoMQRRGWZZ1z85D4xWUbYtJnmEw6W1tbsCwL
      6XQaiqIgGo2e9fn8ZjJgEwGDwWjFuZaQ3XTv8gZFJUnC5uYmkskk5ubmYJpm11k7JJvGrdl+
      VXRrIN0uH2JkZVlumBJ6FcZf13XUajVsbm4ik8lA13XMzs4in8/DcRwkk0noug7DMFjaKYPB
      aIvYyFC5jTrQXCbafZxpmnj+/DkWFhYQCoVQrVZ78t0TVxLxcV+lIfNW8LppZcRt20atVkMo
      FLqysbmv5TgOCoUCdcElEgns7u4iEokgm83CcRwEAgGMjY3R2gMAfYtJMBiM60lHPYFbGUIy
      OWxsbGBpaQmSJKFcLl8oe6dSqeD4+PjKXRmtdibewC9JhyWtMPuh8+84DkqlEra3t2HbNr32
      5uYm4vE4YrEYdF3HwsICfD4fFEXBxsYGTk5OhrJ4rhGmaaJUKg16GAzGdxLe66PvdsXN8zyq
      1Sqi0Shs275Qxo4oitjZ2YGu64jH41hfX0elUsHBwQENuJbL5b73bHXvdEhvgn5l+4iiiEAg
      gP39fRSLRYiiCEmSoKoqDMNALBZDOBwGx3HY2dnB+Pg45ufnEQgEhn71f9as3cQnH398bSYs
      BuNVgr9onr2iKEgmk5iamupo1U9y41VVRbVarRNNI8HTd955B6qqYmVlBdVqFaOjo/jyyy+x
      sbGB3d3dvurSuP3+kUgEIyMjddXJV4Vt2zAMA+l0Gqenp5ibm0OpVEIqlcL4+DiSySQMwwDH
      cTg9PcXBwQFmZmYwPj5+bXR7Uqk9/P3f/3cU8zn84Xe/ZQ10GIwLcnR4gGq12vHxPVsKUuV6
      fHyMSCTSdAXH8zxkWYYkSTQraH19HU+ePKH/Jm6eUqkEv99PDYGmaRgbG0M4HMaDBw/w4MED
      RCIRnJyc0OArWRH3eg+N0iYb5ddblgVd11u2gLwsyMr48PAQx8fHEAQB1WoVk5OTUBSF7pBI
      wNc0TczOzlKX1rCt/KvVCk5PT8+9PjMzi5/97D9ArxSx8/n7+B9/91+GMvOLwbgOOI6Dra0t
      OE7ni3pub2/vnM+nkYHzru4lScLHH3+M8fFx3Llz59ysoygKddmkUikYhgFJkiAIAubn52ld
      AQC8fPkSt27dAsdx+OMf/4i3334bmqY1HLAsy0gmk3QVXiwWkc/ncf/+/Y7dT97sJff3RseR
      yS4YDF756prk+VuWhVqthlQqBZ/Ph3A4DE3TIIoi9vf3kUgksLa2hlgshmg0Su+dVHOTeMUw
      cHR0BEEQEIvFGr6/t7eHQj6PUCiEmW+qzxkMxtXT8wTAcRx0Xcfu7i4NSJLXK5UKUqkUOI5D
      JpPBD37wgzpZCPduQZIkHB0d4fT0FMvLy3jy5AlWVlbqKpO9wVrHcWhnsnA4jKdPn+L+/ftt
      V4/t0jRJIRWRcQgEAtQVQyp9rxpSVFcsFmFZFkRRRCaTodXGAGAYBlKpFBKJBN0RkHsKBALw
      +/0DmwDS6TQqlTJu3Jinr2WzWViW1XQCYDAYg6GhsH8nbgTHcSDLMhYXF5FOp7Gzs0N3Aaqq
      wnEc3Lp1i6YmNisII4HMsbExPHv2DIqinGtzR8ZCJgFBEHDnzh06qRDpilZpo63cNt78fkmS
      IIoiDfZelsBdO0gVcalUos9L0zQEg0HkcjmoqlonPucuyCNcJAjfq/uIPHPHcfDJJx/jnXf+
      tO790dHRnsfEYDCujoY7AOC8wWyVMklW8VNTU3XHNjL65LzeFT1xs7TKJGoUZBZFEbVaDTs7
      O1heXm5ZeUxWxI1UPUk8gWTUaJpGi9L6geM40HUdxWKRxgDIcxQEAfl8HkS6WxAERKNRKsPh
      vr+RkRHqauvGmFerVXz4+9/je2+8gWg02tXYNU3Dl198gWIhDwfAP/vJP+/q84zu0XUd5XKZ
      Ta6MC0F3AL3WAxBDH41Gm/rt252L/JsEf1ut1L2TkGmaCAQCdOfQi9uD4zgqXeHWPhpEJ7KD
      gwNMTExAEATYtk3TX8fHx1EqlegEqWkaAoEAzaYiaqTE8He7kud5Hm+8+SbC4XDL40zTxG9/
      /R5sQ8PUbALLqw+QzWbx5UcfQK5l8c7f/Pwit8/oEEmSEIlEBj0MxjVH7NRgNjP+jf7dK62M
      VqsdiKZpSCQSSKfTGB8fb3pcIxcHcbtUKhXaDMetiNpPTNPE9PQ0UqkUVFVFJBLB7u4ufD4f
      TNNEMBjE/Pw8OI5DMplEPp8HcDZxKopCawJ6mQQVRelIuvrJ40d4+NlHmPfbSD79AhVNx40b
      87hxexHF0zQmJie6vjaje5gCLOMyuFIr189fUFmWkc/nkUgk2gaD3QFmwqBVNEnWj2VZSCQS
      qFaryGQymJ+fh2madEIql8u0IG1mZgbAtwVq/bgPSZbx5z/8CVJbz3B7fArz82dVyH/9L/+G
      GSQGY0jI5XIYGRlpexyXSqXocrnTP+ButP0vg06uJ4oijo6OAKCpD9s7JrJSVhSl55XzZWDb
      NrLZLNVUIrEO4v4BgJOTE+oSOj4+xt27d6nLjOd5hMNh2rvhKg2xW6Mpm83CMAwEAoG+6CIx
      GIzOyGWziIyMtLUFYqNgbK+umKuik+vxPI9KpYK5uTlqoFrdB3lPVdW+5Pe3gvj1U6kUZmZm
      6FhevnxJV/7xeByCIFCjTyYJEjwnGUxXvQp3B9K7DRYzGIz+MNJhcsA5F5C3mtSdgtmt4W+l
      ttnLOVohCAJyuRwWFxehaVpb40/cJm4pisvGtm1kMpm67CVZls9tzQzDoC6dSqWCYDCIo6Mj
      JBIJWjBnGEZdUNh9L2QC6JcLZnNzA6FQGOPj4325HoPBuBqaxgDcud29yDJ7j28nvdzsHJ1e
      1zRNJBIJ7O/vIxaLtawHkCQJwWCQBnuvynCapokPP/wQpVIJx8fHmJ2dxcTEBN599116DNH5
      z2QyVO65VqvRXYmu6zBNE4IgQJIknJ6eIh6Pw3Ec8DwPy7LoZNavCeDGjXlWrctgvAI0rQPo
      +kTfGCHLsmgPYaJl345mxqQboTpBEGjz+kgkcu6zJEXSsiyEQqG+rppPTk7wy1/+Er/4xS/A
      cWc9k7/++mtomoa5uTnE43Ga4qmqKnK5HOLxOMrlMk5OTjA3NwfDMFAoFBCPx7GxsYFcLofR
      0VHcvHkThmHg5OSEBo5fe+01lh/OYDDawnvlEdrJJTRCFEX4/X5aoUry6XutLQC6Tyt1HAfR
      aBQbGxt1EwoZB8/zCAaD8Pv9fXeZeN1puVwOwWAQ8Xgc7733HkzTxO7uLra2tmAYBj744AP4
      fD6sr6/jo48+gizL2NjYwOHhIRV/I1pAW1tbOD09xe9+9zsAZ+6kP/zhD325LwaDcb3h3Qay
      lwmAuIdIcxhJklCr1Tpe/TfC6/ppN0m5XVTxeJxmqnjvied5+P3+gffLjcfjME0TuVwOtm2j
      XC7T90jQt1QqIZ/P48aNG8hkMkilUpiengYAhMNhHB8fQ1EU5HI5AMDExAQePHiAxcVFJqvM
      YDA6gncbylbSyM0gxtcwDOqvvqh/uFvjT75s28bExAR2d3fpKp+kRwKg1b2DNP62bePXv/41
      OI7D0tLSuYCwpmmYmZnBV199hUAggKWlJTx9+hTVahXj4+PY3d3FixcvcPv2bTohuGG5+AwG
      o1POWWrv6r9Tg0J2ALVaraUeTzta7RqaGX6ifMlxHILBIMbGxvDo0aO61Eifz9fXwGWjXQxB
      0zTouo6DgwMUCoW64wqFAubm5vDo0SOMj48jFothe3sbo6OjdKK1LAu5XA4HBwcNz89gMBid
      wB0cHDjNjAcJpLbrnXsZWTzudFPvuZtdo9FuhXQbI6mgRMK53yt/y7JgGAYdSzKZxJ07d+A4
      Dk5PT/H1118jFotBlmVMTk6iWq3Csiya5bO/v4+FhQXwPI+9vT1EIhEUCgVMT09jbW0NgiBg
      YmKCxl9yuRxu3LiBUqmEdDqNhYWFvt0rg8G4nnCHh4dOszRPtwFvZswvawIgeFfp3vM3ux7P
      8wiFQnWfH6amKATbtpHL5VAoFKj66IsXLyAIAm7evAld1yEIAlUFFUURlmWhXC5TaW1RFOmX
      qqp975HMYDBeDXigXhK5kwKqq6SXwDFx/fA8T4XdgObppYOE4ziEw2GMjY0hGAxC0zRUq1XY
      tg3TNKFpGjRNg8/nw97eHnK5HLa3txGLxWhqrWVZKBaL2N3dZQFfBoPRM3WFYG7j7jXE3lX4
      oPBKPBC3D+kRDICqeg4rJEtpb28Psixjfn4e6XSadgCzbRu7u7u4desWZFlGpVKpk4EgukcL
      Cwts9c9gMHqmpRpoI7/8VeM18J1o+pC6g+tCqVTC9vY2pqamaBOcaDRKA+iVSoX6/8vlMkzT
      RLVahSiKtF0lcDbRDeMuh8FgXA/aWg93lk2/JJNbyUi4/09kHa6T8QfOVvALCwuQZZm2teQ4
      DicnJ0ilUpiamqKZQkTfKJPJoFwuQ1VV5PN5jI2N9cUlx2AwXl0a7gBauXtIYLdZQLhfaqEk
      gDqIrl0XwbZt2jnN/ZxUVaVNbUiglzS40TQNU1NTSKfTKBaLyOfzWFxcZBMAg8G4EE13AK1S
      L1tVDXv/7d49dPrVaNI5N/ABN3DplWb3QtI94/E4dF0Hx3E0JuA4DjRNo93OJicnmxbuMRgM
      Rqf01BHsslb4F13BXkfjJwgCFEWpy95xHAd7e3uYnp6mTd7d1c0ETdPg9/shSVLf9YwYDMar
      R9cTQKfdwMixzWgXvPQaNpLzTq5/3QK/BFKcVigUoKoqBEGgxp9IPPt8PpRKJUQikbqqanK/
      pKr5Ot4/g8EYHkSgtxX9RXYBJFbg3gEIgtBUQI4YRa/ryTTNnscwSBzHgSAISKfT0DQN8Xgc
      oijCMAzs7+/DcRzaCH58fJy6hEjQmzyrbuSyGQwGwwuXzWb729+RwWAwGEPB/wdbyhSlwtJG
      /wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
